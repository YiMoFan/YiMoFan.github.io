<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胥帆</title>
  <icon>https://www.gravatar.com/avatar/f90a8deeb07db0e48636ee95a27b26f3</icon>
  <subtitle>不善言辞，胆小认生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-12-21T08:21:09.471Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>胥帆</name>
    <email>1747380107@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>扑克牌顺子</title>
    <link href="http://yoursite.com/2020/12/20/%E6%89%91%E5%85%8B%E7%89%8C%E9%A1%BA%E5%AD%90/"/>
    <id>http://yoursite.com/2020/12/20/扑克牌顺子/</id>
    <published>2020-12-20T09:11:49.326Z</published>
    <updated>2020-12-21T08:21:09.471Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子…..LL不高兴了,他想了想,决定大\小 王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何， 如果牌能组成顺子就输出true，否则就输出false。为了方便起见,你可以认为大小王是0。</p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><p>输入5个整数、保证每个数不大于13。</p><blockquote><p>0 3 2 6 4</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>一个布尔值，True 或者False</p><blockquote><p>true</p></blockquote><a id="more"></a><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p> 定义一个<code>arr</code>数组记录0到13数字是否出现，出现则标记为1，否则为0，</p><p>定义min和max记录输入的最小值和最大值。count记录输入0的个数</p><p>只要有重复的输入则一定不行，直接输出<code>false</code>，</p><p>在<code>arr</code>中从min遍历到max，判断这之间数字没有出现的个数即arr[i]为0的个数，若个数小于等于0的个数则说明0可以添加在里面，则<code>ture</code>，否则<code>false</code>。</p><p>若 3 4 6 0 0，则从3 到 6 没有出现5 ，个数为1小于0的个数2，则可以添加一个0为5，其余的在两端。</p><p><strong>时间复杂度：</strong>O(n)</p><p><strong>空间复杂度：</strong>O(n)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isContinuous</span><span class="params">(<span class="keyword">int</span> [] numbers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers.length &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> [] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">13</span>];</span><br><span class="line">        <span class="keyword">int</span> max = -<span class="number">999999</span>;</span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">9999999</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : numbers) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">                arr[num]++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[num] == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                arr[num] = <span class="number">1</span>;</span><br><span class="line">                max = max &gt; num ? max : num;</span><br><span class="line">                min = min &lt; num ? min : num;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> count0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = min+<span class="number">1</span>; i &lt; max; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                count0++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count0 &lt;= arr[<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="题解二"><a href="#题解二" class="headerlink" title="题解二"></a>题解二</h4><p>先对输入的5个数字的字符排序。</p><p>从第一个非零的数开始，后面的数应该与前面的数相差为1，若不为1，说明多余的差则需要0来补齐，若5个数遍历完，还有多余的0的个数，则说明<code>true</code>，否则<code>false</code>。</p><p>若2 4 6 0 0，排序之后为 0 0 2 4 6，第一个非零的为2，后面的一个数减前面的一个数，4 - 2 - 1 = 1，说明需要补一个0，0的个数减1，同理6 - 4 -1 = 1，遍历结束0的个数大于等于0则<code>true</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isContinuous</span><span class="params">(<span class="keyword">int</span> [] numbers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers.length &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> count0 = <span class="number">0</span>;</span><br><span class="line">        Arrays.sort(numbers);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length-<span class="number">1</span>; i ++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                count0++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                count0 -= (numbers[i+<span class="number">1</span>]-numbers[i]-<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (count0 &lt; <span class="number">0</span> || numbers[i+<span class="number">1</span>] == numbers[i]) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子…..LL不高兴了,他想了想,决定大\小 王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何， 如果牌能组成顺子就输出true，否则就输出false。为了方便起见,你可以认为大小王是0。&lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;p&gt;输入5个整数、保证每个数不大于13。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0 3 2 6 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;p&gt;一个布尔值，True 或者False&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;true&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>翻转单词顺序列</title>
    <link href="http://yoursite.com/2020/12/18/%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97/"/>
    <id>http://yoursite.com/2020/12/18/翻转单词顺序列/</id>
    <published>2020-12-18T08:20:42.549Z</published>
    <updated>2020-12-18T08:30:19.782Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一天他向Fish借来翻看，但却读不懂它的意思。例如，“student. a am I”。后来才意识到，这家伙原来把句子单词的顺序翻转了，正确的句子应该是“I am a student.”。Cat对一一的翻转这些单词顺序可不在行，你能帮助他么？</p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><p>一个反序的字符串</p><blockquote><p>nowcoder. a am I</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>翻转单词之后的字符串</p><blockquote><p>I am a nowcoder.</p></blockquote><a id="more"></a><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p>定义两个指针，i 和 end ，分别表示一个单词第一个字母所处的下标，和最后一个字母所处的下标，</p><p>i从字符串的最后往前遍历，当i遇到空格时表示一个单词的开始，输出i到end的单词，</p><p>然后更新end为i，i继续往前遍历，当i==0时表示字符串遍历结束。</p><p>中间需要考虑空格的加入，</p><p><strong>时间复杂度</strong>：O(N)</p><p><strong>空间复杂度</strong>：O(N)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Solution;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="comment">//    private static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">ReverseSentence</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> end = str.length();</span><br><span class="line">        StringBuffer ans = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = str.length()-<span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.charAt(i) == <span class="string">' '</span> || i == <span class="number">0</span>) &#123;</span><br><span class="line">                ans.append(end == str.length() ? <span class="string">""</span> : <span class="string">" "</span>);</span><br><span class="line">                ans.append(str.substring(i == <span class="number">0</span> ? i : i+<span class="number">1</span>,end));</span><br><span class="line">                end = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String str = input.nextLine();</span><br><span class="line">        System.out.println(Main.ReverseSentence(str));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一天他向Fish借来翻看，但却读不懂它的意思。例如，“student. a am I”。后来才意识到，这家伙原来把句子单词的顺序翻转了，正确的句子应该是“I am a student.”。Cat对一一的翻转这些单词顺序可不在行，你能帮助他么？&lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;p&gt;一个反序的字符串&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nowcoder. a am I&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;p&gt;翻转单词之后的字符串&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am a nowcoder.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>PAT(Basic Level)Practice(中文)</title>
    <link href="http://yoursite.com/2020/12/10/PAT-Basic-Level-Practice-%E4%B8%AD%E6%96%87/"/>
    <id>http://yoursite.com/2020/12/10/PAT-Basic-Level-Practice-中文/</id>
    <published>2020-12-10T06:31:06.464Z</published>
    <updated>2020-12-18T08:21:10.074Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1001、害死人不偿命的-3n-1-猜想"><a href="#1001、害死人不偿命的-3n-1-猜想" class="headerlink" title="1001、害死人不偿命的(3n+1)猜想"></a>1001、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528" target="_blank" rel="noopener">害死人不偿命的(3n+1)猜想</a></h4><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？</p><a id="more"></a><p><strong>输入格式</strong></p><p>每个测试输入包含 1 个测试用例，即给出正整数 n 的值。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 3</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出格式</strong></p><p>输出从 n 计算到 1 需要的步数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 5</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span> (n != <span class="number">1</span>) &#123;</span><br><span class="line">        n = !(n&amp;<span class="number">1</span>) ? n &gt;&gt; <span class="number">1</span> : (<span class="number">3</span>*n+<span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,k);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1002、写出这个数"><a href="#1002、写出这个数" class="headerlink" title="1002、写出这个数"></a>1002、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805324509200384" target="_blank" rel="noopener">写出这个数</a></h4><p>读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。 </p><p><strong>输入描述</strong></p><p>每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10^100。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 1234567890987654321123456789</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> yi san wu</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span> <span class="params">(<span class="keyword">char</span> b[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (b[i] != <span class="string">'\0'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i] &gt;= <span class="string">'0'</span>&amp;&amp;b[i] &lt;= <span class="string">'9'</span>)</span><br><span class="line">temp += b[i]-<span class="string">'0'</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printfsum</span> <span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n/<span class="number">10</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> p = n%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">switch</span>(p)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span> : <span class="built_in">printf</span>(<span class="string">"ling"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span> : <span class="built_in">printf</span>(<span class="string">"yi"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> : <span class="built_in">printf</span>(<span class="string">"er"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> : <span class="built_in">printf</span>(<span class="string">"san"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> : <span class="built_in">printf</span>(<span class="string">"si"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span> : <span class="built_in">printf</span>(<span class="string">"wu"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span> : <span class="built_in">printf</span>(<span class="string">"liu"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span> : <span class="built_in">printf</span>(<span class="string">"qi"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span> : <span class="built_in">printf</span>(<span class="string">"ba"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span> : <span class="built_in">printf</span>(<span class="string">"jiu"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span> : <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">printfsum (n/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">printfsum (n%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">105</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%s"</span>,a);</span><br><span class="line">printfsum ( sum(a) );</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1003、我要通过！"><a href="#1003、我要通过！" class="headerlink" title="1003、我要通过！"></a>1003、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805323154440192" target="_blank" rel="noopener">我要通过！</a></h4><p><strong>答案正确</strong>”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“<strong>答案正确</strong>”大派送 —— 只要读入的字符串满足下列条件，系统就输出“<strong>答案正确</strong>”，否则输出“<strong>答案错误</strong>”。</p><p>得到“<strong>答案正确</strong>”的条件是：</p><ol><li>字符串中必须仅有 <code>P</code>、 <code>A</code>、 <code>T</code>这三种字符，不可以包含其它字符；</li><li>任意形如 <code>xPATx</code> 的字符串都可以获得“<strong>答案正确</strong>”，其中 <code>x</code> 或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串；</li><li>如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确的，其中 <code>a</code>、 <code>b</code>、 <code>c</code> 均或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串。</li></ol><p>现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</p><p><strong>输入描述</strong></p><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 n (&lt;10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 8</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> PAT</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> PAAT</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> AAPATAA</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> AAPAATAAAA</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> xPATx</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> PT</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Whatever</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> APAAATAA</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <code>YES</code>，否则输出 <code>NO</code>。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> YES</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> YES</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> YES</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> YES</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> NO</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> NO</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> NO</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> NO</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">110</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%s"</span>,str);</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="keyword">int</span> p_pos,t_pos;</span><br><span class="line"><span class="keyword">int</span> p_num = <span class="number">0</span>,t_num = <span class="number">0</span>,other = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;len; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] == <span class="string">'P'</span>) &#123;</span><br><span class="line">p_num++;</span><br><span class="line">p_pos=i;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">'T'</span>) &#123;</span><br><span class="line">t_num++;</span><br><span class="line">t_pos=i;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (str[i] != <span class="string">'A'</span>) &#123;</span><br><span class="line">other++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p_num != <span class="number">1</span> || t_num != <span class="number">1</span> || other != <span class="number">0</span> || t_pos-p_pos&lt;=<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> x=p_pos,y=t_pos-p_pos<span class="number">-1</span>,z=<span class="built_in">strlen</span>(str)-t_pos<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (z-x == x*(y<span class="number">-1</span>)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1004、成绩排名"><a href="#1004、成绩排名" class="headerlink" title="1004、成绩排名"></a>1004、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805321640296448" target="_blank" rel="noopener">成绩排名</a></h4><p>读入 n（&gt;0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。 </p><p><strong>输入描述</strong></p><p>每个测试输入包含 1 个测试用例，格式为</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第 <span class="number">1</span> 行：正整数 n</span><br><span class="line">第 <span class="number">2</span> 行：第 <span class="number">1</span> 个学生的姓名 学号 成绩</span><br><span class="line">第 <span class="number">3</span> 行：第 <span class="number">2</span> 个学生的姓名 学号 成绩</span><br><span class="line">  ... ... ...</span><br><span class="line">第 n+<span class="number">1</span> 行：第 n 个学生的姓名 学号 成绩</span><br></pre></td></tr></table></figure><p>其中<code>姓名</code>和<code>学号</code>均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 3</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Joe Math990112 89</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Mike CS991301 100</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Mary EE990830 95</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Mike CS991301</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Joe Math990112</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">char</span> num[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">int</span> grade;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;Node,*Pnode;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitNode</span><span class="params">(Pnode p)</span> </span>&#123;</span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Printfstu</span> <span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">Pnode p;</span><br><span class="line">Pnode s;</span><br><span class="line">Pnode max;</span><br><span class="line">Pnode min;</span><br><span class="line">p = (Pnode)<span class="built_in">malloc</span> (<span class="keyword">sizeof</span> (Node));</span><br><span class="line">InitNode(p);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">s = (Pnode ) <span class="built_in">malloc</span> (<span class="keyword">sizeof</span> (Node ));</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%s %s %d"</span>,s-&gt;name,s-&gt;num,&amp;s-&gt;grade);</span><br><span class="line">p-&gt;next = s;</span><br><span class="line">p = s;</span><br><span class="line">p-&gt;next =<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)&#123;</span><br><span class="line">max = p;</span><br><span class="line">min = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (max-&gt;grade &lt; p-&gt;grade)</span><br><span class="line">max = p;</span><br><span class="line"><span class="keyword">if</span> (min-&gt;grade &gt; p-&gt;grade)</span><br><span class="line">min = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%s %s\n"</span>,max-&gt;name,max-&gt;num);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%s %s"</span>,min-&gt;name,min-&gt;num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">Printfstu(n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1005、继续-3n-1-猜想"><a href="#1005、继续-3n-1-猜想" class="headerlink" title="1005、继续(3n+1)猜想"></a>1005、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805320306507776" target="_blank" rel="noopener">继续(3n+1)猜想</a></h4><p>卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。</p><p>当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 n=3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 n=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 n 为“关键数”，如果 n 不能被数列中的其他数字所覆盖。</p><p>现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</p><p><strong>输入描述</strong></p><p>每个测试输入包含 1 个测试用例，第 1 行给出一个正整数 K (&lt;100)，第 2 行给出 K 个互不相同的待验证的正整数 n (1&lt;n≤100)的值，数字间用空格隔开。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">11</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">7</span> <span class="number">6</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;Node, *LinkList;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitNode</span><span class="params">(LinkList p)</span> </span>&#123;</span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateFromNode</span><span class="params">(LinkList p,<span class="keyword">int</span> n)</span> </span>&#123;  <span class="comment">//*p是带头结点的空链表的表头指针，通过键盘输入元素值 </span></span><br><span class="line">LinkList r,s;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">r = p;  <span class="comment">//*r指针动态指向链表的结尾 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">s = (LinkList) <span class="built_in">malloc</span> (<span class="keyword">sizeof</span> (Node));</span><br><span class="line">s-&gt;data = x;</span><br><span class="line">r-&gt;next = s;</span><br><span class="line">r = s;</span><br><span class="line">r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DeNode</span><span class="params">(LinkList p,<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">LinkList pre,r;</span><br><span class="line">pre = p;</span><br><span class="line"><span class="keyword">while</span> (pre-&gt;next != <span class="literal">NULL</span>&amp;&amp;(pre-&gt;next)-&gt;data != x)</span><br><span class="line">pre = pre-&gt;next;</span><br><span class="line"><span class="keyword">if</span> (! (pre-&gt;next)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">r = pre-&gt;next;</span><br><span class="line">pre-&gt;next = r-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(r);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNode</span><span class="params">(LinkList p)</span> </span>&#123;</span><br><span class="line">LinkList r;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">r = p-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (r != <span class="literal">NULL</span>) &#123;</span><br><span class="line">x = r-&gt;data;</span><br><span class="line"><span class="keyword">while</span> (x != <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (x%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">x = x/<span class="number">2</span>;</span><br><span class="line">DeNode(p,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">x = (<span class="number">3</span>*x+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">DeNode(p,x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">r = r-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintfNode</span><span class="params">(LinkList p)</span> </span>&#123;</span><br><span class="line">LinkList r;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i,j,temp;</span><br><span class="line">r = p-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (r != <span class="literal">NULL</span>) &#123;</span><br><span class="line">a[count++] = r-&gt;data;</span><br><span class="line">r = r-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= count<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; count<span class="number">-1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &lt; a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">temp = a[j];</span><br><span class="line">a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>) <span class="built_in">printf</span> (<span class="string">"%d"</span>,a[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">" %d"</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">LinkList p;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">p = (LinkList )<span class="built_in">malloc</span> (<span class="keyword">sizeof</span> (Node));</span><br><span class="line">InitNode(p);</span><br><span class="line">CreateFromNode(p,n);</span><br><span class="line">GetNode(p);</span><br><span class="line">PrintfNode(p);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1006、换个格式输出整数"><a href="#1006、换个格式输出整数" class="headerlink" title="1006、换个格式输出整数"></a>1006、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805318855278592" target="_blank" rel="noopener">换个格式输出整数</a></h4><p>让我们用字母 <code>B</code> 来表示“百”、字母 <code>S</code> 表示“十”，用 <code>12...n</code> 来表示不为零的个位数字 <code>n</code>（&lt;10），换个格式来输出任一个不超过 3 位的正整数。例如 <code>234</code> 应该被输出为 <code>BBSSS1234</code>，因为它有 2 个“百”、3 个“十”、以及个位的 4。 </p><p><strong>输入描述</strong></p><p>每个测试输入包含 1 个测试用例，给出正整数 n（&lt;1000）。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 234</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>每个测试用例的输出占一行，用规定的格式输出 n。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> BBSSS1234</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">a = n/<span class="number">100</span>;</span><br><span class="line">b = (n%<span class="number">100</span>)/<span class="number">10</span>;</span><br><span class="line">c = n%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++) </span><br><span class="line">str[i] = <span class="string">'B'</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = a; i &lt; a+b; i++)</span><br><span class="line">str[i] = <span class="string">'S'</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = a+b; i &lt; a+b+c; i++)</span><br><span class="line">str[i] = i-a-b+<span class="number">1</span>+<span class="string">'0'</span>;</span><br><span class="line">str[a+b+c] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="built_in">puts</span> (str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1007、素数对猜想"><a href="#1007、素数对猜想" class="headerlink" title="1007、素数对猜想"></a>1007、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805317546655744" target="_blank" rel="noopener">素数对猜想</a></h4><p>让我们定义d(n)为：d(n)=p(n+1)−p(n)，其中pi是第i个素数。显然有d1=1，且对于n&gt;1有dn是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。</p><p>现给定任意正整数<code>N</code>(&lt;10^5)，请计算不超过<code>N</code>的满足猜想的素数对的个数。</p><p><strong>输入描述</strong></p><p>输入在一行给出正整数<code>N</code> 。</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 20</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出不超过<code>N</code>的满足猜想的素数对的个数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 4</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sprime</span> <span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">2</span>; i &lt;= (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(x); ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n ; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (sprime(i)) &#123;</span><br><span class="line"><span class="keyword">if</span> (i-temp == <span class="number">2</span>)</span><br><span class="line">count++;</span><br><span class="line">temp = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1008、数组元素循环右移问题"><a href="#1008、数组元素循环右移问题" class="headerlink" title="1008、数组元素循环右移问题"></a>1008、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805316250615808" target="_blank" rel="noopener">数组元素循环右移问题</a></h4><p>一个数组A中存有N（&gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置，即将A中的数据由（A(0)A(1)⋯A(N−1)）变换为（A(N−M)⋯A(N−1)A(0)A(1)⋯A(N−M−1)）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？ </p><p><strong>输入描述</strong></p><p>每个输入包含一个测试用例，第1行输入N（1≤N≤100）和M（≥0）；第2行输入N个整数，之间用空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span> <span class="number">6</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">move</span> <span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp = a[n<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">a[i] = a[i<span class="number">-1</span>];</span><br><span class="line">a[<span class="number">0</span>] = temp;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">m %=n;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">move(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>) <span class="built_in">printf</span> (<span class="string">"%d"</span>,a[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">" %d"</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1009、说反话"><a href="#1009、说反话" class="headerlink" title="1009、说反话"></a>1009、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805314941992960" target="_blank" rel="noopener">说反话</a></h4><p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。 </p><p><strong>输入描述</strong></p><p>测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Hello World Here I Come</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>每个测试用例的输出占一行，输出倒序后的句子。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Come I Here World Hello</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"string.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>];</span><br><span class="line">gets(a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">strlen</span>(a)<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] == <span class="string">' '</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%s"</span>,&amp;a[i+<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c"</span>,a[i]);</span><br><span class="line">a[i] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%s"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1010、一元多项式求导"><a href="#1010、一元多项式求导" class="headerlink" title="1010、一元多项式求导"></a>1010、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805313708867584" target="_blank" rel="noopener">一元多项式求导</a></h4><p>设计函数求一元多项式的导数。（注：x^n^（n为整数）的一阶导数为nx^n−1^。） </p><p><strong>输入描述</strong></p><p>以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过 1000 的整数）。数字间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">4</span> <span class="number">-5</span> <span class="number">2</span> <span class="number">6</span> <span class="number">1</span> <span class="number">-2</span> <span class="number">0</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是 0，但是表示为 <code>0 0</code> </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">12</span> <span class="number">3</span> <span class="number">-10</span> <span class="number">1</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> first = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b) != EOF) &#123;</span><br><span class="line"><span class="keyword">if</span> (first) &#123;  <span class="comment">//是第一项 </span></span><br><span class="line"><span class="keyword">if</span> (b&gt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%d %d"</span>, a*b, b - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"0 0"</span>);</span><br><span class="line">first = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b&gt;<span class="number">0</span>) &#123;  <span class="comment">//不是第一项，且非常数项（因为项数大于1时，常数项不用输出） </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d %d"</span>, a*b, b - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1011、A-B-和-C"><a href="#1011、A-B-和-C" class="headerlink" title="1011、A+B 和 C"></a>1011、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805312417021952" target="_blank" rel="noopener">A+B 和 C</a></h4><p>给定区间 [−2^31^,2^31^] 内的 3 个整数 A、B 和 C，请判断 A+B 是否大于 C。 </p><p><strong>输入描述</strong></p><p>输入第 1 行给出正整数 T (≤10)，是测试用例的个数。随后给出 T 组测试用例，每组占一行，顺序给出 A、B 和 C。整数间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">4</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">&gt; <span class="number">2147483647</span> <span class="number">0</span> <span class="number">2147483646</span></span><br><span class="line">&gt; <span class="number">0</span> <span class="number">-2147483648</span> <span class="number">-2147483647</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每组测试用例，在一行中输出 <code>Case #X: true</code> 如果 A+B&gt;C，否则输出 <code>Case #X: false</code>，其中 <code>X</code> 是测试用例的编号（从 1 开始）。 </p><blockquote><figure class="highlight cal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">Case</span> <span class="string">#1</span>: <span class="literal">false</span></span><br><span class="line">&gt; <span class="keyword">Case</span> <span class="string">#2</span>: <span class="literal">true</span></span><br><span class="line">&gt; <span class="keyword">Case</span> <span class="string">#3</span>: <span class="literal">true</span></span><br><span class="line">&gt; <span class="keyword">Case</span> <span class="string">#4</span>: <span class="literal">false</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">15</span>],b[<span class="number">15</span>],c[<span class="number">15</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf%lf%lf"</span>,&amp;a[i],&amp;b[i],&amp;c[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] + b[i] &gt; c[i])</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Case #%d: true\n"</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Case #%d: false\n"</span>,i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1012、数字分类"><a href="#1012、数字分类" class="headerlink" title="1012、数字分类"></a>1012、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805311146147840" target="_blank" rel="noopener">数字分类</a></h4><p>给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：</p><ul><li>A1 = 能被 5 整除的数字中所有偶数的和；</li><li>A2 = 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 n1−n2+n3−n4⋯；</li><li>A3 = 被 5 除后余 2 的数字的个数；</li><li>A4 = 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；</li><li>A5 = 被 5 除后余 4 的数字中最大数字。</li></ul><p><strong>输入描述</strong></p><p>每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">13</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">20</span> <span class="number">16</span> <span class="number">18</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对给定的 N 个正整数，按题目要求计算 A1~A5 并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。</p><p>若其中某一类数字不存在，则在相应位置输出 <code>N</code>。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">30</span> <span class="number">11</span> <span class="number">2</span> <span class="number">9.7</span> <span class="number">9</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,value;</span><br><span class="line"><span class="keyword">int</span> a1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a2[<span class="number">1000</span>],count = <span class="number">0</span>,k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a3 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> he = <span class="number">0</span>,t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;value);</span><br><span class="line"><span class="keyword">if</span> (value%<span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">a1 += value;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value%<span class="number">5</span> == <span class="number">1</span>)</span><br><span class="line">a2[count++] = value;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value%<span class="number">5</span> == <span class="number">2</span>)</span><br><span class="line">a3++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value%<span class="number">5</span> == <span class="number">3</span>) &#123;</span><br><span class="line">he += value;</span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value%<span class="number">5</span> == <span class="number">4</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (value &gt; max)</span><br><span class="line">max = value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= count<span class="number">-1</span>; j++) &#123;</span><br><span class="line">k += a2[j]*<span class="built_in">pow</span>(<span class="number">-1</span>,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a1)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,a1);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"N"</span>);</span><br><span class="line"><span class="keyword">if</span> (count != <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" %d"</span>,k);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">" N"</span>);</span><br><span class="line"><span class="keyword">if</span> (a3 != <span class="number">0</span>) <span class="built_in">printf</span> (<span class="string">" %d"</span>,a3);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">" N"</span>);</span><br><span class="line"><span class="keyword">if</span> (t != <span class="number">0</span>) <span class="built_in">printf</span> (<span class="string">" %0.1lf"</span>,(<span class="keyword">double</span>)he/t); </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">" N"</span>);</span><br><span class="line"><span class="keyword">if</span> (max != <span class="number">0</span>) <span class="built_in">printf</span> (<span class="string">" %d"</span>,max);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">" N"</span>);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1013、数素数"><a href="#1013、数素数" class="headerlink" title="1013、数素数"></a>1013、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805309963354112" target="_blank" rel="noopener">数素数</a></h4><p>令 Pi 表示第 i 个素数。现任给两个正整数 M≤N≤10^4^，请输出 PM 到 PN 的所有素数。 </p><p><strong>输入描述</strong></p><p>输入在一行中给出 M 和 N，其间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span> <span class="number">27</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出从 PM 到 PN 的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">11</span> <span class="number">13</span> <span class="number">17</span> <span class="number">19</span> <span class="number">23</span> <span class="number">29</span> <span class="number">31</span> <span class="number">37</span> <span class="number">41</span> <span class="number">43</span></span><br><span class="line">&gt; <span class="number">47</span> <span class="number">53</span> <span class="number">59</span> <span class="number">61</span> <span class="number">67</span> <span class="number">71</span> <span class="number">73</span> <span class="number">79</span> <span class="number">83</span> <span class="number">89</span></span><br><span class="line">&gt; <span class="number">97</span> <span class="number">101</span> <span class="number">103</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sushu</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">2</span>; i &lt;= (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(x); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( i &gt; (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(x)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; ; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (sushu(i))</span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">if</span> (count &gt;= m&amp;&amp;sushu(i)) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,i);</span><br><span class="line"><span class="keyword">if</span> ((count-m+<span class="number">1</span>)%<span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">if</span> (((count-m+<span class="number">1</span>)%<span class="number">10</span> != <span class="number">0</span>)&amp;&amp;count != n)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count == n)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1014、福尔摩斯的约会"><a href="#1014、福尔摩斯的约会" class="headerlink" title="1014、福尔摩斯的约会"></a>1014、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805308755394560" target="_blank" rel="noopener">福尔摩斯的约会</a></h4><p>大侦探福尔摩斯接到一张奇怪的字条：<code>我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm</code>。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间<code>星期四 14:04</code>，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 <code>D</code>，代表星期四；第 2 对相同的字符是 <code>E</code> ，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母 <code>A</code> 到 <code>N</code> 表示）；后面两字符串第 1 对相同的英文字母 <code>s</code> 出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。 </p><p><strong>输入描述</strong></p><p>输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 3485djDkxh4hhGE </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 2984akDfkkkkggEdsb </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> s&amp;hgsfdk </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> d&amp;Hyscvnm</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出约会的时间，格式为 <code>DAY HH:MM</code>，其中 <code>DAY</code> 是某星期的 3 字符缩写，即 <code>MON</code> 表示星期一，<code>TUE</code> 表示星期二，<code>WED</code> 表示星期三，<code>THU</code> 表示星期四，<code>FRI</code> 表示星期五，<code>SAT</code> 表示星期六，<code>SUN</code> 表示星期日。题目输入保证每个测试存在唯一解。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> THU 14:04</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> str1[<span class="number">8</span>][<span class="number">4</span>] = &#123; <span class="string">" "</span>,<span class="string">"MON"</span>,<span class="string">"TUE"</span>,<span class="string">"WED"</span>,<span class="string">"THU"</span>,<span class="string">"FRI"</span>,<span class="string">"SAT"</span>,<span class="string">"SUN"</span> &#125;;</span><br><span class="line">  <span class="keyword">char</span> str2[<span class="number">61</span>], str3[<span class="number">61</span>], str4[<span class="number">61</span>], str5[<span class="number">61</span>];</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">  gets(str2);</span><br><span class="line">  gets(str3);</span><br><span class="line">  gets(str4);</span><br><span class="line">  gets(str5);</span><br><span class="line">  <span class="keyword">while</span> (str2[i] != <span class="string">'\0'</span> &amp;&amp; str3[i] != <span class="string">'\0'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">'A'</span> &lt;= str2[i] &amp;&amp; str2[i] &lt;= <span class="string">'G'</span>)<span class="comment">// 第一行和第二行第一对相同位置、相同大写字母（A~G）</span></span><br><span class="line">        <span class="keyword">if</span> (str2[i] == str3[i])</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%s "</span>, str1[str2[i] - <span class="string">'A'</span>+<span class="number">1</span>]);</span><br><span class="line">          flag++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="string">'0'</span> &lt;= str2[i] &amp;&amp; str2[i] &lt;= <span class="string">'9'</span>)<span class="comment">//第一行和第二行第二对相同位置、相同大写字母（A~N）或数字（0~9 ）。 注意：是第二对，找到第二对就应该结循环了！</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (str2[i] == str3[i])</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%02d:"</span>, str2[i] - <span class="string">'0'</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">'A'</span> &lt;= str2[i] &amp;&amp; str2[i] &lt;= <span class="string">'N'</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (str2[i] == str3[i])</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%02d:"</span>, str2[i] - <span class="number">55</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (str4[i] != <span class="string">'\0'</span> &amp;&amp; str5[i] != <span class="string">'\0'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="string">'a'</span> &lt;= str4[i] &amp;&amp; str4[i] &lt;= <span class="string">'z'</span>)||(<span class="string">'A'</span> &lt;= str4[i] &amp;&amp; str4[i] &lt;= <span class="string">'Z'</span>))<span class="comment">//第三行和第四行相同位置相同字母，不分大小写。</span></span><br><span class="line">        <span class="keyword">if</span> (str4[i] == str5[i])</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%02d\n"</span>, i);</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1015、德才论"><a href="#1015、德才论" class="headerlink" title="1015、德才论"></a>1015、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805307551629312" target="_blank" rel="noopener">德才论</a></h4><p>宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”</p><p>现给出一批考生的德才分数，请根据司马光的理论给出录取排名。</p><p><strong>输入描述</strong></p><p>输入第一行给出 3 个正整数，分别为：N（≤105），即考生总数；L（≥60），为录取最低分数线，即德分和才分均不低于 L 的考生才有资格被考虑录取；H（&lt;100），为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于 H，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线 L 的考生也按总分排序，但排在第三类考生之后。</p><p>随后 N 行，每行给出一位考生的信息，包括：<code>准考证号 德分 才分</code>，其中<code>准考证号</code>为 8 位整数，德才分为区间 [0, 100] 内的整数。数字间以空格分隔。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">14</span> <span class="number">60</span> <span class="number">80</span></span><br><span class="line">&gt; <span class="number">10000001</span> <span class="number">64</span> <span class="number">90</span></span><br><span class="line">&gt; <span class="number">10000002</span> <span class="number">90</span> <span class="number">60</span></span><br><span class="line">&gt; <span class="number">10000011</span> <span class="number">85</span> <span class="number">80</span></span><br><span class="line">&gt; <span class="number">10000003</span> <span class="number">85</span> <span class="number">80</span></span><br><span class="line">&gt; <span class="number">10000004</span> <span class="number">80</span> <span class="number">85</span></span><br><span class="line">&gt; <span class="number">10000005</span> <span class="number">82</span> <span class="number">77</span></span><br><span class="line">&gt; <span class="number">10000006</span> <span class="number">83</span> <span class="number">76</span></span><br><span class="line">&gt; <span class="number">10000007</span> <span class="number">90</span> <span class="number">78</span></span><br><span class="line">&gt; <span class="number">10000008</span> <span class="number">75</span> <span class="number">79</span></span><br><span class="line">&gt; <span class="number">10000009</span> <span class="number">59</span> <span class="number">90</span></span><br><span class="line">&gt; <span class="number">10000010</span> <span class="number">88</span> <span class="number">45</span></span><br><span class="line">&gt; <span class="number">10000012</span> <span class="number">80</span> <span class="number">100</span></span><br><span class="line">&gt; <span class="number">10000013</span> <span class="number">90</span> <span class="number">99</span></span><br><span class="line">&gt; <span class="number">10000014</span> <span class="number">66</span> <span class="number">60</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出第一行首先给出达到最低分数线的考生人数 M，随后 M 行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">12</span></span><br><span class="line">&gt; <span class="number">10000013</span> <span class="number">90</span> <span class="number">99</span></span><br><span class="line">&gt; <span class="number">10000012</span> <span class="number">80</span> <span class="number">100</span></span><br><span class="line">&gt; <span class="number">10000003</span> <span class="number">85</span> <span class="number">80</span></span><br><span class="line">&gt; <span class="number">10000011</span> <span class="number">85</span> <span class="number">80</span></span><br><span class="line">&gt; <span class="number">10000004</span> <span class="number">80</span> <span class="number">85</span></span><br><span class="line">&gt; <span class="number">10000007</span> <span class="number">90</span> <span class="number">78</span></span><br><span class="line">&gt; <span class="number">10000006</span> <span class="number">83</span> <span class="number">76</span></span><br><span class="line">&gt; <span class="number">10000005</span> <span class="number">82</span> <span class="number">77</span></span><br><span class="line">&gt; <span class="number">10000002</span> <span class="number">90</span> <span class="number">60</span></span><br><span class="line">&gt; <span class="number">10000014</span> <span class="number">66</span> <span class="number">60</span></span><br><span class="line">&gt; <span class="number">10000008</span> <span class="number">75</span> <span class="number">79</span></span><br><span class="line">&gt; <span class="number">10000001</span> <span class="number">64</span> <span class="number">90</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id,d,c,total,<span class="class"><span class="keyword">class</span>;</span></span><br><span class="line">&#125;Student;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* _a,<span class="keyword">const</span> <span class="keyword">void</span>* _b)</span></span>&#123;</span><br><span class="line">    Student* a=(Student*)_a;</span><br><span class="line">    Student* b=(Student*)_b;</span><br><span class="line">    <span class="keyword">if</span>(a-&gt;class!=b-&gt;class) <span class="keyword">return</span> a-&gt;class-b-&gt;class;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a-&gt;total!=b-&gt;total) <span class="keyword">return</span> b-&gt;total-a-&gt;total;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a-&gt;d!=b-&gt;d) <span class="keyword">return</span> b-&gt;d-a-&gt;d;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> a-&gt;id-b-&gt;id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N,L,H,M=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;N,&amp;L,&amp;H);</span><br><span class="line">    Student stu[N];</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;stu[i].id,&amp;stu[i].d,&amp;stu[i].c);</span><br><span class="line">        stu[i].total=stu[i].d+stu[i].c;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].d&gt;=L&amp;&amp;stu[i].c&gt;=L)&#123;</span><br><span class="line">            M++;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].d&gt;=H&amp;&amp;stu[i].c&gt;=H) stu[i].class=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu[i].c&lt;H&amp;&amp;stu[i].d&gt;=H) stu[i].class=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu[i].d&lt;H&amp;&amp;stu[i].d&lt;H,stu[i].d&gt;=stu[i].c) stu[i].class=<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">else</span> stu[i].class=<span class="number">4</span>;    </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            stu[i].class=<span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    qsort(stu,N,<span class="keyword">sizeof</span>(Student),cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,M);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,stu[i].id,stu[i].d,stu[i].c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1016、部分A-B"><a href="#1016、部分A-B" class="headerlink" title="1016、部分A+B"></a>1016、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328" target="_blank" rel="noopener">部分A+B</a></h4><p>正整数 A 的“DA（为 1 位整数）部分”定义为由 A 中所有 DA 组成的新整数 PA。例如：给定 A=3862767，DA=6，则 A 的“6 部分”PA 是 66，因为 A 中有 2 个 6。</p><p>现给定 A、DA、B、DB，请编写程序计算 PA+PB</p><p><strong>输入描述</strong></p><p>输入在一行中依次给出 A、DA、B、DB，中间以空格分隔，其中 0&lt;A,B&lt;10^10^。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3862767</span> <span class="number">6</span> <span class="number">13530293</span> <span class="number">3</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出 PA+PB 的值。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 399</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> pa,pb;</span><br><span class="line"><span class="keyword">int</span> counta = <span class="number">0</span>,countb =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">15</span>],b[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">int</span> a1 = <span class="number">0</span>,b1 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%s %d %s %d"</span>,a,&amp;pa,b,&amp;pb);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((a[i]-<span class="string">'0'</span>) == pa)</span><br><span class="line">counta++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="built_in">strlen</span>(b); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((b[i]-<span class="string">'0'</span>) == pb)</span><br><span class="line">countb++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= counta; i++)</span><br><span class="line">a1 = a1*<span class="number">10</span>+pa;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= countb; i++)</span><br><span class="line">b1 = b1*<span class="number">10</span>+pb;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,a1+b1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1017、A除以B"><a href="#1017、A除以B" class="headerlink" title="1017、A除以B"></a>1017、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805305181847552" target="_blank" rel="noopener">A除以B</a></h4><p>本题要求计算 A/B，其中 A 是不超过 1000 位的正整数，B 是 1 位正整数。你需要输出商数 Q 和余数 R，使得 A=B×Q+R 成立。 </p><p><strong>输入描述</strong></p><p>输入在一行中依次给出 A 和 B，中间以 1 空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">123456789050987654321</span> <span class="number">7</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中依次输出 Q 和 R，中间以 1 空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">17636684150141093474</span> <span class="number">3</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">while</span> ((c=getchar())!= <span class="string">' '</span>)</span><br><span class="line">a[count++] = c-<span class="string">'0'</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;b);</span><br><span class="line"><span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((i != <span class="number">0</span>)||(a[i]/b != <span class="number">0</span>))</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,(carry*<span class="number">10</span>+a[i])/b);</span><br><span class="line">carry = (carry*<span class="number">10</span>+a[i])%b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">1</span>&amp;&amp;a[<span class="number">0</span>]/b==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"0"</span>);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" %d"</span>,carry);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1018、锤子剪刀布"><a href="#1018、锤子剪刀布" class="headerlink" title="1018、锤子剪刀布"></a>1018、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344" target="_blank" rel="noopener">锤子剪刀布</a></h4><p>现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。 </p><p><strong>输入描述</strong></p><p>输入第 1 行给出正整数 N（≤10^5^），即双方交锋的次数。随后 N 行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。<code>C</code> 代表“锤子”、<code>J</code> 代表“剪刀”、<code>B</code> 代表“布”，第 1 个字母代表甲方，第 2 个代表乙方，中间有 1 个空格。 </p><blockquote><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span></span><br><span class="line">&gt; C <span class="keyword">J</span></span><br><span class="line"><span class="keyword">&gt; </span><span class="keyword">J </span><span class="keyword">B</span></span><br><span class="line"><span class="keyword">&gt; </span>C <span class="keyword">B</span></span><br><span class="line"><span class="keyword">&gt; </span><span class="keyword">B </span><span class="keyword">B</span></span><br><span class="line"><span class="keyword">&gt; </span><span class="keyword">B </span>C</span><br><span class="line">&gt; C C</span><br><span class="line">&gt; C <span class="keyword">B</span></span><br><span class="line"><span class="keyword">&gt; </span><span class="keyword">J </span><span class="keyword">B</span></span><br><span class="line"><span class="keyword">&gt; </span><span class="keyword">B </span>C</span><br><span class="line">&gt; <span class="keyword">J </span><span class="keyword">J</span></span><br><span class="line"><span class="keyword">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出第 1、2 行分别给出甲、乙的胜、平、负次数，数字间以 1 个空格分隔。第 3 行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有 1 个空格。如果解不唯一，则输出按字母序最小的解。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line">&gt; B B</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">( )</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d\n"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> countA = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> countB = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> c1,c2;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">3</span>];</span><br><span class="line">gets(str);</span><br><span class="line">c1 = str[<span class="number">0</span>];</span><br><span class="line">c2 = str[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span> (c1 == <span class="string">'C'</span>&amp;&amp;c2 == <span class="string">'B'</span>) &#123;</span><br><span class="line">countB++;</span><br><span class="line">b[<span class="number">0</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c1 == <span class="string">'C'</span>&amp;&amp;c2 == <span class="string">'J'</span>) &#123;</span><br><span class="line">countA++;</span><br><span class="line">a[<span class="number">1</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c1 == <span class="string">'J'</span>&amp;&amp;c2 == <span class="string">'C'</span>) &#123;</span><br><span class="line">countB++;</span><br><span class="line">b[<span class="number">1</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c1 == <span class="string">'J'</span>&amp;&amp;c2 == <span class="string">'B'</span>) &#123;</span><br><span class="line">countA++;</span><br><span class="line">a[<span class="number">2</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c1 == <span class="string">'B'</span>&amp;&amp;c2 == <span class="string">'C'</span>) &#123;</span><br><span class="line">countA++;</span><br><span class="line">a[<span class="number">0</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c1 == <span class="string">'B'</span>&amp;&amp;c2 == <span class="string">'J'</span>) &#123;</span><br><span class="line">countB++;</span><br><span class="line">b[<span class="number">2</span>]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d %d %d\n"</span>,countA,n-(countA+countB),countB);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d %d %d\n"</span>,countB,n-(countA+countB),countA);</span><br><span class="line"><span class="keyword">char</span> flagA,flagB;</span><br><span class="line"><span class="keyword">int</span> temp = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i]&gt;=a[temp])</span><br><span class="line">temp = i;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span> (temp == <span class="number">0</span>) flagA = <span class="string">'B'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp == <span class="number">1</span>) flagA = <span class="string">'C'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp == <span class="number">2</span>) flagA = <span class="string">'J'</span>;</span><br><span class="line">temp = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i]&gt;=b[temp])</span><br><span class="line">temp = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (temp == <span class="number">0</span>) flagB = <span class="string">'B'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp == <span class="number">1</span>) flagB = <span class="string">'C'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp == <span class="number">2</span>) flagB = <span class="string">'J'</span>;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c %c\n"</span>,flagA,flagB);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1019、数字黑洞"><a href="#1019、数字黑洞" class="headerlink" title="1019、数字黑洞"></a>1019、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968" target="_blank" rel="noopener">数字黑洞</a></h4><p>给定任一个各位数字不完全相同的 4 位正整数，如果我们先把 4 个数字按非递增排序，再按非递减排序，然后用第 1 个数字减第 2 个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的 <code>6174</code>，这个神奇的数字也叫 Kaprekar 常数。</p><p>例如，我们从<code>6767</code>开始，将得到</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7766</span> - <span class="number">6677</span> = <span class="number">1089</span></span><br><span class="line"><span class="number">9810</span> - <span class="number">0189</span> = <span class="number">9621</span></span><br><span class="line"><span class="number">9621</span> - <span class="number">1269</span> = <span class="number">8352</span></span><br><span class="line"><span class="number">8532</span> - <span class="number">2358</span> = <span class="number">6174</span></span><br><span class="line"><span class="number">7641</span> - <span class="number">1467</span> = <span class="number">6174</span></span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p>现给定任意 4 位正整数，请编写程序演示到达黑洞的过程。</p><p><strong>输入描述</strong></p><p>输入给出一个 (0,10^4^) 区间内的正整数 N。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 6767</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>如果 N 的 4 位数字全相等，则在一行内输出 <code>N - N = 0000</code>；否则将计算的每一步在一行内输出，直到 <code>6174</code> 作为差出现，输出格式见样例。注意每个数字按 <code>4</code> 位数格式输出。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">7766</span> - <span class="number">6677</span> = <span class="number">1089</span></span><br><span class="line">&gt; <span class="number">9810</span> - <span class="number">0189</span> = <span class="number">9621</span></span><br><span class="line">&gt; <span class="number">9621</span> - <span class="number">1269</span> = <span class="number">8352</span></span><br><span class="line">&gt; <span class="number">8532</span> - <span class="number">2358</span> = <span class="number">6174</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">4</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">a[i] = n%<span class="number">10</span>;</span><br><span class="line">n /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">4</span> ; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &lt; a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">temp = a[j];</span><br><span class="line">a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>,min = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">max = max*<span class="number">10</span>+a[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">min = min*<span class="number">10</span>+a[i];</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%04d - %04d = %04d\n"</span>,max,min,max-min);</span><br><span class="line">n = max-min;</span><br><span class="line">&#125;<span class="keyword">while</span> ((n != <span class="number">6174</span>)&amp;&amp;(n != <span class="number">0</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1020、月饼"><a href="#1020、月饼" class="headerlink" title="1020、月饼"></a>1020、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200" target="_blank" rel="noopener">月饼</a></h4><p>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。</p><p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45/2 = 94.5（亿元）。</p><p><strong>输入描述</strong></p><p>每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 D 表示市场最大需求量。随后一行给出 N 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 N 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">20</span></span><br><span class="line">&gt; <span class="number">18</span> <span class="number">15</span> <span class="number">10</span></span><br><span class="line">&gt; <span class="number">75</span> <span class="number">72</span> <span class="number">45</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 94.50</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">double</span> d;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %lf"</span>,&amp;n,&amp;d);</span><br><span class="line"><span class="keyword">double</span> arr1[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">double</span> arr2[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">double</span> arr3[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入数据 </span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf"</span>,&amp;arr1[i]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf"</span>,&amp;arr2[i]);</span><br><span class="line">arr3[i] = (<span class="keyword">double</span>)arr2[i] / arr1[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将单位价格由小到大排序 </span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= (n<span class="number">-1</span>); i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; (n<span class="number">-1</span>); j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr3[j] &lt; arr3[j+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">double</span> temp;</span><br><span class="line">temp = arr3[j];</span><br><span class="line">arr3[j] = arr3[j+<span class="number">1</span>];</span><br><span class="line">arr3[j+<span class="number">1</span>] = temp;</span><br><span class="line">temp = arr1[j];</span><br><span class="line">arr1[j] = arr1[j+<span class="number">1</span>];</span><br><span class="line">arr1[j+<span class="number">1</span>] = arr1[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> price = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((d-arr1[i]) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">price += d*arr3[i];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">price += arr1[i] * arr3[i];</span><br><span class="line">d -= arr1[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%.2lf"</span>,price);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1021、个位数统计"><a href="#1021、个位数统计" class="headerlink" title="1021、个位数统计"></a>1021、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296" target="_blank" rel="noopener">个位数统计</a></h4><p>给定一个 k 位整数 N=d(k−1)10^k−1^+⋯+d(1)10^1+d(0) (0≤di≤9, i=0,⋯,k−1, d(k−1)&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 N=100311，则有 2 个 0，3 个 1，和 1 个 3。 </p><p><strong>输入描述</strong></p><p>每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 N。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 100311</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对 N 中每一种不同的个位数字，以 <code>D:M</code> 的格式在一行中输出该位数字 <code>D</code> 及其在 N 中出现的次数 <code>M</code>。要求按 <code>D</code> 的升序输出。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 0:2</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 1:3</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 3:1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">gets (a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span> (a); i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">9</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((a[i]-<span class="string">'0'</span>) == j) &#123;</span><br><span class="line">b[j]++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d:%d\n"</span>,i,b[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1022、D进制的A-B"><a href="#1022、D进制的A-B" class="headerlink" title="1022、D进制的A+B"></a>1022、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344" target="_blank" rel="noopener">D进制的A+B</a></h4><p>输入两个非负 10 进制整数 A 和 B (≤2^30^−1)，输出 A+B 的 D (1&lt;D≤10)进制数。 </p><p><strong>输入描述</strong></p><p>输入在一行中依次给出 3 个整数 A、B 和 D。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">123</span> <span class="number">456</span> <span class="number">8</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出 A+B 的 D 进制数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 1103</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">jinzhi</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a / b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,a%b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jinzhi(a / b,b);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>,&amp;a,&amp;b,&amp;d);</span><br><span class="line"></span><br><span class="line">jinzhi(a+b,d);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1023、组个最小数"><a href="#1023、组个最小数" class="headerlink" title="1023、组个最小数"></a>1023、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560" target="_blank" rel="noopener">组个最小数</a></h4><p>给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p><p><strong>输入描述</strong></p><p>输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">2</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出能够组成的最小的数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 10015558</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">50</span>],b[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b[i]; j++) </span><br><span class="line">a[count++] = i;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (a[k] == <span class="number">0</span>) k++;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,a[k]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,a[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = k+<span class="number">1</span>; i &lt; count; i++)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,a[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1024、科学计数法"><a href="#1024、科学计数法" class="headerlink" title="1024、科学计数法"></a>1024、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168" target="_blank" rel="noopener">科学计数法</a></h4><p>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式 [+-][1-9]<code>.</code>[0-9]+E[+-][0-9]+，即数字的整数部分只有 1 位，小数部分至少有 1 位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p><p>现以科学计数法的格式给出实数 A，请编写程序按普通数字表示法输出 A，并保证所有有效位都被保留。</p><p><strong>输入描述</strong></p><p>每个输入包含 1 个测试用例，即一个以科学计数法表示的实数 A。该数字的存储长度不超过 9999 字节，且其指数的绝对值不超过 9999。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> +1.23400E-03</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个测试用例，在一行中按普通数字表示法输出 A，并保证所有有效位都被保留，包括末尾的 0。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.00123400</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> str1[<span class="number">10000</span>], str2[<span class="number">10000</span>], ch1, ch2;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, A = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, len = <span class="number">0</span>;</span><br><span class="line">  ch2 = getchar();                         <span class="comment">//获取正负号</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    ch1 = getchar();                       <span class="comment">//获取小数部分，舍弃小数点和E,因为小数点永远在第二位，所以不需要记住小数点的位置</span></span><br><span class="line">    <span class="keyword">if</span> (ch1 == <span class="string">'.'</span>)</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ch1 != <span class="string">'E'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      str1[i] = ch1;</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str2);                       <span class="comment">//获取指数部分</span></span><br><span class="line">  <span class="built_in">sscanf</span>(str2, <span class="string">"%d"</span>, &amp;A);                  <span class="comment">//将字符串转化为整数</span></span><br><span class="line">  <span class="keyword">if</span> (A &lt; <span class="number">0</span>)                               <span class="comment">//当指数小于0时</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (ch2 == <span class="string">'-'</span>)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"-0."</span>);                       <span class="comment">//注意输出时‘+’要丢弃</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"0."</span>);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; (<span class="number">0</span> - A); j++)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%c"</span>, str1[j]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (A == <span class="number">0</span>)                        <span class="comment">//当指数等于0时</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (ch2 == <span class="string">'-'</span>)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (j != <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, str1[j]);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">".%c"</span>, str1[j]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>                                     <span class="comment">//当指数大于0时</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (ch2 == <span class="string">'-'</span>)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"-"</span>);                         <span class="comment">//丢弃'+'号</span></span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ((j - <span class="number">1</span>) == A)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, str1[j]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> (A &gt;= i &amp;&amp;j == (i<span class="number">-1</span>))            <span class="comment">//当指数大于0且能能使第一部分的数字变为整数时</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%c"</span>, str1[j]);</span><br><span class="line">          <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt;=(A - i); k++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%c"</span>, str1[j]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1025、反转链表"><a href="#1025、反转链表" class="headerlink" title="1025、反转链表"></a>1025、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168" target="_blank" rel="noopener">反转链表</a></h4><p>给定一个常数 K 以及一个单链表 L，请编写程序将 L 中每 K 个结点反转。例如：给定 L 为 1→2→3→4→5→6，K 为 3，则输出应该为 3→2→1→6→5→4；如果 K 为 4，则输出应该为 4→3→2→1→5→6，即最后不到 K 个元素不反转。 </p><p><strong>输入描述</strong></p><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出第 1 个结点的地址、结点总个数正整数 N (≤105)、以及正整数 K (≤N)，即要求反转的子链结点的个数。结点的地址是 5 位非负整数，NULL 地址用 −1 表示。</p><p>接下来有 N 行，每行格式为：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Address </span><span class="meta">Data</span> Next</span><br></pre></td></tr></table></figure><p>其中 <code>Address</code> 是结点地址，<code>Data</code> 是该结点保存的整数数据，<code>Next</code> 是下一结点的地址。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">00100</span> <span class="number">6</span> <span class="number">4</span></span><br><span class="line">&gt; <span class="number">00000</span> <span class="number">4</span> <span class="number">99999</span></span><br><span class="line">&gt; <span class="number">00100</span> <span class="number">1</span> <span class="number">12309</span></span><br><span class="line">&gt; <span class="number">68237</span> <span class="number">6</span> <span class="number">-1</span></span><br><span class="line">&gt; <span class="number">33218</span> <span class="number">3</span> <span class="number">00000</span></span><br><span class="line">&gt; <span class="number">99999</span> <span class="number">5</span> <span class="number">68237</span></span><br><span class="line">&gt; <span class="number">12309</span> <span class="number">2</span> <span class="number">33218</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">00000</span> <span class="number">4</span> <span class="number">33218</span></span><br><span class="line">&gt; <span class="number">33218</span> <span class="number">3</span> <span class="number">12309</span></span><br><span class="line">&gt; <span class="number">12309</span> <span class="number">2</span> <span class="number">00100</span></span><br><span class="line">&gt; <span class="number">00100</span> <span class="number">1</span> <span class="number">99999</span></span><br><span class="line">&gt; <span class="number">99999</span> <span class="number">5</span> <span class="number">68237</span></span><br><span class="line">&gt; <span class="number">68237</span> <span class="number">6</span> <span class="number">-1</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> node[<span class="number">100000</span>][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">list</span>[<span class="number">100000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, k, start;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;start, &amp;n, &amp;k) != EOF)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">int</span> addr, data, next;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;addr, &amp;data, &amp;next);</span><br><span class="line">      node[addr][<span class="number">0</span>] = data, node[addr][<span class="number">1</span>] = next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">list</span>[<span class="number">0</span>] = start;</span><br><span class="line">    <span class="keyword">int</span> last = start;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      node[last][<span class="number">2</span>] = last;</span><br><span class="line">      last = <span class="built_in">list</span>[i] = node[last][<span class="number">1</span>];</span><br><span class="line">      count++;</span><br><span class="line">      <span class="keyword">if</span> (node[last][<span class="number">1</span>] == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> s, e;</span><br><span class="line">    s = <span class="number">0</span>;</span><br><span class="line">    e = s + k;</span><br><span class="line">    <span class="keyword">while</span> (e &lt;= count &amp;&amp; e &gt; s)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = e - <span class="number">1</span>; j &gt;= s; j--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == k - <span class="number">1</span>)</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%05d %d "</span>, <span class="built_in">list</span>[j], node[<span class="built_in">list</span>[j]][<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%05d\n%05d %d "</span>, <span class="built_in">list</span>[j], <span class="built_in">list</span>[j], node[<span class="built_in">list</span>[j]][<span class="number">0</span>]);</span><br><span class="line">      &#125;</span><br><span class="line">      s = e;</span><br><span class="line">      e = s + k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = s; j &lt; count; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d "</span>, <span class="built_in">list</span>[j], node[<span class="built_in">list</span>[j]][<span class="number">0</span>]);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d\n%05d %d "</span>, <span class="built_in">list</span>[j], <span class="built_in">list</span>[j], node[<span class="built_in">list</span>[j]][<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1026、程序运行时间"><a href="#1026、程序运行时间" class="headerlink" title="1026、程序运行时间"></a>1026、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336" target="_blank" rel="noopener">程序运行时间</a></h4><p>要获得一个 C 语言程序的运行时间，常用的方法是调用头文件 time.h，其中提供了 clock() 函数，可以捕捉从程序开始运行到 clock() 被调用时所耗费的时间。这个时间单位是 clock tick，即“时钟打点”。同时还有一个常数 CLK_TCK，给出了机器时钟每秒所走的时钟打点数。于是为了获得一个函数 f 的运行时间，我们只要在调用 f 之前先调用 clock()，获得一个时钟打点数 C1；在 f 执行完成后再调用 clock()，获得另一个时钟打点数 C2；两次获得的时钟打点数之差 (C2-C1) 就是 f 运行所消耗的时钟打点数，再除以常数 CLK_TCK，就得到了以秒为单位的运行时间。</p><p>这里不妨简单假设常数 CLK_TCK 为 100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。</p><p><strong>输入描述</strong></p><p>输入在一行中顺序给出 2 个整数 C1 和 C2。注意两次获得的时钟打点数肯定不相同，即 C1 &lt; C2，并且取值在 [0,10^7^]。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">123</span> <span class="number">4577973</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出被测函数运行的时间。运行时间必须按照 <code>hh:mm:ss</code>（即2位的 <code>时:分:秒</code>）格式输出；不足 1 秒的时间四舍五入到秒。 </p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 12<span class="selector-pseudo">:42</span><span class="selector-pseudo">:59</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> c1,c2;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"><span class="keyword">int</span> h,m,s;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;c1,&amp;c2);</span><br><span class="line">count = (c2-c1+<span class="number">50</span>) / <span class="number">100</span>;  <span class="comment">//加50为了四舍五入 </span></span><br><span class="line">h = count / <span class="number">3600</span>;</span><br><span class="line">m = (count-h*<span class="number">3600</span>) / <span class="number">60</span>;</span><br><span class="line">s = count % <span class="number">60</span>;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%02d:%02d:%02d\n"</span>,h,m,s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1027、打印沙漏"><a href="#1027、打印沙漏" class="headerlink" title="1027、打印沙漏"></a>1027、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328" target="_blank" rel="noopener">打印沙漏</a></h4><p>本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">****<span class="strong">*</span></span><br><span class="line"><span class="strong"> *</span>*<span class="strong">*</span></span><br><span class="line"><span class="strong">  *</span></span><br><span class="line"><span class="code"> ***</span></span><br><span class="line">****<span class="strong">*</span></span><br></pre></td></tr></table></figure><p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p><p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p><p><strong>输入描述</strong></p><p>输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 19 *</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> *****</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  ***</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   *</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  ***</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> *****</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 2</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %c"</span>,&amp;n,&amp;c);</span><br><span class="line"><span class="keyword">if</span> ( n &lt; <span class="number">7</span>) &#123;  <span class="comment">//当n小于7时只有一行 </span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c\n"</span>,c);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,n<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> count = n;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;  <span class="comment">//记层数 </span></span><br><span class="line">count -= <span class="number">7</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (count &lt; <span class="number">0</span>) &#123;</span><br><span class="line">count = <span class="number">10</span>+(i<span class="number">-1</span>)*<span class="number">4</span>+count;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">count -= (<span class="number">10</span>+i*<span class="number">4</span>);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">n = i;</span><br><span class="line"><span class="keyword">for</span> ( ; <span class="built_in">fabs</span>(n) &gt;= <span class="number">0</span>; n--) &#123;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">m = i-<span class="built_in">fabs</span>(n);</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" "</span>);</span><br><span class="line">m = <span class="number">2</span>*<span class="built_in">fabs</span>(n)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c"</span>,c);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">if</span> ((-n) == i)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1028、人口普查"><a href="#1028、人口普查" class="headerlink" title="1028、人口普查"></a>1028、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104" target="_blank" rel="noopener">人口普查</a></h4><p>某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。</p><p>这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。</p><p><strong>输入描述</strong></p><p>输入在第一行给出正整数 N，取值在(0,10^5^]；随后 N 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 <code>yyyy/mm/dd</code>（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span></span><br><span class="line">&gt; John <span class="number">2001</span>/<span class="number">05</span>/<span class="number">12</span></span><br><span class="line">&gt; Tom <span class="number">1814</span>/<span class="number">09</span>/<span class="number">06</span></span><br><span class="line">&gt; Ann <span class="number">2121</span>/<span class="number">01</span>/<span class="number">30</span></span><br><span class="line">&gt; James <span class="number">1814</span>/<span class="number">09</span>/<span class="number">05</span></span><br><span class="line">&gt; Steve <span class="number">1967</span>/<span class="number">11</span>/<span class="number">20</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 3 Tom John</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, count = <span class="number">0</span>, i;</span><br><span class="line">  <span class="keyword">char</span> name[<span class="number">6</span>], YearMonthDay[<span class="number">11</span>], Maxname[<span class="number">6</span>], Minname[<span class="number">6</span>];</span><br><span class="line">  <span class="keyword">char</span> Min[<span class="number">11</span>] = <span class="string">"1814/09/05"</span>;</span><br><span class="line">  <span class="keyword">char</span> Max[<span class="number">11</span>] = <span class="string">"2014/09/07"</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;N; i++) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, name, YearMonthDay);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(YearMonthDay, <span class="string">"1814/09/05"</span>)&gt;<span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(<span class="string">"2014/09/07"</span>, YearMonthDay)&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      count++;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">strcmp</span>(YearMonthDay, Min)&gt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(Min, YearMonthDay);</span><br><span class="line">        <span class="built_in">strcpy</span>(Minname, name);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Max, YearMonthDay)&gt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(Max, YearMonthDay);</span><br><span class="line">        <span class="built_in">strcpy</span>(Maxname, name);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (count&gt;<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %s %s\n"</span>, count, Maxname, Minname);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1029、旧键盘"><a href="#1029、旧键盘" class="headerlink" title="1029、旧键盘"></a>1029、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488" target="_blank" rel="noopener">旧键盘</a></h4><p>旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及实际被输入的文字，请你列出肯定坏掉的那些键。 </p><p><strong>输入描述</strong></p><p>输入在 2 行中分别给出应该输入的文字、以及实际被输入的文字。每段文字是不超过 80 个字符的串，由字母 A-Z（包括大、小写）、数字 0-9、以及下划线 <code>_</code>（代表空格）组成。题目保证 2 个字符串均非空。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 7_This_is_a_test</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> _hs_s_a_es</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>按照发现顺序，在一行中输出坏掉的键。其中英文字母只输出大写，每个坏键只输出一次。题目保证至少有 1 个坏键。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 7TI</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">81</span>],b[<span class="number">81</span>],c[<span class="number">81</span>];</span><br><span class="line"><span class="keyword">int</span> i,j=<span class="number">0</span>,k,t,h;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,a,b);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;a[i];i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==b[j])</span><br><span class="line">&#123;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">t=<span class="number">1</span>;</span><br><span class="line"><span class="comment">/*for(k=0;c[k];k++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">if(c[k]==toupper(a[i]))</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">t=0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">for</span>(h=<span class="number">0</span>;h&lt;k;h++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c[h]==<span class="built_in">toupper</span>(a[i]))</span><br><span class="line">&#123;</span><br><span class="line">t=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">c[k++]=<span class="built_in">toupper</span>(a[i]);</span><br><span class="line">c[k]=<span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf("%d\n",k);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;c[i];i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,c[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1030、完美数列"><a href="#1030、完美数列" class="headerlink" title="1030、完美数列"></a>1030、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224" target="_blank" rel="noopener">完美数列</a></h4><p>给定一个正整数数列，和正整数 p，设这个数列中的最大值是 M，最小值是 m，如果 M≤mp，则称这个数列是完美数列。</p><p>现在给定参数 p 和一些正整数，请你从中选择尽可能多的数构成一个完美数列。</p><p><strong>输入描述</strong></p><p>输入第一行给出两个正整数 N 和 p，其中 N（≤10^5^）是输入的正整数的个数，p（≤10^9^）是给定的参数。第二行给出 N 个正整数，每个数不超过 10^9^。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span> <span class="number">8</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">3</span> <span class="number">20</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 8</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span> v[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> v[], <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> arr[<span class="number">100000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">  <span class="keyword">int</span> i, j, count = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">double</span> N, P, temp;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;N, &amp;P);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  qsort(arr, <span class="number">0</span>, N - <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;  N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    temp = arr[i] * P;</span><br><span class="line">      <span class="keyword">for</span> (j = count; j&lt;N; j++) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[j]&gt;temp)</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">if</span> (j - i &gt;= max)</span><br><span class="line">           max = j - i + <span class="number">1</span>;        </span><br><span class="line">    &#125;</span><br><span class="line">    count = j;  </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, max);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span> v[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span>        <span class="comment">// #include &lt;stdlib.h&gt; 中有 qsort这个函数 不需要自己写 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i, last;</span><br><span class="line">  <span class="keyword">if</span> (left &gt;= right)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  swap(v, left, (left + right) / <span class="number">2</span>);</span><br><span class="line">  last = left;</span><br><span class="line">  <span class="keyword">for</span> (i = left + <span class="number">1</span>; i &lt;= right; i++)</span><br><span class="line">    <span class="keyword">if</span> (v[i] &lt; v[left])</span><br><span class="line">      swap(v, ++last, i);</span><br><span class="line">  swap(v, left, last);</span><br><span class="line">  qsort(v, left, last - <span class="number">1</span>);</span><br><span class="line">  qsort(v, last + <span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> v[], <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> temp;</span><br><span class="line">  temp = v[i];</span><br><span class="line">  v[i] = v[j];</span><br><span class="line">  v[j] = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1031、查验身份证"><a href="#1031、查验身份证" class="headerlink" title="1031、查验身份证"></a>1031、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392" target="_blank" rel="noopener">查验身份证</a></h4><p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：</p><p>首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值<code>Z</code>；最后按照以下关系对应<code>Z</code>值与校验码<code>M</code>的值：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z：<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">M：<span class="number">1</span> <span class="number">0</span> X <span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。</p><p><strong>输入描述</strong></p><p>输入第一行给出正整数N（≤100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 4</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 320124198808240056</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 12010X198901011234</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 110108196711301866</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 37070419881216001X</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出<code>All passed</code>。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 12010X198901011234</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 110108196711301866</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 37070419881216001X</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> ID[<span class="number">100</span>][<span class="number">19</span>];</span><br><span class="line">  <span class="keyword">char</span> arr1[<span class="number">19</span>];</span><br><span class="line">  <span class="keyword">char</span> Z[<span class="number">11</span>] = &#123; <span class="string">'1'</span>,<span class="string">'0'</span>,<span class="string">'X'</span>,<span class="string">'9'</span>,<span class="string">'8'</span>,<span class="string">'7'</span>,<span class="string">'6'</span>,<span class="string">'5'</span>,<span class="string">'4'</span>,<span class="string">'3'</span>,<span class="string">'2'</span> &#125;;</span><br><span class="line">  <span class="keyword">int</span> N, i, j, cnt, flag = <span class="number">0</span>, flag1 = <span class="number">0</span>, count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> arr[<span class="number">17</span>] = &#123; <span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span> &#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;N ; i++)</span><br><span class="line">  &#123;    </span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">17</span>; j++)                <span class="comment">// 将前17位加权求和 如果中间有非数字 则将它标记为1</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;arr1[j]);</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">'0'</span> &lt;= arr1[j] &amp;&amp; arr1[j] &lt;= <span class="string">'9'</span>)</span><br><span class="line">        count += arr[j] * (arr1[j] - <span class="number">48</span>);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        flag1 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    count = count % <span class="number">11</span>;                     <span class="comment">// 求Z值</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;arr1[<span class="number">17</span>]);                 <span class="comment">//保存最后一位</span></span><br><span class="line">    arr1[<span class="number">18</span>] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">if</span> (arr1[<span class="number">17</span>]!= Z[count++] || flag1 == <span class="number">1</span>)   <span class="comment">//如果Z与校验码不相等或者是该字符串被标记为1 则保存</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">strcpy</span>(ID[flag], arr1);</span><br><span class="line">      flag1 = <span class="number">0</span>;</span><br><span class="line">      flag++;                                  <span class="comment">//flag计数器 记录有几条字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"All passed"</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; flag; i++)                 <span class="comment">//输出</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, ID[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1032、挖掘机技术哪家强"><a href="#1032、挖掘机技术哪家强" class="headerlink" title="1032、挖掘机技术哪家强"></a>1032、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032" target="_blank" rel="noopener">挖掘机技术哪家强</a></h4><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。 </p><p><strong>输入描述</strong></p><p>输入在第 1 行给出不超过 10^5^ 的正整数 N，即参赛人数。随后 N 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">65</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">80</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">100</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">70</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">40</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">0</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">2</span> <span class="number">150</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;i,&amp;x);</span><br><span class="line"><span class="keyword">if</span> (i &gt; max) max = i;</span><br><span class="line">a[i<span class="number">-1</span>] += x;</span><br><span class="line">&#125;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; max<span class="number">-1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[i]) i = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d %d\n"</span>,i+<span class="number">1</span>,a[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1033、旧键盘打字"><a href="#1033、旧键盘打字" class="headerlink" title="1033、旧键盘打字"></a>1033、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672" target="_blank" rel="noopener">旧键盘打字</a></h4><p>旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及坏掉的那些键，打出的结果文字会是怎样？ </p><p><strong>输入描述</strong></p><p>输入在 2 行中分别给出坏掉的那些键、以及应该输入的文字。其中对应英文字母的坏键以大写给出；每段文字是不超过 105 个字符的串。可用的字符包括字母 [<code>a</code>-<code>z</code>, <code>A</code>-<code>Z</code>]、数字 <code>0</code>-<code>9</code>、以及下划线 <code>_</code>（代表空格）、<code>,</code>、<code>.</code>、<code>-</code>、<code>+</code>（代表上档键）。题目保证第 2 行输入的文字串非空。</p><p>注意：如果上档键坏掉了，那么大写的英文字母无法被打出。</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 7+IE.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 7_This_is_a_test.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出能够被打出的结果文字。如果没有一个字符能被打出，则输出空行。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> _hs_s_a_tst</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> str[<span class="number">67</span>];</span><br><span class="line"> <span class="keyword">char</span> ch;</span><br><span class="line">  <span class="keyword">int</span> j = <span class="number">0</span>, i = <span class="number">0</span>, flag = <span class="number">0</span>, flag1 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">   ch = getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">'\n'</span>)</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">'+'</span>)                        <span class="comment">// 将坏掉的那些键存入字符串 大写的因为字母改成小写 如果有‘+’号 则标记一下，不存入字符串</span></span><br><span class="line">      flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="number">65</span> &lt;= ch&amp;&amp;ch &lt;= <span class="number">90</span>)</span><br><span class="line">        ch = ch + <span class="number">32</span>;</span><br><span class="line">      str[i] = ch;</span><br><span class="line">      i++;          </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)           </span><br><span class="line">  &#123;</span><br><span class="line">    ch = getchar();</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (flag1 == <span class="number">0</span>)             <span class="comment">// 如果flag1为0 则说明没有字符串输出 ，这里就必须要输入空行，不然过不了第三个检查点</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>)              <span class="comment">// 当有‘+’号时 大写的因为字符一律不输出</span></span><br><span class="line">      <span class="keyword">if</span> (ch &lt; <span class="number">65</span> || ch&gt;<span class="number">90</span>)</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (ch == str[j])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">if</span> (j &gt; i)       <span class="comment">// 将每个输入的字符与坏的键比较一下 比较成功则不输出</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(ch);</span><br><span class="line">            flag1++;      <span class="comment">// 输出了就标记一下</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          j++;              </span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">while</span> (<span class="number">1</span>)          <span class="comment">// 当没有'+'号时 </span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">65</span> &lt;= ch&amp;&amp;ch &lt;= <span class="number">90</span>)  <span class="comment">//  因为坏的那些键全部是存的小写字母，所以朋友输入的字符是大写的就需要转换成小写再比较</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (ch + <span class="number">32</span> == str[j])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>  <span class="keyword">if</span> (ch == str[j])</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (j &gt; i)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">putchar</span>(ch);   </span><br><span class="line">          flag1++;            <span class="comment">//输出了就标记一下</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        j++;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1034、有理数四则运算"><a href="#1034、有理数四则运算" class="headerlink" title="1034、有理数四则运算"></a>1034、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008" target="_blank" rel="noopener">有理数四则运算</a></h4><p>本题要求编写程序，计算 2 个有理数的和、差、积、商。 </p><p><strong>输入描述</strong></p><p>输入在一行中按照 <code>a1/b1 a2/b2</code> 的格式给出两个分数形式的有理数，其中分子和分母全是整型范围内的整数，负号只可能出现在分子前，分母不为 0。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">2</span>/<span class="number">3</span> <span class="number">-4</span>/<span class="number">2</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>分别在 4 行中按照 <code>有理数1 运算符 有理数2 = 结果</code> 的格式顺序输出 2 个有理数的和、差、积、商。注意输出的每个有理数必须是该有理数的最简形式 <code>k a/b</code>，其中 <code>k</code> 是整数部分，<code>a/b</code> 是最简分数部分；若为负数，则须加括号；若除法分母为 0，则输出 <code>Inf</code>。题目保证正确的输出中没有超过整型范围的整数。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">2</span>/<span class="number">3</span> + (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line">&gt; <span class="number">2</span>/<span class="number">3</span> - (<span class="number">-2</span>) = <span class="number">2</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line">&gt; <span class="number">2</span>/<span class="number">3</span> * (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line">&gt; <span class="number">2</span>/<span class="number">3</span> / (<span class="number">-2</span>) = (<span class="number">-1</span>/<span class="number">3</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;  <span class="comment">//求最大公约数 </span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m = a%b;</span><br><span class="line"><span class="keyword">while</span> (m) &#123;</span><br><span class="line">a = b;</span><br><span class="line">b = m;</span><br><span class="line">m = a%b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Print</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;  <span class="comment">//将分数输出函数 </span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Inf"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a &lt; <span class="number">0</span>) &#123;</span><br><span class="line">a = -a;</span><br><span class="line">flag = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> gcd = GCD(a,b);</span><br><span class="line">a /= gcd;</span><br><span class="line">b /= gcd;</span><br><span class="line"><span class="keyword">if</span> (a / b == <span class="number">0</span>&amp;&amp;a != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (flag &lt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"(-%lld/%lld)"</span>,a,b);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%lld/%lld"</span>,a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">flag = flag*a/b;</span><br><span class="line">a %= b;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">1</span>&amp;&amp;flag &lt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"(%lld)"</span>,flag);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b == <span class="number">1</span>&amp;&amp;flag &gt;= <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%lld"</span>,flag);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (flag &lt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"(%lld %lld/%lld)"</span>,flag,a,b);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%lld %lld/%lld"</span>,flag,a,b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a1,<span class="keyword">long</span> <span class="keyword">long</span> b1,<span class="keyword">long</span> <span class="keyword">long</span> a2,<span class="keyword">long</span> <span class="keyword">long</span> b2,<span class="keyword">char</span> ch)</span> </span>&#123;  <span class="comment">//计算分数运算函数 </span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c1;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c2;</span><br><span class="line">Print(a1,b1);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" %c "</span>,ch);</span><br><span class="line">Print(a2,b2);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" = "</span>);</span><br><span class="line"><span class="keyword">switch</span>(ch) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">c1 = a1*b2+a2*b1;</span><br><span class="line">c2 = b1*b2;</span><br><span class="line">Print(c1,c2);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">c1 = a1*b2-a2*b1;</span><br><span class="line">c2 = b1*b2;</span><br><span class="line">Print(c1,c2);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">c1 = a1*a2;</span><br><span class="line">c2 = b1*b2;</span><br><span class="line">Print(c1,c2);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">c1 = a1*b2;</span><br><span class="line">c2 = b1*a2;</span><br><span class="line"><span class="keyword">if</span> (c2 &lt; <span class="number">0</span>) &#123;</span><br><span class="line">c2 = -c2;</span><br><span class="line">c1 = -c1;</span><br><span class="line">&#125;</span><br><span class="line">Print(c1,c2);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a1,b1,a2,b2;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lld/%lld %lld/%lld"</span>,&amp;a1,&amp;b1,&amp;a2,&amp;b2);</span><br><span class="line">count(a1,b1,a2,b2,<span class="string">'+'</span>);</span><br><span class="line">count(a1,b1,a2,b2,<span class="string">'-'</span>);</span><br><span class="line">count(a1,b1,a2,b2,<span class="string">'*'</span>);</span><br><span class="line">count(a1,b1,a2,b2,<span class="string">'/'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1035、插入与归并"><a href="#1035、插入与归并" class="headerlink" title="1035、插入与归并"></a>1035、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040" target="_blank" rel="noopener">插入与归并</a></h4><p>根据维基百科的定义：</p><p><strong>插入排序</strong>是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。</p><p><strong>归并排序</strong>进行如下迭代操作：首先将原始序列看成 N 个只包含 1 个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下 1 个有序的序列。</p><p>现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？</p><p><strong>输入描述</strong></p><p>输入在第一行给出正整数 N (≤100)；随后一行给出原始序列的 N 个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>首先在第 1 行中输出<code>Insertion Sort</code>表示插入排序、或<code>Merge Sort</code>表示归并排序；然后在第 2 行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行首尾不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Insertion Sort</span><br><span class="line">&gt; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>*a, <span class="keyword">const</span> <span class="keyword">void</span>*b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> *(<span class="keyword">int</span> *)a - *(<span class="keyword">int</span>*)b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> n, *a, *b, i, j, k = <span class="number">1</span>, flag = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  a = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*n);</span><br><span class="line">  b = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*n);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span> &amp;&amp; b[i] &lt;= b[i + <span class="number">1</span>]; i++);</span><br><span class="line">  <span class="keyword">for</span> (j = i + <span class="number">1</span>; a[j] == b[j] &amp;&amp; j &lt; n; j++);</span><br><span class="line">  <span class="keyword">if</span> (j == n) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Insertion Sort\n"</span>);</span><br><span class="line">    qsort(a, i + <span class="number">2</span>,<span class="keyword">sizeof</span>(a[<span class="number">0</span>]),cmp);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Merge Sort\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">      flag = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != b[i])</span><br><span class="line">          flag = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      k = k * <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n / k; i++)</span><br><span class="line">        qsort(a + i * k, k,<span class="keyword">sizeof</span>(a[<span class="number">0</span>]),cmp);</span><br><span class="line">      qsort(a + n / k * k, n-n/k*k, <span class="keyword">sizeof</span>(a[<span class="number">0</span>]),cmp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[j]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[n - <span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1036、跟奥巴马一起编程"><a href="#1036、跟奥巴马一起编程" class="headerlink" title="1036、跟奥巴马一起编程"></a>1036、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805285812551680" target="_blank" rel="noopener">跟奥巴马一起编程</a></h4><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！ </p><p><strong>输入描述</strong></p><p>输入在一行中给出正方形边长 N（3≤N≤20）和组成正方形边的某种字符 C，间隔一个空格。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 10 a</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。 </p><blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; aaaaaaaaaa</span><br><span class="line">&gt; <span class="selector-tag">a</span>        a</span><br><span class="line">&gt; <span class="selector-tag">a</span>        a</span><br><span class="line">&gt; <span class="selector-tag">a</span>        a</span><br><span class="line">&gt; aaaaaaaaaa</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %c"</span>,&amp;n,&amp;c);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c"</span>,c);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; (n%<span class="number">2</span> == <span class="number">0</span>? (n/<span class="number">2</span>)<span class="number">-1</span>:n/<span class="number">2</span>); i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span>||j == n<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c"</span>,c);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c"</span>,c);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1037、在霍格沃茨找零钱"><a href="#1037、在霍格沃茨找零钱" class="headerlink" title="1037、在霍格沃茨找零钱"></a>1037、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284923359232" target="_blank" rel="noopener">在霍格沃茨找零钱</a></h4><p>如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱 P 和他实付的钱 A，你的任务是写一个程序来计算他应该被找的零钱。 </p><p><strong>输入描述</strong></p><p>输入在 1 行中分别给出 P 和 A，格式为 <code>Galleon.Sickle.Knut</code>，其间用 1 个空格分隔。这里 <code>Galleon</code> 是 [0, 107] 区间内的整数，<code>Sickle</code> 是 [0, 17) 区间内的整数，<code>Knut</code> 是 [0, 29) 区间内的整数。 </p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 10<span class="selector-class">.16</span><span class="selector-class">.27</span> 14<span class="selector-class">.1</span><span class="selector-class">.28</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。 </p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 3<span class="selector-class">.2</span><span class="selector-class">.1</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> G1, S1, K1;</span><br><span class="line">  <span class="keyword">int</span> G2, S2, K2;</span><br><span class="line">  <span class="keyword">double</span> Count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">double</span> P, A;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d.%d.%d"</span>, &amp;G1, &amp;S1, &amp;K1);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d.%d.%d"</span>, &amp;G2, &amp;S2, &amp;K2);</span><br><span class="line">  P = G1 * <span class="number">17</span> * <span class="number">29</span> + S1 * <span class="number">29</span> + K1;</span><br><span class="line">  A = G2 * <span class="number">17</span> * <span class="number">29</span> + S2 * <span class="number">29</span> + K2;</span><br><span class="line">  Count = A - P;                                       <span class="comment">//纳特的剩余个数</span></span><br><span class="line">  <span class="keyword">if</span> (Count &gt;= <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d.%d.%d"</span>, (<span class="keyword">int</span>)(Count / (<span class="number">17</span> * <span class="number">29</span>)), ((<span class="keyword">int</span>)Count / <span class="number">29</span>) % <span class="number">17</span>, ((<span class="keyword">int</span>)Count) % <span class="number">29</span>);        <span class="comment">//分正负输出</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    Count = -Count;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-%d.%d.%d"</span>, (<span class="keyword">int</span>)(Count / (<span class="number">17</span> * <span class="number">29</span>)), ((<span class="keyword">int</span>)Count / <span class="number">29</span>) % <span class="number">17</span>, ((<span class="keyword">int</span>)Count) % <span class="number">29</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1038、统计同成绩学生"><a href="#1038、统计同成绩学生" class="headerlink" title="1038、统计同成绩学生"></a>1038、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284092887040" target="_blank" rel="noopener">统计同成绩学生</a></h4><p>本题要求读入 N 名学生的成绩，将获得某一给定分数的学生人数输出。 </p><p><strong>输入描述</strong></p><p>输入在第 1 行给出不超过 10^5^ 的正整数 N，即学生总人数。随后一行给出 N 名学生的百分制整数成绩，中间以空格分隔。最后一行给出要查询的分数个数 K（不超过 N 的正整数），随后是 K 个分数，中间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span></span><br><span class="line">&gt; <span class="number">60</span> <span class="number">75</span> <span class="number">90</span> <span class="number">55</span> <span class="number">75</span> <span class="number">99</span> <span class="number">82</span> <span class="number">90</span> <span class="number">75</span> <span class="number">50</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">75</span> <span class="number">90</span> <span class="number">88</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中按查询顺序给出得分等于指定分数的学生人数，中间以空格分隔，但行末不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> count [<span class="number">101</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> value;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;value);</span><br><span class="line">count[value] ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100000</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) </span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> t = a[i];</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>) <span class="built_in">printf</span> (<span class="string">"%d"</span>,count[t]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">" %d"</span>,count[t]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1039、到底买不买"><a href="#1039、到底买不买" class="headerlink" title="1039、到底买不买"></a>1039、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805283241443328" target="_blank" rel="noopener">到底买不买</a></h4><p>小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。</p><p>为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。</p><p><img src="/2020/12/10/PAT-Basic-Level-Practice-中文/1.jpg" alt></p><p><strong>输入描述</strong></p><p>每个输入包含 1 个测试用例。每个测试用例分别在 2 行中先后给出摊主的珠串和小红想做的珠串，两串都不超过 1000 个珠子。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> ppRYYGrrYBR2258</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> YrR8RrY</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>如果可以买，则在一行中输出 <code>Yes</code> 以及有多少多余的珠子；如果不可以买，则在一行中输出 <code>No</code> 以及缺了多少珠子。其间以 1 个空格分隔。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Yes 8</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">123</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> count1 = <span class="number">0</span>;  <span class="comment">//珠子的个数</span></span><br><span class="line"><span class="keyword">int</span> count2 = <span class="number">0</span>;  <span class="comment">//剩余珠子的个数</span></span><br><span class="line"><span class="keyword">int</span> count3 = <span class="number">0</span>;  <span class="comment">//缺少的珠子的个数 </span></span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span> ((c = getchar()) != <span class="string">'\n'</span>) &#123;</span><br><span class="line">arr[c]++;</span><br><span class="line">count1++;</span><br><span class="line">&#125;</span><br><span class="line">count2 = count1;</span><br><span class="line"><span class="keyword">while</span> ((c = getchar()) != <span class="string">'\n'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[c] != <span class="number">0</span>) &#123;</span><br><span class="line">arr[c]--;</span><br><span class="line">count2--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">count3++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count3 == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Yes %d"</span>,count2);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"No %d"</span>,count3);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1040、有几个PAT"><a href="#1040、有几个PAT" class="headerlink" title="1040、有几个PAT"></a>1040、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805282389999616" target="_blank" rel="noopener">有几个PAT</a></h4><p>字符串 <code>APPAPT</code> 中包含了两个单词 <code>PAT</code>，其中第一个 <code>PAT</code> 是第 2 位(<code>P</code>)，第 4 位(<code>A</code>)，第 6 位(<code>T</code>)；第二个 <code>PAT</code> 是第 3 位(<code>P</code>)，第 4 位(<code>A</code>)，第 6 位(<code>T</code>)。</p><p>现给定字符串，问一共可以形成多少个 <code>PAT</code>？</p><p><strong>输入描述</strong></p><p>输入只有一行，包含一个字符串，长度不超过105，只包含 <code>P</code>、<code>A</code>、<code>T</code> 三种字母。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> APPAPT</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出给定字符串中包含多少个 <code>PAT</code>。由于结果可能比较大，只输出对 1000000007 取余数的结果。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 2</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> countt = <span class="number">0</span>,countp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100000</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((ch = getchar()) != <span class="string">'\n'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'P'</span>)</span><br><span class="line">str[i++] = ch;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'A'</span>)</span><br><span class="line">str[i++] = ch;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'T'</span>) &#123;</span><br><span class="line">countt++;</span><br><span class="line">str[i++] = ch;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">str[i] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span> (str); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] == <span class="string">'A'</span>)</span><br><span class="line">count = (count+(countt*countp))%<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">if</span> (str[i] == <span class="string">'P'</span>)</span><br><span class="line">countp++;</span><br><span class="line"><span class="keyword">if</span> (str[i] == <span class="string">'T'</span>)</span><br><span class="line">countt--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1041、考试座位号"><a href="#1041、考试座位号" class="headerlink" title="1041、考试座位号"></a>1041、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805281567916032" target="_blank" rel="noopener">考试座位号</a></h4><p>每个 PAT 考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。 </p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（≤1000），随后 N 行，每行给出一个考生的信息：<code>准考证号 试机座位号 考试座位号</code>。其中<code>准考证号</code>由 16 位数字组成，座位从 1 到 N 编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。</p><p>考生信息之后，给出一个正整数 M（≤N），随后一行中给出 M 个待查询的试机座位号码，以空格分隔。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">4</span></span><br><span class="line">&gt; <span class="number">3310120150912233</span> <span class="number">2</span> <span class="number">4</span></span><br><span class="line">&gt; <span class="number">3310120150912119</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line">&gt; <span class="number">3310120150912126</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">3310120150912002</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">2</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">4</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用 1 个空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3310120150912002</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">3310120150912119</span> <span class="number">1</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">double</span> arr[<span class="number">1001</span>][<span class="number">2</span>] = &#123; <span class="number">0</span> &#125;;         <span class="comment">// 保存信息</span></span><br><span class="line">  <span class="keyword">int</span> arr1[<span class="number">1000</span>] = &#123; <span class="number">0</span> &#125;;              <span class="comment">//保存需要输出的试机座位号</span></span><br><span class="line">  <span class="keyword">int</span> N, M, i, j, k;</span><br><span class="line">  <span class="keyword">double</span> ID, SJ, KS;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>, &amp;ID, &amp;SJ, &amp;KS);</span><br><span class="line">    arr[(<span class="keyword">int</span>)SJ][<span class="number">0</span>] = ID;</span><br><span class="line">    arr[(<span class="keyword">int</span>)SJ][<span class="number">1</span>] = KS;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;M);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;arr1[i]);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.0lf %.0lf\n"</span>, arr[arr1[i]][<span class="number">0</span>], arr[arr1[i]][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1042、字符统计"><a href="#1042、字符统计" class="headerlink" title="1042、字符统计"></a>1042、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280817135616" target="_blank" rel="noopener">字符统计</a></h4><p>请编写程序，找出一段给定文字中出现最频繁的那个英文字母。 </p><p><strong>输入描述</strong></p><p>输入在一行中给出一个长度不超过 1000 的字符串。字符串由 ASCII 码表中任意可见字符及空格组成，至少包含 1 个英文字母，以回车结束（回车不算在内）。 </p><blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a<span class="built_in"> simple </span>TEST.  There ARE numbers <span class="keyword">and</span> other symbols 1&amp;2&amp;3<span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出出现频率最高的那个英文字母及其出现次数，其间以空格分隔。如果有并列，则输出按字母序最小的那个字母。统计时不区分大小写，输出小写字母。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> e 7</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">128</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span> ( (c= getchar()) != <span class="string">'\n'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (c &gt;= <span class="number">65</span>&amp;&amp;c &lt;= <span class="number">90</span>)</span><br><span class="line">arr[c+<span class="number">32</span>]++;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">arr[c]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">128</span>; i &gt;= <span class="number">97</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i] &gt;= arr[max])</span><br><span class="line">max = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%c %d"</span>,max,arr[max]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1043、输出PATest"><a href="#1043、输出PATest" class="headerlink" title="1043、输出PATest"></a>1043、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280074743808" target="_blank" rel="noopener">输出PATest</a></h4><p>给定一个长度不超过 10^4^ 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 <code>PATestPATest....</code> 这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。 </p><p><strong>输入描述</strong></p><p>输入在一行中给出一个长度不超过 10^4^ 的、仅由英文字母构成的非空字符串。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> redlesPayBestPATTopTeePHPereatitAPPT</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> PATestPATestPTetPTePePee</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">int</span> countP = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> countA = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> countT = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> counte = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> counts = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> countt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((ch = getchar ()) != <span class="string">'\n'</span>) &#123;</span><br><span class="line"><span class="keyword">switch</span>(ch) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'P'</span>:countP++; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'A'</span>:countA++; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'T'</span>:countT++; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'e'</span>:counte++; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'s'</span>:counts++; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'t'</span>:countt++; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ((countP)||(countA)||(countT)||(counte)||(counts)||(countt)) &#123;</span><br><span class="line"><span class="keyword">if</span> (countP) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"P"</span>);</span><br><span class="line">countP--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (countA) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"A"</span>);</span><br><span class="line">countA--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (countT) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"T"</span>);</span><br><span class="line">countT--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (counte) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"e"</span>);</span><br><span class="line">counte--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (counts) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"s"</span>);</span><br><span class="line">counts--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (countt) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"t"</span>);</span><br><span class="line">countt--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1044、火星数字"><a href="#1044、火星数字" class="headerlink" title="1044、火星数字"></a>1044、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805279328157696" target="_blank" rel="noopener">火星数字</a></h4><p>火星人是以 13 进制计数的：</p><ul><li>地球人的 0 被火星人称为 tret。</li><li>地球人数字 1 到 12 的火星文分别为：jan, feb, mar, apr, may, jun, jly, aug, sep, oct, nov, dec。</li><li>火星人将进位以后的 12 个高位数字分别称为：tam, hel, maa, huh, tou, kes, hei, elo, syy, lok, mer, jou。</li></ul><p>例如地球人的数字 <code>29</code> 翻译成火星文就是 <code>hel mar</code>；而火星文 <code>elo nov</code> 对应地球数字 <code>115</code>。为了方便交流，请你编写程序实现地球和火星数字之间的互译。</p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（&lt;100），随后 N 行，每行给出一个 [0, 169) 区间内的数字 —— 或者是地球文，或者是火星文。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 4</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 29</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 5</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> elo nov</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> tam</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对应输入的每一行，在一行中输出翻译后的另一种语言的数字。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> hel mar</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> may</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 115</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 13</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> str[<span class="number">13</span>][<span class="number">5</span>] = &#123; <span class="string">""</span>,<span class="string">"tam"</span>, <span class="string">"hel"</span>, <span class="string">"maa"</span>, <span class="string">"huh"</span>, <span class="string">"tou"</span>, <span class="string">"kes"</span>, <span class="string">"hei"</span>, <span class="string">"elo"</span>, <span class="string">"syy"</span>, <span class="string">"lok"</span>, <span class="string">"mer"</span>, <span class="string">"jou"</span> &#125;;</span><br><span class="line">  <span class="keyword">char</span> str1[<span class="number">13</span>][<span class="number">5</span>] = &#123; <span class="string">"tret"</span>, <span class="string">"jan"</span>, <span class="string">"feb"</span>, <span class="string">"mar"</span>,<span class="string">"apr"</span>, <span class="string">"may"</span>, <span class="string">"jun"</span>, <span class="string">"jly"</span>, <span class="string">"aug"</span>, <span class="string">"sep"</span>, <span class="string">"oct"</span>, <span class="string">"nov"</span>, <span class="string">"dec"</span> &#125;;</span><br><span class="line">  <span class="keyword">char</span> str2[<span class="number">10</span>], str3[<span class="number">10</span>], str4[<span class="number">10</span>];</span><br><span class="line">  <span class="keyword">char</span> out[<span class="number">100</span>][<span class="number">10</span>];</span><br><span class="line">  <span class="keyword">int</span> i, N, Num, Num1, Num2, j = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">while</span> (N--)</span><br><span class="line">  &#123;</span><br><span class="line">    gets(str2);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isalpha</span>(str2[<span class="number">0</span>]) == <span class="number">0</span>) <span class="comment">//  判断是不是数字</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">sscanf</span>(str2, <span class="string">"%d"</span>, &amp;Num);</span><br><span class="line">      <span class="keyword">if</span> (Num &lt; <span class="number">13</span>)</span><br><span class="line">        <span class="built_in">sprintf</span>(out[j], <span class="string">"%s"</span>, str1[Num]);</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (Num == <span class="number">13</span>)</span><br><span class="line">        <span class="built_in">sprintf</span>(out[j], <span class="string">"tam"</span>);</span><br><span class="line">      <span class="keyword">else</span>  <span class="keyword">if</span> (Num % <span class="number">13</span> == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">sprintf</span>(out[j], <span class="string">"%s"</span>, str[(Num - Num % <span class="number">13</span>) / <span class="number">13</span>]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="built_in">sprintf</span>(out[j], <span class="string">"%s %s"</span>, str[(Num-Num%<span class="number">13</span>) / <span class="number">13</span>], str1[Num%<span class="number">13</span>]);   <span class="comment">//这里先取余再取整  直接除的话 167好像就就不行</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">strlen</span>(str2) &gt;= <span class="number">5</span>)                      <span class="comment">//字符串大于5就是 2位数了</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">sscanf</span>(str2, <span class="string">"%s%s"</span>, str3, str4);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str3, str[i]) == <span class="number">0</span>)</span><br><span class="line">            Num1 = i;</span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str4, str1[i]) == <span class="number">0</span>)</span><br><span class="line">            Num2 = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sprintf</span>(out[j], <span class="string">"%d"</span>, Num1 * <span class="number">13</span> + Num2);   </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>                                         <span class="comment">// 一位数</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str2, str1[i]) == <span class="number">0</span>)</span><br><span class="line">              <span class="built_in">sprintf</span>(out[j], <span class="string">"%d"</span>,i);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str2, str[i]) == <span class="number">0</span>)</span><br><span class="line">              <span class="built_in">sprintf</span>(out[j], <span class="string">"%d"</span>, i*<span class="number">13</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    j++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; j; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, out[i]);                      <span class="comment">//输出</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1045、快速排序"><a href="#1045、快速排序" class="headerlink" title="1045、快速排序"></a>1045、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805278589960192" target="_blank" rel="noopener">快速排序</a></h4><p>著名的快速排序算法里有一个经典的划分过程：我们通常采用某种方法取一个元素作为主元，通过交换，把比主元小的元素放到它的左边，比主元大的元素放到它的右边。 给定划分后的 N 个互不相同的正整数的排列，请问有多少个元素可能是划分前选取的主元？</p><p>例如给定 $N = 5$, 排列是1、3、2、4、5。则：</p><ul><li>1 的左边没有元素，右边的元素都比它大，所以它可能是主元；</li><li>尽管 3 的左边元素都比它小，但其右边的 2 比它小，所以它不能是主元；</li><li>尽管 2 的右边元素都比它大，但其左边的 3 比它大，所以它不能是主元；</li><li>类似原因，4 和 5 都可能是主元。</li></ul><p>因此，有 3 个元素可能是主元。</p><p><strong>输入描述</strong></p><p>输入在第 1 行中给出一个正整数 N（≤10^5^）； 第 2 行是空格分隔的 N 个不同的正整数，每个数不超过 10^9^。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在第 1 行中输出有可能是主元的元素个数；在第 2 行中按递增顺序输出这些元素，其间以 1 个空格分隔，行首尾不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a,<span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> *((<span class="keyword">int</span> *)a)-*((<span class="keyword">int</span> *)b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num[<span class="number">100000</span>],temp[<span class="number">100000</span>],result[<span class="number">100000</span>],*p_result=result,i,j,n;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,num+i);</span><br><span class="line">    temp[i]=num[i];</span><br><span class="line">  &#125;</span><br><span class="line">  qsort(temp,n,<span class="keyword">sizeof</span>(<span class="keyword">int</span>),compare);</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(temp[i]==num[i])</span><br><span class="line">    &#123;</span><br><span class="line">      *(p_result++)=i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;n&amp;&amp;j&lt;p_result-result;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;result[j]&amp;&amp;num[i]&lt;num[result[j]])</span><br><span class="line">      ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(i&gt;=result[j])</span><br><span class="line">      j++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num[i]&gt;num[result[j]])</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">while</span>(num[i]&gt;num[result[j]]&amp;&amp;j&lt;p_result-result)</span><br><span class="line">      &#123;</span><br><span class="line">        result[j]=<span class="number">-1</span>;</span><br><span class="line">        j++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>,n=<span class="number">0</span>;i&lt;p_result-result;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(result[i]&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      temp[n++]=num[result[i]];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line">  <span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,temp[i]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,temp[i]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1046、划拳"><a href="#1046、划拳" class="headerlink" title="1046、划拳"></a>1046、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277847568384" target="_blank" rel="noopener">划拳</a></h4><p>划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人划拳的方法为：每人口中喊出一个数字，同时用手比划出一个数字。如果谁比划出的数字正好等于两人喊出的数字之和，谁就赢了，输家罚一杯酒。两人同赢或两人同输则继续下一轮，直到唯一的赢家出现。</p><p>下面给出甲、乙两人的划拳记录，请你统计他们最后分别喝了多少杯酒。</p><p><strong>输入描述</strong></p><p>输入第一行先给出一个正整数 N（≤100），随后 N 行，每行给出一轮划拳的记录，格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">甲喊 甲划 乙喊 乙划</span><br></pre></td></tr></table></figure><p>其中<code>喊</code>是喊出的数字，<code>划</code>是划出的数字，均为不超过 100 的正整数（两只手一起划）。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span></span><br><span class="line">&gt; <span class="number">8</span> <span class="number">10</span> <span class="number">9</span> <span class="number">12</span></span><br><span class="line">&gt; <span class="number">5</span> <span class="number">10</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">8</span> <span class="number">5</span> <span class="number">12</span></span><br><span class="line">&gt; <span class="number">12</span> <span class="number">18</span> <span class="number">1</span> <span class="number">13</span></span><br><span class="line">&gt; <span class="number">4</span> <span class="number">16</span> <span class="number">12</span> <span class="number">15</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中先后输出甲、乙两人喝酒的杯数，其间以一个空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1</span> <span class="number">2</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> count1 = <span class="number">0</span>,count2 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">int</span> a1,b1,a2,b2;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d %d %d"</span>,&amp;a1,&amp;b1,&amp;a2,&amp;b2);</span><br><span class="line"><span class="keyword">if</span> (b1 == a1+a2&amp;&amp;b2 == a1+a2)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b1 != a1+a2&amp;&amp;b2 != a1+a2)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b1 == a1+a2&amp;&amp;b2 != a1+a2)</span><br><span class="line">count1++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b1 != a1+a2&amp;&amp;b2 == a1+a2)</span><br><span class="line">count2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d %d"</span>,count2,count1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1047、编程团体赛"><a href="#1047、编程团体赛" class="headerlink" title="1047、编程团体赛"></a>1047、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277163896832" target="_blank" rel="noopener">编程团体赛</a></h4><p>编程团体赛的规则为：每个参赛队由若干队员组成；所有队员独立比赛；参赛队的成绩为所有队员的成绩和；成绩最高的队获胜。</p><p>现给定所有队员的比赛成绩，请你编写程序找出冠军队。</p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（≤104），即所有参赛队员总数。随后 N 行，每行给出一位队员的成绩，格式为：<code>队伍编号-队员编号 成绩</code>，其中<code>队伍编号</code>为 1 到 1000 的正整数，<code>队员编号</code>为 1 到 10 的正整数，<code>成绩</code>为 0 到 100 的整数。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span></span><br><span class="line">&gt; <span class="number">3</span><span class="number">-10</span> <span class="number">99</span></span><br><span class="line">&gt; <span class="number">11</span><span class="number">-5</span> <span class="number">87</span></span><br><span class="line">&gt; <span class="number">102</span><span class="number">-1</span> <span class="number">0</span></span><br><span class="line">&gt; <span class="number">102</span><span class="number">-3</span> <span class="number">100</span></span><br><span class="line">&gt; <span class="number">11</span><span class="number">-9</span> <span class="number">89</span></span><br><span class="line">&gt; <span class="number">3</span><span class="number">-2</span> <span class="number">61</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出冠军队的编号和总成绩，其间以一个空格分隔。注意：题目保证冠军队是唯一的。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">11</span> <span class="number">176</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1001</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t,grade;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d-%d %d"</span>,&amp;count,&amp;t,&amp;grade);</span><br><span class="line">a[count] += grade;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1001</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[k]) k = i;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d %d"</span>,k,a[k]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1048、-数字加密"><a href="#1048、-数字加密" class="headerlink" title="1048、 数字加密"></a>1048、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805276438282240" target="_blank" rel="noopener"> 数字加密</a></h4><p>本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K 代表 12；对偶数位，用 B 的数字减去 A 的数字，若结果为负数，则再加 10。这里令个位为第 1 位。 </p><p><strong>输入描述</strong></p><p>输入在一行中依次给出 A 和 B，均为不超过 100 位的正整数，其间以空格分隔。 </p><blockquote><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1234567</span> <span class="number">368782971</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出加密后的结果。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 3695Q8118</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, m = <span class="number">0</span>,n = <span class="number">0</span>, flag = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">char</span> ch, arr1[<span class="number">101</span>], arr2[<span class="number">101</span>], arr3[<span class="number">101</span>];</span><br><span class="line">  <span class="keyword">while</span> ((ch = getchar()) != <span class="string">' '</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    arr1[i] = ch;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    arr2[j] = ch;</span><br><span class="line">    j++;</span><br><span class="line">  &#125;</span><br><span class="line">  arr2[j] = <span class="string">'\0'</span>;</span><br><span class="line">  <span class="keyword">if</span> (j &lt; i)</span><br><span class="line">  &#123;</span><br><span class="line">    k = i - j;</span><br><span class="line">    <span class="keyword">for</span> (m = <span class="number">0</span>; m &lt; k; m++)</span><br><span class="line">      arr3[m] = <span class="string">'0'</span>;</span><br><span class="line">    arr3[m] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">strcat</span>(arr3, arr2);</span><br><span class="line">    <span class="built_in">strcpy</span>(arr2, arr3);</span><br><span class="line">    j = i;</span><br><span class="line">  &#125;</span><br><span class="line">  m = i; n = j;</span><br><span class="line">  <span class="keyword">for</span> (; flag &lt;=m; flag++, i--, j--)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ((flag &amp; <span class="number">1</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr2[j - <span class="number">1</span>] - arr1[i - <span class="number">1</span>] &gt;= <span class="number">0</span>)</span><br><span class="line">        arr2[j - <span class="number">1</span>] = arr2[j - <span class="number">1</span>] - arr1[i - <span class="number">1</span>]+<span class="number">48</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        arr2[j - <span class="number">1</span>] = arr2[j - <span class="number">1</span>] - arr1[i - <span class="number">1</span>] + <span class="number">10</span> + <span class="number">48</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ((arr1[i - <span class="number">1</span>] + arr2[j - <span class="number">1</span>]<span class="number">-96</span>) % <span class="number">13</span> &lt; <span class="number">10</span>)</span><br><span class="line">        arr2[j - <span class="number">1</span>] = (arr1[i - <span class="number">1</span>] + arr2[j - <span class="number">1</span>]<span class="number">-96</span>) % <span class="number">13</span>+<span class="number">48</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ((arr1[i - <span class="number">1</span>] + arr2[j - <span class="number">1</span>] - <span class="number">96</span>) % <span class="number">13</span> == <span class="number">10</span>)</span><br><span class="line">          arr2[j - <span class="number">1</span>] = <span class="string">'J'</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((arr1[i - <span class="number">1</span>] + arr2[j - <span class="number">1</span>] - <span class="number">96</span>) % <span class="number">13</span> == <span class="number">11</span>)</span><br><span class="line">          arr2[j - <span class="number">1</span>] = <span class="string">'Q'</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((arr1[i - <span class="number">1</span>] + arr2[j - <span class="number">1</span>] - <span class="number">96</span>) % <span class="number">13</span> == <span class="number">12</span>)</span><br><span class="line">          arr2[j - <span class="number">1</span>] = <span class="string">'K'</span>; </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c"</span>, arr2[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1049、数列的片段和"><a href="#1049、数列的片段和" class="headerlink" title="1049、数列的片段和"></a>1049、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275792359424" target="_blank" rel="noopener">数列的片段和</a></h4><p>给定一个正数数列，我们可以从中截取任意的连续的几个数，称为片段。例如，给定数列 { 0.1, 0.2, 0.3, 0.4 }，我们有 (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4) 这 10 个片段。</p><p>给定正整数数列，求出全部片段包含的所有的数之和。如本例中 10 个片段总和是 0.1 + 0.3 + 0.6 + 1.0 + 0.2 + 0.5 + 0.9 + 0.3 + 0.7 + 0.4 = 5.0。</p><p><strong>输入描述</strong></p><p>输入第一行给出一个不超过 10^5^ 的正整数 N，表示数列中数的个数，第二行给出 N 个不超过 1.0 的正数，是数列中的数，其间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">4</span></span><br><span class="line">&gt; <span class="number">0.1</span> <span class="number">0.2</span> <span class="number">0.3</span> <span class="number">0.4</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出该序列所有片段包含的数之和，精确到小数点后 2 位。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 5.00</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> flag = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++ ) &#123;</span><br><span class="line"><span class="keyword">double</span> num ;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf"</span>,&amp;num);</span><br><span class="line">sum += (<span class="keyword">double</span>) i*flag*num;</span><br><span class="line">flag--;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%.2lf"</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1050、螺旋矩阵"><a href="#1050、螺旋矩阵" class="headerlink" title="1050、螺旋矩阵"></a>1050、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275146436608" target="_blank" rel="noopener">螺旋矩阵</a></h4><p>本题要求将给定的 N 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 m 行 n 列，满足条件：m×n 等于 N；m≥n；且 m−n 取所有可能值中的最小值。 </p><p><strong>输入描述</strong></p><p>输入在第 1 行中给出一个正整数 N，第 2 行给出 N 个待填充的正整数。所有数字不超过 10^4^，相邻数字以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">12</span></span><br><span class="line">&gt; <span class="number">37</span> <span class="number">76</span> <span class="number">20</span> <span class="number">98</span> <span class="number">76</span> <span class="number">42</span> <span class="number">53</span> <span class="number">95</span> <span class="number">60</span> <span class="number">81</span> <span class="number">58</span> <span class="number">93</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出螺旋矩阵。每行 n 个数字，共 m 行。相邻数字以 1 个空格分隔，行末不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">98</span> <span class="number">95</span> <span class="number">93</span></span><br><span class="line">&gt; <span class="number">42</span> <span class="number">37</span> <span class="number">81</span></span><br><span class="line">&gt; <span class="number">53</span> <span class="number">20</span> <span class="number">76</span></span><br><span class="line">&gt; <span class="number">58</span> <span class="number">60</span> <span class="number">76</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;  </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> *(<span class="keyword">int</span> *)b - *(<span class="keyword">int</span> *)a;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> N, i,j,k,l, *arr=<span class="literal">NULL</span>,mem,meN;  </span><br><span class="line">    <span class="keyword">int</span> beg, over, men;  </span><br><span class="line">    <span class="keyword">int</span> m, n;  </span><br><span class="line">    <span class="keyword">int</span> **pmn=<span class="literal">NULL</span>;  </span><br><span class="line">    <span class="keyword">int</span> lu[<span class="number">2</span>], ld[<span class="number">2</span>], ru[<span class="number">2</span>], rd[<span class="number">2</span>];  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp; N);  </span><br><span class="line">    arr = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*N);  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++) &#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;arr[i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    qsort(arr, N, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), cmp);  </span><br><span class="line">  </span><br><span class="line">    m=(<span class="keyword">int</span>)<span class="built_in">sqrt</span>(N);  </span><br><span class="line">    n = m;  </span><br><span class="line">    mem = m;  </span><br><span class="line">    <span class="comment">//以平方根为中间值向两边查找m*n大于N时令n-1  </span></span><br><span class="line">    <span class="keyword">while</span> ((m*n) != N) &#123;  </span><br><span class="line">        <span class="keyword">while</span>((m*n )&lt; N&amp;&amp;(m*n) != N) &#123;  </span><br><span class="line">            m++;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (m*n == N)  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        n--;  </span><br><span class="line">        m = mem;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//创建二维数组  </span></span><br><span class="line">  </span><br><span class="line">      </span><br><span class="line">    pmn = (<span class="keyword">int</span> **)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span> *)*m+<span class="number">1</span>);  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;  </span><br><span class="line">        pmn[i] = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*n+<span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//开始螺旋赋值  </span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">//初始化边界x[0]为行标，x[1]为横着数  </span></span><br><span class="line">    lu[<span class="number">0</span>] = <span class="number">0</span>;  </span><br><span class="line">    lu[<span class="number">1</span>] = <span class="number">0</span>;  </span><br><span class="line">    ru[<span class="number">0</span>] = <span class="number">0</span>;  </span><br><span class="line">    ru[<span class="number">1</span>] = n - <span class="number">1</span>;  </span><br><span class="line">    rd[<span class="number">0</span>] = m - <span class="number">1</span>;  </span><br><span class="line">    rd[<span class="number">1</span>] = n - <span class="number">1</span>;  </span><br><span class="line">    ld[<span class="number">0</span>] = m - <span class="number">1</span>;  </span><br><span class="line">    ld[<span class="number">1</span>] = <span class="number">0</span>;  </span><br><span class="line">    <span class="comment">//初始化矩阵行数mem,列数men  </span></span><br><span class="line">    mem = m;  </span><br><span class="line">    men = n;  </span><br><span class="line">    <span class="comment">//初始化数组指针  </span></span><br><span class="line">    meN = <span class="number">0</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span> (meN &lt; N) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (i = lu[<span class="number">0</span>], j = lu[<span class="number">1</span>]; meN &lt; N&amp;&amp;j &lt;ru[<span class="number">1</span>]; j++) &#123;  </span><br><span class="line">            pmn[i][j] = arr[meN++];  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="comment">//men--;  </span></span><br><span class="line">        <span class="keyword">if</span> (lu[<span class="number">0</span>] &lt; ld[<span class="number">0</span>])lu[<span class="number">0</span>]++;  </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (lu[<span class="number">0</span>] &gt; ld[<span class="number">0</span>])<span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">if</span>(lu[<span class="number">1</span>]&lt;ru[<span class="number">1</span>])lu[<span class="number">1</span>]++;  </span><br><span class="line">        <span class="comment">//lu[0]++;  </span></span><br><span class="line">          </span><br><span class="line">        <span class="keyword">for</span> (i = ru[<span class="number">0</span>], j = ru[<span class="number">1</span>]; meN &lt; N&amp;&amp;i&lt;rd[<span class="number">0</span>]; i++) &#123;  </span><br><span class="line">            pmn[i][j] = arr[meN++];  </span><br><span class="line">        &#125;  </span><br><span class="line">    <span class="keyword">if</span>( ru[<span class="number">0</span>]&lt;rd[<span class="number">0</span>])ru[<span class="number">0</span>]++;  </span><br><span class="line">    <span class="keyword">if</span>(ru[<span class="number">1</span>]&gt;lu[<span class="number">1</span>])ru[<span class="number">1</span>]--;  </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">        <span class="keyword">for</span> (i = rd[<span class="number">0</span>], j = rd[<span class="number">1</span>]; meN &lt; N&amp;&amp;j &gt; ld[<span class="number">1</span>]; j--) &#123;  </span><br><span class="line">            pmn[i][j] = arr[meN++];  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (ru[<span class="number">0</span>]&lt;rd[<span class="number">0</span>])rd[<span class="number">0</span>]--;  </span><br><span class="line">        <span class="keyword">if</span>(rd[<span class="number">1</span>]&gt;ld[<span class="number">1</span>])rd[<span class="number">1</span>]--;  </span><br><span class="line">        <span class="keyword">for</span> (i = ld[<span class="number">0</span>], j = ld[<span class="number">1</span>]; meN&lt;N&amp;&amp;i&gt;lu[<span class="number">0</span>]<span class="number">-1</span>; i--) &#123;  </span><br><span class="line">            pmn[i][j] = arr[meN++];  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span>(ld[<span class="number">0</span>]&gt;lu[<span class="number">0</span>])ld[<span class="number">0</span>]--;  </span><br><span class="line">        <span class="keyword">if</span>(ld[<span class="number">1</span>]&lt;rd[<span class="number">1</span>])ld[<span class="number">1</span>]++;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++) &#123;  </span><br><span class="line">            <span class="keyword">if</span> (j != n - <span class="number">1</span>)  </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>, pmn[i][j]);  </span><br><span class="line">            <span class="keyword">else</span>  </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, pmn[i][j]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">    <span class="built_in">free</span>(arr);  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;  </span><br><span class="line">        <span class="built_in">free</span>(pmn[i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1051、复数乘法"><a href="#1051、复数乘法" class="headerlink" title="1051、复数乘法"></a>1051、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805274496319488" target="_blank" rel="noopener">复数乘法</a></h4><p>复数可以写成 (A+Bi) 的常规形式，其中 A 是实部，B 是虚部，i 是虚数单位，满足 i^2^=−1；也可以写成极坐标下的指数形式 (R×e^(Pi)^)，其中 R 是复数模，P 是辐角，i 是虚数单位，其等价于三角形式 R(cos(P)+isin(P))。</p><p>现给定两个复数的 R 和 P，要求输出两数乘积的常规形式。</p><p><strong>输入描述</strong></p><p>输入在一行中依次给出两个复数的 R1, P1, R2, P2，数字间以空格分隔。 </p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 2<span class="selector-class">.3</span> 3<span class="selector-class">.5</span> 5<span class="selector-class">.2</span> 0<span class="selector-class">.4</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中按照 <code>A+Bi</code> 的格式输出两数乘积的常规形式，实部和虚部均保留 2 位小数。注意：如果 <code>B</code> 是负数，则应该写成 <code>A-|B|i</code> 的形式。 </p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">-8</span><span class="selector-class">.68-8</span><span class="selector-class">.23i</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">( )</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> r1,p1,r2,p2;</span><br><span class="line"><span class="keyword">double</span> A,B;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf %lf %lf %lf"</span>,&amp;r1,&amp;p1,&amp;r2,&amp;p2);</span><br><span class="line">A = r1*r2*<span class="built_in">cos</span>(p1+p2);</span><br><span class="line">B = r1*r2*<span class="built_in">sin</span>(p1+p2);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A) &lt; <span class="number">0.01</span>)</span><br><span class="line">A = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(B) &lt; <span class="number">0.01</span>)</span><br><span class="line">B = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (B &lt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%.2lf-%.2lfi"</span>,A,<span class="built_in">fabs</span>(B));</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%.2lf+%.2lfi"</span>,A,B);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1052、卖个萌"><a href="#1052、卖个萌" class="headerlink" title="1052、卖个萌"></a>1052、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273883951104" target="_blank" rel="noopener">卖个萌</a></h4><p>萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">左手</span>](<span class="link">[左眼][口][右眼]</span>)[<span class="string">右手</span>]</span><br></pre></td></tr></table></figure><p>现给出可选用的符号集合，请你按用户的要求输出表情。</p><p><strong>输入描述</strong></p><p>输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号 <code>[]</code>内。题目保证每个集合都至少有一个符号，并不超过 10 个符号；每个符号包含 1 到 4 个非空字符。</p><p>之后一行给出一个正整数 K，为用户请求的个数。随后 K 行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从 1 开始），数字间以空格分隔。</p><blockquote><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; [╮][╭][o][~\][/~]  [&lt;][&gt;]</span><br><span class="line">&gt;  [╯][╰][^][-][=][&gt;][&lt;][@][⊙]</span><br><span class="line">&gt; [Д][▽][<span class="symbol">_</span>][ε][^]  ...</span><br><span class="line">&gt; <span class="number">4</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">6</span> <span class="number">8</span> <span class="number">1</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">3</span> <span class="number">4</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">10</span> <span class="number">3</span> <span class="number">9</span> <span class="number">3</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出 <code>Are you kidding me? @\/@</code>。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> ╮(╯▽╰)╭</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &lt;(@Д=)/~</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> o(^ε^)o</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Are you kidding me? @\/@</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">pump</span><span class="params">(<span class="keyword">char</span> a[])</span> <span class="comment">// 表情提取函数，识别开始的'[' ，记录表情，到']'结束，遇到换行符表示录入结束，返回NULL</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> c = <span class="number">0</span>, i;</span><br><span class="line">  <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">  <span class="keyword">while</span> ((c = getchar()) != <span class="string">'['</span>)</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">'\n'</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; (c = getchar()) != <span class="string">']'</span>; i++)</span><br><span class="line">    a[i] = c;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">store</span><span class="params">(<span class="keyword">char</span> db[][<span class="number">5</span>], <span class="keyword">char</span> a[])</span> <span class="comment">// 存储读取到的表情，并返回读到的表情个数因为个数从0开始记，返回i-1</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (; pump(a) != <span class="literal">NULL</span>; i++)</span><br><span class="line">    <span class="built_in">strcpy</span>(db[i], a);</span><br><span class="line">  <span class="keyword">return</span> i - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> db[][<span class="number">11</span>][<span class="number">5</span>], <span class="keyword">int</span> size[])</span> <span class="comment">// 读取请求并输出表情</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">5</span>], tag = <span class="number">1</span>, i;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">  &#123; <span class="comment">// 读取一组表情请求的序号</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a + i);</span><br><span class="line">    a[i] -= <span class="number">1</span>; <span class="comment">// 同样的，转换为0开始的序号</span></span><br><span class="line">    <span class="keyword">if</span> (a[i] &gt; size[i] || a[i] &lt; <span class="number">0</span>) tag = <span class="number">0</span>; <span class="comment">// 遇到不存在的序号，标记tag为0</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (tag) <span class="comment">// 根据请求的序号是否全存在，选择输出模式</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s(%s%s%s)%s\n"</span>, db[<span class="number">0</span>][a[<span class="number">0</span>]], db[<span class="number">1</span>][a[<span class="number">1</span>]], db[<span class="number">2</span>][a[<span class="number">2</span>]], db[<span class="number">1</span>][a[<span class="number">3</span>]], db[<span class="number">0</span>][a[<span class="number">4</span>]]);</span><br><span class="line">  <span class="comment">// db为表情存储数组，根据序号选择对应表情</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Are you kidding me? @\\/@\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> a[<span class="number">5</span>], db[<span class="number">3</span>][<span class="number">11</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">  <span class="keyword">int</span> n, size[<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;, i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    size[i] = store(db[i], a); <span class="comment">// 根据store函数返回的值，记录改组表情的个数，从而判断请求是否合理</span></span><br><span class="line">  size[<span class="number">4</span>] = size[<span class="number">0</span>], size[<span class="number">3</span>] = size[<span class="number">1</span>]; <span class="comment">// 因为两只眼睛，两只手，所以3和4的可选范围与左边对称</span></span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">// 输出n次请求的表情</span></span><br><span class="line">    print(db, size);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1053、住房空置率"><a href="#1053、住房空置率" class="headerlink" title="1053、住房空置率"></a>1053、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273284165632" target="_blank" rel="noopener">住房空置率</a></h4><p>在不打扰居民的前提下，统计住房空置率的一种方法是根据每户用电量的连续变化规律进行判断。判断方法如下：</p><ul><li>在观察期内，若存在超过一半的日子用电量低于某给定的阈值 e，则该住房为“可能空置”；</li><li>若观察期超过某给定阈值 D 天，且满足上一个条件，则该住房为“空置”。</li></ul><p>现给定某居民区的住户用电量数据，请你统计“可能空置”的比率和“空置”比率，即以上两种状态的住房占居民区住房总套数的百分比。</p><p><strong>输入描述</strong></p><p>输入第一行给出正整数 N（≤1000），为居民区住房总套数；正实数 e，即低电量阈值；正整数 D，即观察期阈值。随后 N 行，每行按以下格式给出一套住房的用电量数据：</p><p>K E1 E2 … EK</p><p>其中 K 为观察的天数，Ei 为第 i 天的用电量。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span> <span class="number">0.5</span> <span class="number">10</span></span><br><span class="line">&gt; <span class="number">6</span> <span class="number">0.3</span> <span class="number">0.4</span> <span class="number">0.5</span> <span class="number">0.2</span> <span class="number">0.8</span> <span class="number">0.6</span></span><br><span class="line">&gt; <span class="number">10</span> <span class="number">0.0</span> <span class="number">0.1</span> <span class="number">0.2</span> <span class="number">0.3</span> <span class="number">0.0</span> <span class="number">0.8</span> <span class="number">0.6</span> <span class="number">0.7</span> <span class="number">0.0</span> <span class="number">0.5</span></span><br><span class="line">&gt; <span class="number">5</span> <span class="number">0.4</span> <span class="number">0.3</span> <span class="number">0.5</span> <span class="number">0.1</span> <span class="number">0.7</span></span><br><span class="line">&gt; <span class="number">11</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span></span><br><span class="line">&gt; <span class="number">11</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0.1</span> <span class="number">1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出“可能空置”的比率和“空置”比率的百分比值，其间以一个空格分隔，保留小数点后 1 位。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">40.0</span>% <span class="number">20.0</span>%</span><br><span class="line">&gt; （样例解释：第<span class="number">2</span>、<span class="number">3</span>户为“可能空置”，第<span class="number">4</span>户为“空置”，其他户不是空置。）</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> D;</span><br><span class="line"><span class="keyword">double</span> e;</span><br><span class="line"><span class="keyword">int</span> count1 = <span class="number">0</span>,count2 = <span class="number">0</span>,count3 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d%lf%d"</span>,&amp;N,&amp;e,&amp;D);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++) &#123;</span><br><span class="line"><span class="keyword">double</span> temp;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf"</span>,&amp;temp);</span><br><span class="line"><span class="keyword">if</span> (temp &lt; e)</span><br><span class="line">count1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count1&gt;(k / <span class="number">2.0</span>)&amp;&amp;k &gt; D)</span><br><span class="line">count2++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (count1 &gt; (k / <span class="number">2.0</span>) &amp;&amp; k &lt;= D)</span><br><span class="line">count3++;</span><br><span class="line">count1 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%.01lf%% %.01lf%%"</span>,(<span class="keyword">double</span>)count3*<span class="number">100</span>/N,(<span class="keyword">double</span>)count2*<span class="number">100</span>/N);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1054、求平均值"><a href="#1054、求平均值" class="headerlink" title="1054、求平均值"></a>1054、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272659214336" target="_blank" rel="noopener">求平均值</a></h4><p>本题的基本要求非常简单：给定 N 个实数，计算它们的平均值。但复杂的是有些输入数据可能是非法的。一个“合法”的输入是 [−1000,1000] 区间内的实数，并且最多精确到小数点后 2 位。当你计算平均值的时候，不能把那些非法的数据算在内。 </p><p><strong>输入描述</strong></p><p>输入第一行给出正整数 N（≤100）。随后一行给出 N 个实数，数字间以一个空格分隔。 </p><blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 7</span><br><span class="line">&gt; 5 -3.2<span class="built_in"> aaa </span>9999 2.3.4 7.123 2.35</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个非法输入，在一行中输出 <code>ERROR: X is not a legal number</code>，其中 <code>X</code> 是输入。最后在一行中输出结果：<code>The average of K numbers is Y</code>，其中 <code>K</code> 是合法输入的个数，<code>Y</code> 是它们的平均值，精确到小数点后 2 位。如果平均值无法计算，则用 <code>Undefined</code> 替换 <code>Y</code>。如果 <code>K</code> 为 1，则输出 <code>The average of 1 number is Y</code>。 </p><blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; ERROR: aaa <span class="keyword">is</span> <span class="keyword">not</span> a legal <span class="built_in">number</span></span><br><span class="line">&gt; ERROR: <span class="number">9999</span> <span class="keyword">is</span> <span class="keyword">not</span> a legal <span class="built_in">number</span></span><br><span class="line">&gt; ERROR: <span class="number">2.3</span><span class="number">.4</span> <span class="keyword">is</span> <span class="keyword">not</span> a legal <span class="built_in">number</span></span><br><span class="line">&gt; ERROR: <span class="number">7.123</span> <span class="keyword">is</span> <span class="keyword">not</span> a legal <span class="built_in">number</span></span><br><span class="line">&gt; The average <span class="keyword">of</span> <span class="number">3</span> numbers <span class="keyword">is</span> <span class="number">1.38</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, i, flag = <span class="number">0</span>, flag1 = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">double</span>  Num, Count = <span class="number">0</span>, Average = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> str2[<span class="number">100</span>], str1[<span class="number">100</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str1);</span><br><span class="line">    <span class="built_in">sscanf</span>(str1, <span class="string">"%lf"</span>, &amp;Num);              <span class="comment">//比较2个转换的字符串是不是相同的 相同的则说明是最多有2位小数的整数</span></span><br><span class="line">    <span class="built_in">sprintf</span>(str2,<span class="string">"%.2lf"</span>, Num);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(str1);j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (str1[j] != str2[j]) flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag || Num &lt; <span class="number">-1000</span> || Num&gt;<span class="number">1000</span>)   <span class="comment">// 如果不是最多有2位小数的整数或者是大于1000或小于-1000的整数 则输出</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"ERROR: %s is not a legal number\n"</span>,str1);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      Count += Num; flag1++;</span><br><span class="line">    &#125;</span><br><span class="line">    flag = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Average = Count / flag1;</span><br><span class="line">  <span class="keyword">if</span> (flag1 == <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The average of 1 number is %.02lf\n"</span>, Count);   <span class="comment">//只有一个数的时候是number 没"S"</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (flag1 == <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The average of 0 numbers is Undefined\n"</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The average of %d numbers is %.02lf\n"</span>, flag1, Average);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1055、-集体照"><a href="#1055、-集体照" class="headerlink" title="1055、 集体照"></a>1055、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272021680128" target="_blank" rel="noopener"> 集体照</a></h4><p>拍集体照时队形很重要，这里对给定的 N 个人 K 排的队形设计排队规则如下：</p><ul><li>每排人数为 N/K（向下取整），多出来的人全部站在最后一排；</li><li>后排所有人的个子都不比前排任何人矮；</li><li>每排中最高者站中间（中间位置为 m/2+1，其中 m 为该排人数，除法向下取整）；</li><li>每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；</li><li>若多人身高相同，则按名字的字典序升序排列。这里保证无重名。</li></ul><p>现给定一组拍照人，请编写程序输出他们的队形。</p><p><strong>输入描述</strong></p><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出两个正整数 N（≤10^4^，总人数）和 K（≤10，总排数）。随后 N 行，每行给出一个人的名字（不包含空格、长度不超过 8 个英文字母）和身高（[30, 300] 区间内的整数）。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span> <span class="number">3</span></span><br><span class="line">&gt; Tom <span class="number">188</span></span><br><span class="line">&gt; Mike <span class="number">170</span></span><br><span class="line">&gt; Eva <span class="number">168</span></span><br><span class="line">&gt; Tim <span class="number">160</span></span><br><span class="line">&gt; Joe <span class="number">190</span></span><br><span class="line">&gt; Ann <span class="number">168</span></span><br><span class="line">&gt; Bob <span class="number">175</span></span><br><span class="line">&gt; Nick <span class="number">186</span></span><br><span class="line">&gt; Amy <span class="number">160</span></span><br><span class="line">&gt; John <span class="number">159</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出拍照的队形。即K排人名，其间以空格分隔，行末不得有多余空格。注意：假设你面对拍照者，后排的人输出在上方，前排输出在下方。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Bob Tom Joe Nick</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Ann Mike Eva</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Tim Amy John</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">In</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">char</span> name[<span class="number">9</span>];</span><br><span class="line">  <span class="keyword">int</span> tall;</span><br><span class="line">&#125;s[<span class="number">10002</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">In</span> *<span class="title">c</span> = ( <span class="title">In</span> *)<span class="title">a</span>;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">In</span> *<span class="title">d</span> = (<span class="title">In</span> *)<span class="title">b</span>;</span></span><br><span class="line">  <span class="keyword">if</span> (c-&gt;tall != d-&gt;tall) <span class="keyword">return</span> d-&gt;tall- c-&gt;tall ;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">strcmp</span>(c-&gt;name,d-&gt;name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> N = <span class="number">0</span>, K = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> i, j, temp = <span class="number">0</span>, col = <span class="number">0</span>, col2 = <span class="number">0</span>, flag1 = <span class="number">0</span>, flag2 = <span class="number">0</span>, flag3 = <span class="number">0</span>, flag4 = <span class="number">0</span>, flag5 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;K);</span><br><span class="line">  col = N / K;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s%d"</span>, &amp;s[i].name, &amp;s[i].tall);</span><br><span class="line">  &#125;</span><br><span class="line">  qsort(s, <span class="number">10002</span>, <span class="keyword">sizeof</span>(s[<span class="number">0</span>]), cmp);</span><br><span class="line">  <span class="comment">//for (i = 0; i &lt; N; i++)</span></span><br><span class="line">    <span class="comment">//printf("%s\n", s[i].name);</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= K; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    flag3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (col % <span class="number">2</span> == <span class="number">0</span>||col == <span class="number">1</span>)</span><br><span class="line">      flag2 = col;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      flag2 = col - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= col; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (col*K &lt; N &amp;&amp; !flag1)</span><br><span class="line">      &#123;</span><br><span class="line">        flag2 = flag4 = N - col*(K - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span> (flag4--)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (!flag3)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">printf</span>(s[<span class="built_in">abs</span>(flag2) - <span class="number">1</span>].name); flag3 = <span class="number">1</span>; <span class="keyword">if</span> (flag2 == <span class="number">2</span>) flag2--; flag2 -= <span class="number">2</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %s"</span>, s[<span class="built_in">abs</span>(flag2) - <span class="number">1</span>].name); <span class="keyword">if</span> (flag2 == <span class="number">2</span>) flag2--; flag2 -= <span class="number">2</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        flag1 = <span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!flag3)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(s[<span class="built_in">abs</span>(flag2)<span class="number">-1</span> + flag4].name); flag3 = <span class="number">1</span>; <span class="keyword">if</span> (flag2 == <span class="number">2</span>) flag2--; flag2 -= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">" %s"</span>, s[<span class="built_in">abs</span>(flag2) - <span class="number">1</span>+flag4].name); <span class="keyword">if</span> (flag2 == <span class="number">2</span>) flag2--; flag2 -= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">    <span class="keyword">if</span> (!flag5)</span><br><span class="line">    &#123;</span><br><span class="line">      flag4 = N - col*(K - <span class="number">1</span>); flag5 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      flag4 += col;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1056、组合数的和"><a href="#1056、组合数的和" class="headerlink" title="1056、组合数的和"></a>1056、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805271455449088" target="_blank" rel="noopener">组合数的和</a></h4><p>给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。 </p><p><strong>输入描述</strong></p><p>输入在一行中先给出 N（1 &lt; N &lt; 10），随后给出 N 个不同的非 0 个位数字。数字间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">2</span> <span class="number">8</span> <span class="number">5</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出所有可能组合出来的2位数字的和。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 330</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;N);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">count += num*(N<span class="number">-1</span>)*<span class="number">10</span>+num*(N<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1057、数零壹"><a href="#1057、数零壹" class="headerlink" title="1057、数零壹"></a>1057、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270914383872" target="_blank" rel="noopener">数零壹</a></h4><p>给定一串长度不超过 105 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 <code>PAT (Basic)</code>，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。 </p><p><strong>输入描述</strong></p><p>输入在一行中给出长度不超过 10^5^、以回车结束的字符串。 </p><blockquote><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; PAT (<span class="name">Basic</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中先后输出 0 的个数和 1 的个数，其间以空格分隔。注意：若字符串中不存在字母，则视为 N 不存在，也就没有 0 和 1。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">4</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">while</span> ((ch = getchar()) != <span class="string">'\n'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch &gt;= <span class="string">'A'</span>&amp;&amp;ch &lt;= <span class="string">'Z'</span>)</span><br><span class="line">count += ch-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch &gt;= <span class="string">'a'</span>&amp;&amp; ch &lt;= <span class="string">'z'</span>)</span><br><span class="line">count += ch-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">0</span>,num2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (count) &#123;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line">temp = count%<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">num1++;</span><br><span class="line"><span class="keyword">if</span> (temp == <span class="number">1</span>)</span><br><span class="line">num2++;</span><br><span class="line">count = count/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d %d"</span>,num1,num2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1058、选择题"><a href="#1058、选择题" class="headerlink" title="1058、选择题"></a>1058、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270356541440" target="_blank" rel="noopener">选择题</a></h4><p>批改多选题是比较麻烦的事情，本题就请你写个程序帮助老师批改多选题，并且指出哪道题错的人最多。 </p><p><strong>输入描述</strong></p><p>输入在第一行给出两个正整数 N（≤ 1000）和 M（≤ 100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 <code>(选中的选项个数 选项1 ……)</code>，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。 </p><blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">4</span> </span><br><span class="line">&gt; <span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="selector-tag">a</span> c</span><br><span class="line">&gt; <span class="number">2</span> <span class="number">5</span> <span class="number">1</span> b</span><br><span class="line">&gt; <span class="number">5</span> <span class="number">3</span> <span class="number">2</span> <span class="selector-tag">b</span> c</span><br><span class="line">&gt; <span class="number">1</span> <span class="number">5</span> <span class="number">4</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> d e</span><br><span class="line">&gt; (<span class="number">2</span> <span class="selector-tag">a</span> c) (<span class="number">2</span> <span class="selector-tag">b</span> d) (<span class="number">2</span> <span class="selector-tag">a</span> c) (<span class="number">3</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> e)</span><br><span class="line">&gt; (<span class="number">2</span> <span class="selector-tag">a</span> c) (<span class="number">1</span> b) (<span class="number">2</span> <span class="selector-tag">a</span> b) (<span class="number">4</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> d e)</span><br><span class="line">&gt; (<span class="number">2</span> <span class="selector-tag">b</span> d) (<span class="number">1</span> e) (<span class="number">2</span> <span class="selector-tag">b</span> c) (<span class="number">4</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> c d)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>按照输入的顺序给出每个学生的得分，每个分数占一行。注意判题时只有选择全部正确才能得到该题的分数。最后一行输出错得最多的题目的错误次数和编号（题目按照输入的顺序从 1 开始编号）。如果有并列，则按编号递增顺序输出。数字间用空格分隔，行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 <code>Too simple</code>。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span></span><br><span class="line">&gt; <span class="number">6</span></span><br><span class="line">&gt; <span class="number">5</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> N, M, i, j, flag1 = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> ch;</span><br><span class="line">  <span class="keyword">char</span> str[<span class="number">10</span>] = &#123; <span class="string">"\0"</span> &#125;, str1[<span class="number">10</span>] = &#123; <span class="string">"\0"</span> &#125;;</span><br><span class="line">  <span class="keyword">char</span> option[<span class="number">200</span>][<span class="number">20</span>];                        </span><br><span class="line">  <span class="keyword">int</span> subject[<span class="number">200</span>][<span class="number">20</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">  <span class="keyword">int</span> sutdent[<span class="number">2000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;M);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= M; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d "</span>, &amp;subject[i][<span class="number">0</span>]);</span><br><span class="line">    getchar(); getchar(); getchar(); getchar();</span><br><span class="line">    fgets(option[i], <span class="number">10</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span>(option[i][<span class="built_in">strlen</span>(option[i])<span class="number">-1</span>]==<span class="string">'\n'</span>)</span><br><span class="line">      option[i][<span class="built_in">strlen</span>(option[i]) - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= M; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      getchar(); getchar(); getchar();</span><br><span class="line">      <span class="keyword">while</span> ((ch=getchar()) != <span class="string">')'</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">strncpy</span>(str1,&amp;ch,<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(str, str1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(option[j], str))</span><br><span class="line">        sutdent[i] += subject[j][<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        subject[j][<span class="number">1</span>]++; flag1 = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      getchar();</span><br><span class="line">      <span class="built_in">memset</span>(str, <span class="string">'\0'</span>, <span class="keyword">sizeof</span>(str));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sutdent[i]);</span><br><span class="line">  <span class="keyword">if</span> (flag1 == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Too simple"</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= M; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (subject[i][<span class="number">1</span>] &gt;= max)</span><br><span class="line">      max = subject[i][<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, max);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= M; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (subject[i][<span class="number">1</span>] == max)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">" %d"</span>, i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1059、C语言竞赛"><a href="#1059、C语言竞赛" class="headerlink" title="1059、C语言竞赛"></a>1059、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269828059136" target="_blank" rel="noopener">C语言竞赛</a></h4><p>C 语言竞赛是浙江大学计算机学院主持的一个欢乐的竞赛。既然竞赛主旨是为了好玩，颁奖规则也就制定得很滑稽：</p><ul><li>0、冠军将赢得一份“神秘大奖”（比如很巨大的一本学生研究论文集……）。</li><li>1、排名为素数的学生将赢得最好的奖品 —— 小黄人玩偶！</li><li>2、其他人将得到巧克力。</li></ul><p>给定比赛的最终排名以及一系列参赛者的 ID，你要给出这些参赛者应该获得的奖品。</p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（≤104），是参赛者人数。随后 N 行给出最终排名，每行按排名顺序给出一位参赛者的 ID（4 位数字组成）。接下来给出一个正整数 K 以及 K 个需要查询的 ID。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 6</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 1111</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 6666</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 8888</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 1234</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 5555</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0001</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 6</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 8888</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0001</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 1111</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 2222</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 8888</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 2222</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个要查询的 ID，在一行中输出 <code>ID: 奖品</code>，其中奖品或者是 <code>Mystery Award</code>（神秘大奖）、或者是 <code>Minion</code>（小黄人）、或者是 <code>Chocolate</code>（巧克力）。如果所查 ID 根本不在排名里，打印 <code>Are you kidding?</code>（耍我呢？）。如果该 ID 已经查过了（即奖品已经领过了），打印 <code>ID: Checked</code>（不能多吃多占）。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 8888: Minion</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0001: Chocolate</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 1111: Mystery Award</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 2222: Are you kidding?</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 8888: Checked</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 2222: Are you kidding?</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">10001</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;N);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">arr[num] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num);</span><br><span class="line"><span class="keyword">if</span> (arr[num] == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%04d: Checked\n"</span>,num);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (arr[num] == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%04d: Mystery Award\n"</span>,num);</span><br><span class="line">arr[num] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">2</span>; j &lt;= <span class="built_in">sqrt</span>(arr[num]); j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[num]%j == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%04d: Chocolate\n"</span>,num);</span><br><span class="line">arr[num] = <span class="number">-1</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag&amp;&amp;arr[num] != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%04d: Minion\n"</span>,num);</span><br><span class="line">arr[num] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%04d: Are you kidding?\n"</span>,num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1060、爱丁顿数"><a href="#1060、爱丁顿数" class="headerlink" title="1060、爱丁顿数"></a>1060、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269312159744" target="_blank" rel="noopener">爱丁顿数</a></h4><p>英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” E ，即满足有 E 天骑车超过 E 英里的最大整数 E。据说爱丁顿自己的 E 等于87。</p><p>现给定某人 N 天的骑车距离，请你算出对应的爱丁顿数 E（≤N）。</p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N (≤10^5^)，即连续骑车的天数；第二行给出 N 个非负整数，代表每天的骑车距离。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span></span><br><span class="line">&gt; <span class="number">6</span> <span class="number">7</span> <span class="number">6</span> <span class="number">9</span> <span class="number">3</span> <span class="number">10</span> <span class="number">8</span> <span class="number">2</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中给出 N 天的爱丁顿数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 6</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>*a, <span class="keyword">const</span> <span class="keyword">void</span>*b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> *(<span class="keyword">int</span> *)b - *(<span class="keyword">int</span> *)a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> n, i;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">  qsort(&amp;a[<span class="number">1</span>], n, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), comp);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    <span class="keyword">if</span> (a[i] &lt;= i)<span class="keyword">break</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, i - <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1061、判断题"><a href="#1061、判断题" class="headerlink" title="1061、判断题"></a>1061、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268817231872" target="_blank" rel="noopener">判断题</a></h4><p>判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。 </p><p><strong>输入描述</strong></p><p>输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">6</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">&gt; <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line">&gt; <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">&gt; <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>按照输入的顺序输出每个学生的得分，每个分数占一行。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 13</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 11</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 12</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">( )</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">100</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;N,&amp;M);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) </span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;arr[i][<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;arr[i][<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num);</span><br><span class="line"><span class="keyword">if</span> (num == arr[j][<span class="number">1</span>])</span><br><span class="line">count += arr[j][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,count);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1062、最简分数"><a href="#1062、最简分数" class="headerlink" title="1062、最简分数"></a>1062、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268334886912" target="_blank" rel="noopener">最简分数</a></h4><p>一个分数一般写成两个整数相除的形式：N/M，其中 M 不为0。最简分数是指分子和分母没有公约数的分数表示形式。</p><p>现给定两个不相等的正分数 N1/M1 和 N2/M2，要求你按从小到大的顺序列出它们之间分母为 K 的最简分数。</p><p><strong>输入描述</strong></p><p>输入在一行中按 N/M 的格式给出两个正分数，随后是一个正整数分母 K，其间以空格分隔。题目保证给出的所有整数都不超过 1000。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">7</span>/<span class="number">18</span> <span class="number">13</span>/<span class="number">20</span> <span class="number">12</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中按 N/M 的格式列出两个给定分数之间分母为 K 的所有最简分数，按从小到大的顺序，其间以 1 个空格分隔。行首尾不得有多余空格。题目保证至少有 1 个输出。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span>/<span class="number">12</span> <span class="number">7</span>/<span class="number">12</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kgcd</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>*, <span class="keyword">int</span>*)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> N1, N2, M1, M2, K;</span><br><span class="line">  <span class="keyword">int</span> Num = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d/%d %d/%d %d"</span>, &amp;N1, &amp;M1, &amp;N2, &amp;M2, &amp;K);</span><br><span class="line">  <span class="keyword">if</span> (N2*M1 &lt; N1*M2) &#123;</span><br><span class="line">    swap(&amp;N1, &amp;N2);</span><br><span class="line">    swap(&amp;M1, &amp;M2);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (N1*K &gt;= Num*M1) Num++;</span><br><span class="line">  <span class="keyword">while</span> (N1*K &lt; Num*M1&amp;&amp;Num*M2 &lt; K*N2) &#123;</span><br><span class="line">      <span class="keyword">if</span> (kgcd(Num, K) == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%d/%d"</span>, Num, K); flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">" %d/%d"</span>, Num, K);</span><br><span class="line">        &#125;</span><br><span class="line">    Num++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a == b)</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">    <span class="keyword">return</span> kgcd(b, a);</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(a &amp; <span class="number">1</span>) &amp;&amp; !(b &amp; <span class="number">1</span>))</span><br><span class="line">      <span class="keyword">return</span> kgcd(a &gt;&gt; <span class="number">1</span>, b &gt;&gt; <span class="number">1</span>) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!(a &amp; <span class="number">1</span>) &amp;&amp; b &amp; <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">return</span> kgcd(a &gt;&gt; <span class="number">1</span>, b);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a &amp; <span class="number">1</span> &amp;&amp; !(b &amp; <span class="number">1</span>))</span><br><span class="line">      <span class="keyword">return</span> kgcd(a, b &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">return</span> kgcd(b, a - b);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> temp;</span><br><span class="line">  temp = *a;</span><br><span class="line">  *a = *b;</span><br><span class="line">  *b = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1063、计算谱半径"><a href="#1063、计算谱半径" class="headerlink" title="1063、计算谱半径"></a>1063、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267860930560" target="_blank" rel="noopener">计算谱半径</a></h4><p>在数学中，矩阵的“谱半径”是指其特征值的模集合的上确界。换言之，对于给定的 n 个复数空间的特征值 { a1+b1i,⋯,an+bni }，它们的模为实部与虚部的平方和的开方，而“谱半径”就是最大模。</p><p>现在给定一些复数空间的特征值，请你计算并输出这些特征值的谱半径。</p><p><strong>输入描述</strong></p><p>输入第一行给出正整数 N（≤ 10 000）是输入的特征值的个数。随后 N 行，每行给出 1 个特征值的实部和虚部，其间以空格分隔。注意：题目保证实部和虚部均为绝对值不超过 1000 的整数。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span></span><br><span class="line">&gt; <span class="number">0</span> <span class="number">1</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">0</span></span><br><span class="line">&gt; <span class="number">-1</span> <span class="number">0</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">0</span> <span class="number">-3</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出谱半径，四舍五入保留小数点后 2 位。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 4.24</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> num1,num2;</span><br><span class="line"><span class="keyword">double</span> temp;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;num1,&amp;num2);</span><br><span class="line">temp = (<span class="keyword">double</span>)<span class="built_in">sqrt</span>(num1*num1+num2*num2);</span><br><span class="line"><span class="keyword">if</span> (temp &gt; max)</span><br><span class="line">max = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%.2lf"</span>,max);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1064、朋友数"><a href="#1064、朋友数" class="headerlink" title="1064、朋友数"></a>1064、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336" target="_blank" rel="noopener">朋友数</a></h4><p>如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。例如 123 和 51 就是朋友数，因为 1+2+3 = 5+1 = 6，而 6 就是它们的朋友证号。给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。 </p><p><strong>输入描述</strong></p><p>输入第一行给出正整数 N。随后一行给出 N 个正整数，数字间以空格分隔。题目保证所有数字小于 10^4^。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">8</span></span><br><span class="line">&gt; <span class="number">123</span> <span class="number">899</span> <span class="number">51</span> <span class="number">998</span> <span class="number">27</span> <span class="number">33</span> <span class="number">36</span> <span class="number">12</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>首先第一行输出给定数字中不同的朋友证号的个数；随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">4</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">6</span> <span class="number">9</span> <span class="number">26</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span> <span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (num != <span class="number">0</span>) &#123;</span><br><span class="line">result = result + num%<span class="number">10</span>;</span><br><span class="line">num = num / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">100000</span>];</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;  <span class="comment">//不同朋友证号的个数</span></span><br><span class="line"><span class="keyword">int</span> result[<span class="number">100000</span>];  <span class="comment">//不同朋友证号 </span></span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num[i]);</span><br><span class="line"><span class="keyword">int</span> shusum = sum (num[i]);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; count; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (result[j] == shusum) &#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">result[count] = shusum;</span><br><span class="line">count = count + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将朋友证号按递增方式排列 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= count<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; count<span class="number">-1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (result[j] &gt; result[j+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line">temp = result[j];</span><br><span class="line">result[j] = result[j+<span class="number">1</span>];</span><br><span class="line">result[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,count);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ( i == <span class="number">0</span>) </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,result[i]);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" %d"</span>,result[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1065、单身狗"><a href="#1065、单身狗" class="headerlink" title="1065、单身狗"></a>1065、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984" target="_blank" rel="noopener">单身狗</a></h4><p>“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。 </p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（≤ 50 000），是已知夫妻/伴侣的对数；随后 N 行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个 ID 号，为 5 位数字（从 00000 到 99999），ID 间以空格分隔；之后给出一个正整数 M（≤ 10 000），为参加派对的总人数；随后一行给出这 M 位客人的 ID，以空格分隔。题目保证无人重婚或脚踩两条船。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span></span><br><span class="line">&gt; <span class="number">11111</span> <span class="number">22222</span></span><br><span class="line">&gt; <span class="number">33333</span> <span class="number">44444</span></span><br><span class="line">&gt; <span class="number">55555</span> <span class="number">66666</span></span><br><span class="line">&gt; <span class="number">7</span></span><br><span class="line">&gt; <span class="number">55555</span> <span class="number">44444</span> <span class="number">10000</span> <span class="number">88888</span> <span class="number">22222</span> <span class="number">11111</span> <span class="number">23333</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>首先第一行输出落单客人的总人数；随后第二行按 ID 递增顺序列出落单的客人。ID 间用 1 个空格分隔，行的首尾不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span></span><br><span class="line">&gt; <span class="number">10000</span> <span class="number">23333</span> <span class="number">44444</span> <span class="number">55555</span> <span class="number">88888</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">50000</span>][<span class="number">2</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> num1,num2;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;num1,&amp;num2);</span><br><span class="line">arr[i][<span class="number">0</span>] = num1;</span><br><span class="line">arr[i][<span class="number">1</span>] = num2;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="keyword">int</span> arr1[<span class="number">100000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">arr1[num] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((arr1[arr[i][<span class="number">0</span>]] == <span class="number">1</span> )&amp;&amp;( arr1[arr[i][<span class="number">1</span>]] == <span class="number">1</span>)) &#123;</span><br><span class="line">arr1[arr[i][<span class="number">0</span>]] = <span class="number">0</span>;</span><br><span class="line">arr1[arr[i][<span class="number">1</span>]] = <span class="number">0</span>;</span><br><span class="line">m -= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,m);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr1[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%05d"</span>,i);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" %05d"</span>,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1066、图像过滤"><a href="#1066、图像过滤" class="headerlink" title="1066、图像过滤"></a>1066、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266514558976" target="_blank" rel="noopener">图像过滤</a></h4><p>图像过滤是把图像中不重要的像素都染成背景色，使得重要部分被凸显出来。现给定一幅黑白图像，要求你将灰度值位于某指定区间内的所有像素颜色都用一种指定的颜色替换。 </p><p><strong>输入描述</strong></p><p>输入在第一行给出一幅图像的分辨率，即两个正整数 M 和 N（0&lt;M,N≤500），另外是待过滤的灰度值区间端点 A 和 B（0≤A&lt;B≤255）、以及指定的替换灰度值。随后 M 行，每行给出 N 个像素点的灰度值，其间以空格分隔。所有灰度值都在 [0, 255] 区间内。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">5</span> <span class="number">100</span> <span class="number">150</span> <span class="number">0</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">189</span> <span class="number">254</span> <span class="number">101</span> <span class="number">119</span></span><br><span class="line">&gt; <span class="number">150</span> <span class="number">233</span> <span class="number">151</span> <span class="number">99</span> <span class="number">100</span></span><br><span class="line">&gt; <span class="number">88</span> <span class="number">123</span> <span class="number">149</span> <span class="number">0</span> <span class="number">255</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出按要求过滤后的图像。即输出 M 行，每行 N 个像素灰度值，每个灰度值占 3 位（例如黑色要显示为 <code>000</code>），其间以一个空格分隔。行首尾不得有多余空格。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">003</span> <span class="number">189</span> <span class="number">254</span> <span class="number">000</span> <span class="number">000</span></span><br><span class="line">&gt; <span class="number">000</span> <span class="number">233</span> <span class="number">151</span> <span class="number">099</span> <span class="number">000</span></span><br><span class="line">&gt; <span class="number">088</span> <span class="number">000</span> <span class="number">000</span> <span class="number">000</span> <span class="number">255</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d %d %d %d"</span>,&amp;m,&amp;n,&amp;a,&amp;b,&amp;temp);</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">500</span>][<span class="number">500</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num[i][j]);</span><br><span class="line"><span class="keyword">if</span> (num[i][j] &gt;= a&amp;&amp;num[i][j] &lt;= b)</span><br><span class="line">num[i][j] = temp; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> ( j == <span class="number">0</span>) </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%03d"</span>,num[i][j]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">" %03d"</span>,num[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1067、试密码"><a href="#1067、试密码" class="headerlink" title="1067、试密码"></a>1067、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266007048192" target="_blank" rel="noopener">试密码</a></h4><p>当你试图登录某个系统却忘了密码时，系统一般只会允许你尝试有限多次，当超出允许次数时，账号就会被锁死。本题就请你实现这个小功能。 </p><p><strong>输入描述</strong></p><p>输入在第一行给出一个密码（长度不超过 20 的、不包含空格、Tab、回车的非空字符串）和一个正整数 N（≤ 10），分别是正确的密码和系统允许尝试的次数。随后每行给出一个以回车结束的非空字符串，是用户尝试输入的密码。输入保证至少有一次尝试。当读到一行只有单个 # 字符时，输入结束，并且这一行不是用户的输入。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Correct%pw 3</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> correct%pw</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Correct@PW</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> whatisthepassword!</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Correct%pw</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="comment">#</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对用户的每个输入，如果是正确的密码且尝试次数不超过 N，则在一行中输出 <code>Welcome in</code>，并结束程序；如果是错误的，则在一行中按格式输出 <code>Wrong password: 用户输入的错误密码</code>；当错误尝试达到 N 次时，再输出一行 <code>Account locked</code>，并结束程序。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Wrong password: correct%pw</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Wrong password: Correct@PW</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Wrong password: whatisthepassword!</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Account locked</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">char</span> psw[<span class="number">21</span>], ans[<span class="number">10000</span>];     <span class="comment">//这里输出的密码数组记得大一点</span></span><br><span class="line">  <span class="keyword">int</span> N, flag;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s%d"</span>, psw, &amp;N);</span><br><span class="line">  flag = N;</span><br><span class="line">  getchar();                    <span class="comment">//吃掉回车</span></span><br><span class="line">  fgets(ans, <span class="number">10000</span>, <span class="built_in">stdin</span>);     <span class="comment">//如果想读取带空格的字符串，就用fgets吧 不过fgets会读取最后一个‘/n’,所以要去掉‘/n’</span></span><br><span class="line">  <span class="keyword">if</span> (ans[<span class="built_in">strlen</span>(ans) - <span class="number">1</span>] == <span class="string">'\n'</span>) </span><br><span class="line">    ans[<span class="built_in">strlen</span>(ans) - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">strlen</span>(ans) != <span class="number">1</span> || ans[<span class="number">0</span>] != <span class="string">'#'</span>)   <span class="comment">//这里就是判断是不是答案了 判断的先后顺序也很重要 </span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(psw, ans) == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"Welcome in"</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"Wrong password: %s\n"</span>, ans); flag--;    <span class="comment">//flag就是剩余的可以输入的个数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"Account locked"</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fgets(ans, <span class="number">10000</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ans[<span class="built_in">strlen</span>(ans) - <span class="number">1</span>] == <span class="string">'\n'</span>)</span><br><span class="line">      ans[<span class="built_in">strlen</span>(ans) - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1068、万绿丛中一点红"><a href="#1068、万绿丛中一点红" class="headerlink" title="1068、万绿丛中一点红"></a>1068、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265579229184" target="_blank" rel="noopener">万绿丛中一点红</a></h4><p>对于计算机而言，颜色不过是像素点对应的一个 24 位的数值。现给定一幅分辨率为 M×N 的画，要求你找出万绿丛中的一点红，即有独一无二颜色的那个像素点，并且该点的颜色与其周围 8 个相邻像素的颜色差充分大。 </p><p><strong>输入描述</strong></p><p>输入第一行给出三个正整数，分别是 M 和 N（≤ 1000），即图像的分辨率；以及 TOL，是所求像素点与相邻点的颜色差阈值，色差超过 TOL 的点才被考虑。随后 N 行，每行给出 M 个像素的颜色值，范围在 [0,224) 内。所有同行数字间用空格或 TAB 分开。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">8</span> <span class="number">6</span> <span class="number">200</span></span><br><span class="line">&gt; <span class="number">0</span>      <span class="number">0</span>       <span class="number">0</span>        <span class="number">0</span>        <span class="number">0</span>          <span class="number">0</span>           <span class="number">0</span>        <span class="number">0</span></span><br><span class="line">&gt; <span class="number">65280</span>      <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">16711479</span> <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span></span><br><span class="line">&gt; <span class="number">16711479</span> <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">16711680</span> <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span></span><br><span class="line">&gt; <span class="number">65280</span>      <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">165280</span>   <span class="number">165280</span></span><br><span class="line">&gt; <span class="number">65280</span>      <span class="number">65280</span>       <span class="number">16777015</span> <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">165280</span>   <span class="number">65480</span>    <span class="number">165280</span></span><br><span class="line">&gt; <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中按照 <code>(x, y): color</code> 的格式输出所求像素点的位置以及颜色值，其中位置 <code>x</code> 和 <code>y</code> 分别是该像素在图像矩阵中的列、行编号（从 1 开始编号）。如果这样的点不唯一，则输出 <code>Not Unique</code>；如果这样的点不存在，则输出 <code>Not Exist</code>。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> (5, 3): 16711680</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">serch</span><span class="params">(<span class="keyword">int</span>**,<span class="keyword">int</span> ,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;   <span class="comment">//判断这个数是不是只有一个</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> i, j, flag = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> **arr, **arr1, M, N, TOL, x, y, color, m, n;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;M, &amp;N, &amp;TOL);</span><br><span class="line">  arr = (<span class="keyword">int</span>**)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>*)*(N + <span class="number">2</span>));           <span class="comment">//申请2个相同的动态二维数组</span></span><br><span class="line">  arr1 = (<span class="keyword">int</span>**)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>*)*(N + <span class="number">2</span>));</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N + <span class="number">2</span>; i++) &#123;</span><br><span class="line">    arr[i] = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*(M + <span class="number">2</span>)); </span><br><span class="line">    arr1[i] = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*(M + <span class="number">2</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N + <span class="number">2</span>; i++)</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; M + <span class="number">2</span>; j++) &#123;</span><br><span class="line">      arr[i][j] = <span class="number">0</span>;</span><br><span class="line">      arr1[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= M; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;arr[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">//for (i = 0; i &lt;= N + 1; i++) &#123;</span></span><br><span class="line">  <span class="comment">//  for (j = 0; j &lt;= M + 1; j++)</span></span><br><span class="line">  <span class="comment">//    printf("%.0lf\t", arr[i][j]);</span></span><br><span class="line">  <span class="comment">//  printf("\n");</span></span><br><span class="line">  <span class="comment">//&#125;</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; i++) &#123;              <span class="comment">//判断 8个方向</span></span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= M; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i - <span class="number">1</span>][j - <span class="number">1</span>]) &amp;&amp; TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i - <span class="number">1</span>][j]) &amp;&amp;</span><br><span class="line">        TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i - <span class="number">1</span>][j + <span class="number">1</span>]) &amp;&amp; TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i][j - <span class="number">1</span>]) &amp;&amp;</span><br><span class="line">        TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i][j + <span class="number">1</span>]) &amp;&amp; TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i + <span class="number">1</span>][j - <span class="number">1</span>]) &amp;&amp;</span><br><span class="line">        TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i + <span class="number">1</span>][j]) &amp;&amp; TOL &lt; <span class="built_in">abs</span>(arr[i][j] - arr[i + <span class="number">1</span>][j + <span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">if</span> (serch(arr, M, N, arr[i][j])) &#123;      <span class="comment">//如果上面条件满足，还要满足这个数只有一个</span></span><br><span class="line">          x = j; y = i; color = arr[i][j]; flag++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"(%d, %d): %d"</span>, x, y, color);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(flag&gt;<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Not Unique"</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Not Exist"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">serch</span><span class="params">(<span class="keyword">int</span>** a,<span class="keyword">int</span> m,<span class="keyword">int</span> n,<span class="keyword">int</span> color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i, j, k = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (a[i][j] == color)</span><br><span class="line">        k++;</span><br><span class="line">      <span class="keyword">if</span>(k&gt;<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1069、微博转发抽奖"><a href="#1069、微博转发抽奖" class="headerlink" title="1069、微博转发抽奖"></a>1069、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784" target="_blank" rel="noopener">微博转发抽奖</a></h4><p>小明 PAT 考了满分，高兴之余决定发起微博转发抽奖活动，从转发的网友中按顺序每隔 N 个人就发出一个红包。请你编写程序帮助他确定中奖名单。 </p><p><strong>输入描述</strong></p><p>输入第一行给出三个正整数 M（≤ 1000）、N 和 S，分别是转发的总量、小明决定的中奖间隔、以及第一位中奖者的序号（编号从 1 开始）。随后 M 行，顺序给出转发微博的网友的昵称（不超过 20 个字符、不包含空格回车的非空字符串）。</p><p>注意：可能有人转发多次，但不能中奖多次。所以如果处于当前中奖位置的网友已经中过奖，则跳过他顺次取下一位。</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 9 3 2</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Imgonnawin!</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> PickMe</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> PickMeMeMeee</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> LookHere</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Imgonnawin!</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> TryAgainAgain</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> TryAgainAgain</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Imgonnawin!</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> TryAgainAgain</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>按照输入的顺序输出中奖名单，每个昵称占一行。如果没有人中奖，则输出 <code>Keep going...</code>。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> PickMe</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Imgonnawin!</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> TryAgainAgain</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> M, N, S, i, j,flag = <span class="number">0</span>, flag1 = <span class="number">0</span>, count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> <span class="built_in">list</span>[<span class="number">1010</span>][<span class="number">30</span>];</span><br><span class="line">  <span class="keyword">char</span> str[<span class="number">30</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;M, &amp;N, &amp;S);</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= M; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    fgets(str, <span class="number">30</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (str[<span class="built_in">strlen</span>(str) - <span class="number">1</span>] == <span class="string">'\n'</span>)</span><br><span class="line">      str[<span class="built_in">strlen</span>(str) - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= S) &#123;</span><br><span class="line">      <span class="keyword">if</span> (count% N == <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; flag; j++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="built_in">list</span>[j], str) == <span class="number">0</span>) &#123;</span><br><span class="line">            flag1 = <span class="number">1</span>; count--;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!flag1) &#123;</span><br><span class="line">          <span class="built_in">strcpy</span>(<span class="built_in">list</span>[flag], str); flag++;</span><br><span class="line">        &#125;</span><br><span class="line">        flag1 = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      count++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Keep going...\n"</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; flag; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="built_in">list</span>[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1070、结绳"><a href="#1070、结绳" class="headerlink" title="1070、结绳"></a>1070、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952" target="_blank" rel="noopener">结绳</a></h4><p>给定一段一段的绳子，你需要把它们串成一条绳。每次串连的时候，是把两段绳子对折，再如下图所示套接在一起。这样得到的绳子又被当成是另一段绳子，可以再次对折去跟另一段绳子串连。每次串连后，原来两段绳子的长度就会减半。 给定 N 段绳子的长度，你需要找出它们能串成的绳子的最大长度。 </p><p><strong>输入描述</strong></p><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出正整数 N (2≤N≤10^4^)；第 2 行给出 N 个正整数，即原始绳段的长度，数字间以空格分隔。所有整数都不超过10^4^。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">8</span></span><br><span class="line">&gt; <span class="number">10</span> <span class="number">15</span> <span class="number">12</span> <span class="number">3</span> <span class="number">4</span> <span class="number">13</span> <span class="number">1</span> <span class="number">15</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出能够串成的绳子的最大长度。结果向下取整，即取为不超过最大长度的最近整数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 14</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>*a, <span class="keyword">const</span> <span class="keyword">void</span>*b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> *(<span class="keyword">int</span> *)a - *(<span class="keyword">int</span> *)b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line">  <span class="comment">//freopen("output.txt", "w", stdout);</span></span><br><span class="line">  <span class="keyword">int</span> N, i;</span><br><span class="line">  <span class="keyword">int</span> arr[<span class="number">100000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">  <span class="keyword">double</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  qsort(arr, N, <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]), cmp);</span><br><span class="line">  count += arr[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span> (i =<span class="number">1</span>; i &lt;N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    count = count / <span class="number">2</span> + (arr[i] / <span class="number">2.0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, (<span class="keyword">int</span>)count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1071、小赌怡情"><a href="#1071、小赌怡情" class="headerlink" title="1071、小赌怡情"></a>1071、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264312549376" target="_blank" rel="noopener">小赌怡情</a></h4><p>常言道“小赌怡情”。这是一个很简单的小游戏：首先由计算机给出第一个整数；然后玩家下注赌第二个整数将会比第一个数大还是小；玩家下注 t 个筹码后，计算机给出第二个数。若玩家猜对了，则系统奖励玩家 t 个筹码；否则扣除玩家 t 个筹码。</p><p>注意：玩家下注的筹码数不能超过自己帐户上拥有的筹码数。当玩家输光了全部筹码后，游戏就结束。</p><p><strong>输入描述</strong></p><p>输入在第一行给出 2 个正整数 T 和 K（≤ 100），分别是系统在初始状态下赠送给玩家的筹码数、以及需要处理的游戏次数。随后 K 行，每行对应一次游戏，顺序给出 4 个数字：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">n1</span> b t <span class="symbol">n2</span></span><br></pre></td></tr></table></figure><p>其中 <code>n1</code> 和 <code>n2</code> 是计算机先后给出的两个[0, 9]内的整数，保证两个数字不相等。<code>b</code> 为 0 表示玩家赌<code>小</code>，为 1 表示玩家赌<code>大</code>。<code>t</code> 表示玩家下注的筹码数，保证在整型范围内。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">100</span> <span class="number">4</span></span><br><span class="line">&gt; <span class="number">8</span> <span class="number">0</span> <span class="number">100</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">1</span> <span class="number">50</span> <span class="number">1</span></span><br><span class="line">&gt; <span class="number">5</span> <span class="number">1</span> <span class="number">200</span> <span class="number">6</span></span><br><span class="line">&gt; <span class="number">7</span> <span class="number">0</span> <span class="number">200</span> <span class="number">8</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每一次游戏，根据下列情况对应输出（其中 <code>t</code> 是玩家下注量，<code>x</code> 是玩家当前持有的筹码量）：</p><ul><li>玩家赢，输出 <code>Win t! Total = x.</code>；</li><li>玩家输，输出 <code>Lose t. Total = x.</code>；</li><li>玩家下注超过持有的筹码量，输出 <code>Not enough tokens. Total = x.</code>；</li><li>玩家输光后，输出 <code>Game Over.</code> 并结束程序。</li></ul><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; Win <span class="number">100</span>!  Total = <span class="number">200.</span></span><br><span class="line">&gt; Lose <span class="number">50.</span>  Total = <span class="number">150.</span></span><br><span class="line">&gt; Not enough tokens.  Total = <span class="number">150.</span></span><br><span class="line">&gt; Not enough tokens.  Total = <span class="number">150.</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,k;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;x,&amp;k);</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">105</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d %d %d"</span>,&amp;num[i][<span class="number">0</span>],&amp;num[i][<span class="number">1</span>],&amp;num[i][<span class="number">2</span>],&amp;num[i][<span class="number">3</span>]);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> n1,b,t,n2;</span><br><span class="line">n1 = num[i][<span class="number">0</span>];</span><br><span class="line">b = num[i][<span class="number">1</span>];</span><br><span class="line">t = num[i][<span class="number">2</span>];</span><br><span class="line">n2 = num[i][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">if</span> ( t &gt; x ) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Not enough tokens.  Total = %d."</span>,x);</span><br><span class="line"><span class="keyword">if</span> (i != k<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (((n2 &lt; n1) &amp;&amp; (b == <span class="number">0</span>)) || ((n2 &gt; n1) &amp;&amp; (b == <span class="number">1</span>))) &#123; <span class="comment">// win</span></span><br><span class="line">x += t;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Win %d!  Total = %d."</span>,t,x);</span><br><span class="line"><span class="keyword">if</span> (i != k<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">x -= t;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Lose %d.  Total = %d."</span>,t,x);</span><br><span class="line"><span class="keyword">if</span> (i != k<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Game Over."</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1072、开学寄语"><a href="#1072、开学寄语" class="headerlink" title="1072、开学寄语"></a>1072、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263964422144" target="_blank" rel="noopener">开学寄语</a></h4><p>下图是上海某校的新学期开学寄语：天将降大任于斯人也，必先删其微博，卸其 QQ，封其电脑，夺其手机，收其 ipad，断其 wifi，使其百无聊赖，然后，净面、理发、整衣，然后思过、读书、锻炼、明智、开悟、精进。而后必成大器也！ 本题要求你写个程序帮助这所学校的老师检查所有学生的物品，以助其成大器。 </p><p><strong>输入描述</strong></p><p>输入第一行给出两个正整数 N（≤ 1000）和 M（≤ 6），分别是学生人数和需要被查缴的物品种类数。第二行给出 M 个需要被查缴的物品编号，其中编号为 4 位数字。随后 N 行，每行给出一位学生的姓名缩写（由 1-4 个大写英文字母组成）、个人物品数量 K（0 ≤ K ≤ 10）、以及 K 个物品的编号。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">4</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">2333</span> <span class="number">6666</span></span><br><span class="line">&gt; CYLL <span class="number">3</span> <span class="number">1234</span> <span class="number">2345</span> <span class="number">3456</span></span><br><span class="line">&gt; U <span class="number">4</span> <span class="number">9966</span> <span class="number">6666</span> <span class="number">8888</span> <span class="number">6666</span></span><br><span class="line">&gt; GG <span class="number">2</span> <span class="number">2333</span> <span class="number">7777</span></span><br><span class="line">&gt; JJ <span class="number">3</span> <span class="number">0012</span> <span class="number">6666</span> <span class="number">2333</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>顺次检查每个学生携带的物品，如果有需要被查缴的物品存在，则按以下格式输出该生的信息和其需要被查缴的物品的信息（注意行末不得有多余空格）：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">姓名缩写: 物品编号1 物品编号2 ……</span></span><br></pre></td></tr></table></figure><p>最后一行输出存在问题的学生的总人数和被查缴物品的总数。</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> U: 6666 6666</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> GG: 2333</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> JJ: 6666 2333</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 3 5</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span> ; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> st , th , i , j , in[<span class="number">10000</span>] = &#123;<span class="number">0</span>&#125; , all = <span class="number">0</span> , num = <span class="number">0</span> , tmp , temp , flag ; </span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">5</span>] ; </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; st &gt;&gt; th ; </span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; i &lt; th ; i++ ) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; tmp ;  </span><br><span class="line">        in[tmp] = <span class="number">1</span> ;  </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; i &lt; st ; i++ )&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name &gt;&gt; tmp ; </span><br><span class="line">        <span class="keyword">for</span> ( j = <span class="number">0</span> , flag = <span class="number">0</span> ; j &lt; tmp ; j++ )&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; temp ; </span><br><span class="line">            <span class="keyword">if</span> ( in[temp] == <span class="number">1</span> )&#123;</span><br><span class="line">                num++ ; </span><br><span class="line">                <span class="keyword">if</span> ( flag == <span class="number">0</span> ) &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; name &lt;&lt; <span class="string">":"</span> ; </span><br><span class="line">                    flag = <span class="number">1</span> ; </span><br><span class="line">                    all++ ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %04d"</span>,temp) ; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( flag )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> ; </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; all &lt;&lt; <span class="string">" "</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span> ; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1073、多选题常见计分法"><a href="#1073、多选题常见计分法" class="headerlink" title="1073、多选题常见计分法"></a>1073、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263624683520" target="_blank" rel="noopener">多选题常见计分法</a></h4><p>批改多选题是比较麻烦的事情，有很多不同的计分方法。有一种最常见的计分方法是：如果考生选择了部分正确选项，并且没有选择任何错误选项，则得到 50% 分数；如果考生选择了任何一个错误的选项，则不能得分。本题就请你写个程序帮助老师批改多选题，并且指出哪道题的哪个选项错的人最多。 </p><p><strong>输入描述</strong></p><p>输入在第一行给出两个正整数 N（≤1000）和 M（≤100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 <code>(选中的选项个数 选项1 ……)</code>，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。 </p><blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span> <span class="number">4</span> </span><br><span class="line">&gt; <span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="selector-tag">a</span> c</span><br><span class="line">&gt; <span class="number">2</span> <span class="number">5</span> <span class="number">1</span> b</span><br><span class="line">&gt; <span class="number">5</span> <span class="number">3</span> <span class="number">2</span> <span class="selector-tag">b</span> c</span><br><span class="line">&gt; <span class="number">1</span> <span class="number">5</span> <span class="number">4</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> d e</span><br><span class="line">&gt; (<span class="number">2</span> <span class="selector-tag">a</span> c) (<span class="number">3</span> <span class="selector-tag">b</span> d e) (<span class="number">2</span> <span class="selector-tag">a</span> c) (<span class="number">3</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> e)</span><br><span class="line">&gt; (<span class="number">2</span> <span class="selector-tag">a</span> c) (<span class="number">1</span> b) (<span class="number">2</span> <span class="selector-tag">a</span> b) (<span class="number">4</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> d e)</span><br><span class="line">&gt; (<span class="number">2</span> <span class="selector-tag">b</span> d) (<span class="number">1</span> e) (<span class="number">1</span> c) (<span class="number">4</span> <span class="selector-tag">a</span> <span class="selector-tag">b</span> c d)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>按照输入的顺序给出每个学生的得分，每个分数占一行，输出小数点后 1 位。最后输出错得最多的题目选项的信息，格式为：<code>错误次数 题目编号（题目按照输入的顺序从1开始编号）-选项号</code>。如果有并列，则每行一个选项，按题目编号递增顺序输出；再并列则按选项号递增顺序输出。行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 <code>Too simple</code>。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3.5</span></span><br><span class="line">&gt; <span class="number">6.0</span></span><br><span class="line">&gt; <span class="number">2.5</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">2</span>-e</span><br><span class="line">&gt; <span class="number">2</span> <span class="number">3</span>-a</span><br><span class="line">&gt; <span class="number">2</span> <span class="number">3</span>-b</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">short</span> n, m, i, j, k, max = <span class="number">0</span>, temp;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%hd%hd"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">short</span> score[m], ac[m], err[m][<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">float</span> stu_sco[n];</span><br><span class="line">    <span class="built_in">memset</span>(ac, <span class="number">0</span>, m &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(stu_sco, <span class="number">0</span>, n &lt;&lt; <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">memset</span>(err, <span class="number">0</span>, <span class="keyword">sizeof</span>(err));</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%hd%*d%hd"</span>, score + i, &amp;j);</span><br><span class="line">        <span class="keyword">while</span>(j--)</span><br><span class="line">        &#123;</span><br><span class="line">            getchar();</span><br><span class="line">            ac[i] |= <span class="number">1</span> &lt;&lt; (getchar() - <span class="number">97</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%*[^0-5]%hd"</span>, &amp;k);</span><br><span class="line">            temp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(k--)</span><br><span class="line">            &#123;</span><br><span class="line">                getchar();</span><br><span class="line">                temp |= <span class="number">1</span> &lt;&lt; (getchar() - <span class="number">97</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(temp == ac[j])</span><br><span class="line">            &#123;</span><br><span class="line">                stu_sco[i] += score[j];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((temp | ac[j]) == ac[j])</span><br><span class="line">            &#123;</span><br><span class="line">                stu_sco[i] += score[j] / <span class="number">2.0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp ^= ac[j];</span><br><span class="line">            <span class="keyword">while</span>(temp != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                k = temp &amp; -temp;</span><br><span class="line">                <span class="keyword">switch</span>(k)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>: err[j][<span class="number">0</span>]++; max &lt; err[j][<span class="number">0</span>] ? max = err[j][<span class="number">0</span>] : <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>: err[j][<span class="number">1</span>]++; max &lt; err[j][<span class="number">1</span>] ? max = err[j][<span class="number">1</span>] : <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>: err[j][<span class="number">2</span>]++; max &lt; err[j][<span class="number">2</span>] ? max = err[j][<span class="number">2</span>] : <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">8</span>: err[j][<span class="number">3</span>]++; max &lt; err[j][<span class="number">3</span>] ? max = err[j][<span class="number">3</span>] : <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>: err[j][<span class="number">4</span>]++; max &lt; err[j][<span class="number">4</span>] ? max = err[j][<span class="number">4</span>] : <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                temp -= k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1f\n"</span>, stu_sco[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(max == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Too simple"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(err[i][j] == max)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%hd %hd-%c\n"</span>, max, i + <span class="number">1</span>, <span class="number">97</span> + j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1074、宇宙无敌加法器"><a href="#1074、宇宙无敌加法器" class="headerlink" title="1074、宇宙无敌加法器"></a>1074、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263297527808" target="_blank" rel="noopener">宇宙无敌加法器</a></h4><p>地球人习惯使用十进制数，并且默认一个数字的每一位都是十进制的。而在 PAT 星人开挂的世界里，每个数字的每一位都是不同进制的，这种神奇的数字称为“PAT数”。每个 PAT 星人都必须熟记各位数字的进制表，例如“……0527”就表示最低位是 7 进制数、第 2 位是 2 进制数、第 3 位是 5 进制数、第 4 位是 10 进制数，等等。每一位的进制 d 或者是 0（表示十进制）、或者是 [2，9] 区间内的整数。理论上这个进制表应该包含无穷多位数字，但从实际应用出发，PAT 星人通常只需要记住前 20 位就够用了，以后各位默认为 10 进制。</p><p>在这样的数字系统中，即使是简单的加法运算也变得不简单。例如对应进制表“0527”，该如何计算“6203 + 415”呢？我们得首先计算最低位：3 + 5 = 8；因为最低位是 7 进制的，所以我们得到 1 和 1 个进位。第 2 位是：0 + 1 + 1（进位）= 2；因为此位是 2 进制的，所以我们得到 0 和 1 个进位。第 3 位是：2 + 4 + 1（进位）= 7；因为此位是 5 进制的，所以我们得到 2 和 1 个进位。第 4 位是：6 + 1（进位）= 7；因为此位是 10 进制的，所以我们就得到 7。最后我们得到：6203 + 415 = 7201。</p><p><strong>输入描述</strong></p><p>输入首先在第一行给出一个 N 位的进制表（0 &lt; N ≤ 20），以回车结束。 随后两行，每行给出一个不超过 N 位的非负的 PAT 数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 30527</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 06203</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 415</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出两个 PAT 数之和。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 7201</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rev</span><span class="params">(<span class="keyword">char</span> a[], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = n &gt;&gt; <span class="number">1</span>, i;</span><br><span class="line">    n--;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] ^= a[n - i];</span><br><span class="line">        a[n - i] ^= a[i];</span><br><span class="line">        a[i] ^= a[n - i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">21</span>], b[<span class="number">22</span>], c[<span class="number">21</span>];</span><br><span class="line">    <span class="keyword">int</span> x, y, z, i;</span><br><span class="line">    gets(a);</span><br><span class="line">    x = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="built_in">memset</span>(b, <span class="number">48</span>, x + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(c, <span class="number">48</span>, x);</span><br><span class="line">    gets(b);</span><br><span class="line">    gets(c);</span><br><span class="line">    y = <span class="built_in">strlen</span>(b);</span><br><span class="line">    b[y] = <span class="number">48</span>;</span><br><span class="line">    z = <span class="built_in">strlen</span>(c);</span><br><span class="line">    c[z] = <span class="number">48</span>;</span><br><span class="line">    rev(a, x);</span><br><span class="line">    rev(b, y);</span><br><span class="line">    rev(c, z);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; x; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == <span class="number">48</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] = <span class="number">58</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        b[i] += c[i] - <span class="number">48</span>;</span><br><span class="line">        <span class="keyword">if</span>(b[i] &gt;= a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] -= <span class="number">48</span>;</span><br><span class="line">            b[i] -= <span class="number">48</span>;</span><br><span class="line">            b[i + <span class="number">1</span>] += b[i] / a[i];</span><br><span class="line">            b[i] = b[i] % a[i] + <span class="number">48</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = x; i &gt;= <span class="number">0</span> &amp;&amp; b[i] == <span class="number">48</span>; i--);</span><br><span class="line">    rev(b, i + <span class="number">1</span>);</span><br><span class="line">    b[i + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(b[<span class="number">0</span>] == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(b);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1075、链表元素分类"><a href="#1075、链表元素分类" class="headerlink" title="1075、链表元素分类"></a>1075、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880" target="_blank" rel="noopener">链表元素分类</a></h4><p>给定一个单链表，请编写程序将链表元素进行分类排列，使得所有负值元素都排在非负值元素的前面，而 [0, K] 区间内的元素都排在大于 K 的元素前面。但每一类内部元素的顺序是不能改变的。例如：给定链表为 18→7→-4→0→5→-6→10→11→-2，K 为 10，则输出应该为 -4→-6→-2→7→0→5→10→18→11。 </p><p><strong>输入描述</strong></p><p>每个输入包含一个测试用例。每个测试用例第 1 行给出：第 1 个结点的地址；结点总个数，即正整数N (≤105)；以及正整数K (≤103)。结点的地址是 5 位非负整数，NULL 地址用 −1 表示。</p><p>接下来有 N 行，每行格式为：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Address </span><span class="meta">Data</span> Next</span><br></pre></td></tr></table></figure><p>其中 <code>Address</code> 是结点地址；<code>Data</code> 是该结点保存的数据，为 [−105,105] 区间内的整数；<code>Next</code> 是下一结点的地址。题目保证给出的链表不为空。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">00100</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">&gt; <span class="number">23333</span> <span class="number">10</span> <span class="number">27777</span></span><br><span class="line">&gt; <span class="number">00000</span> <span class="number">0</span> <span class="number">99999</span></span><br><span class="line">&gt; <span class="number">00100</span> <span class="number">18</span> <span class="number">12309</span></span><br><span class="line">&gt; <span class="number">68237</span> <span class="number">-6</span> <span class="number">23333</span></span><br><span class="line">&gt; <span class="number">33218</span> <span class="number">-4</span> <span class="number">00000</span></span><br><span class="line">&gt; <span class="number">48652</span> <span class="number">-2</span> <span class="number">-1</span></span><br><span class="line">&gt; <span class="number">99999</span> <span class="number">5</span> <span class="number">68237</span></span><br><span class="line">&gt; <span class="number">27777</span> <span class="number">11</span> <span class="number">48652</span></span><br><span class="line">&gt; <span class="number">12309</span> <span class="number">7</span> <span class="number">33218</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个测试用例，按链表从头到尾的顺序输出重排后的结果链表，其上每个结点占一行，格式与输入相同。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">33218</span> <span class="number">-4</span> <span class="number">68237</span></span><br><span class="line">&gt; <span class="number">68237</span> <span class="number">-6</span> <span class="number">48652</span></span><br><span class="line">&gt; <span class="number">48652</span> <span class="number">-2</span> <span class="number">12309</span></span><br><span class="line">&gt; <span class="number">12309</span> <span class="number">7</span> <span class="number">00000</span></span><br><span class="line">&gt; <span class="number">00000</span> <span class="number">0</span> <span class="number">99999</span></span><br><span class="line">&gt; <span class="number">99999</span> <span class="number">5</span> <span class="number">23333</span></span><br><span class="line">&gt; <span class="number">23333</span> <span class="number">10</span> <span class="number">00100</span></span><br><span class="line">&gt; <span class="number">00100</span> <span class="number">18</span> <span class="number">27777</span></span><br><span class="line">&gt; <span class="number">27777</span> <span class="number">11</span> <span class="number">-1</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m, *value;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (value[a] &lt; <span class="number">0</span> &amp;&amp; value[b] &gt;= <span class="number">0</span>) || (value[a] &lt;= m &amp;&amp; value[b] &gt; m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> head, n, i, x, next[<span class="number">100000</span>], val[<span class="number">100000</span>];</span><br><span class="line">    value = val;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;head, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> que[n];</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, val + x, next + x);</span><br><span class="line">    &#125;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(head != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        que[i++] = head;</span><br><span class="line">        head = next[head];</span><br><span class="line">    &#125;</span><br><span class="line">    stable_sort(que, que + i, cmp);</span><br><span class="line">    n = i - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, que[i], val[que[i]], que[i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, que[i], val[que[i]]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1076、Wifi密码"><a href="#1076、Wifi密码" class="headerlink" title="1076、Wifi密码"></a>1076、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262622244864" target="_blank" rel="noopener">Wifi密码</a></h4><p>下面是微博上流传的一张照片：“各位亲爱的同学们，鉴于大家有时需要使用 wifi，又怕耽误亲们的学习，现将 wifi 密码设置为下列数学题答案：A-1；B-2；C-3；D-4；请同学们自己作答，每两日一换。谢谢合作！！~”—— 老师们为了促进学生学习也是拼了…… 本题就要求你写程序把一系列题目的答案按照卷子上给出的对应关系翻译成 wifi 的密码。这里简单假设每道选择题都有 4 个选项，有且只有 1 个正确答案。</p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（≤ 100），随后 N 行，每行按照 <code>编号-答案</code> 的格式给出一道题的 4 个选项，<code>T</code> 表示正确选项，<code>F</code> 表示错误选项。选项间用空格分隔。 </p><blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">8</span></span><br><span class="line">&gt; A-<span class="literal">T</span> B-<span class="literal">F</span> C-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">&gt; C-<span class="literal">T</span> B-<span class="literal">F</span> A-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">&gt; A-<span class="literal">F</span> D-<span class="literal">F</span> C-<span class="literal">F</span> B-<span class="literal">T</span></span><br><span class="line">&gt; B-<span class="literal">T</span> A-<span class="literal">F</span> C-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">&gt; B-<span class="literal">F</span> D-<span class="literal">T</span> A-<span class="literal">F</span> C-<span class="literal">F</span></span><br><span class="line">&gt; A-<span class="literal">T</span> C-<span class="literal">F</span> B-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">&gt; D-<span class="literal">T</span> B-<span class="literal">F</span> C-<span class="literal">F</span> A-<span class="literal">F</span></span><br><span class="line">&gt; C-<span class="literal">T</span> A-<span class="literal">F</span> B-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出 wifi 密码。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 13224143</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">105</span>];</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n); </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch1,an1,ch2,an2,ch3,an3,ch4,an4;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"\n%c-%c %c-%c %c-%c %c-%c"</span>,&amp;ch1,&amp;an1,&amp;ch2,&amp;an2,&amp;ch3,&amp;an3,&amp;ch4,&amp;an4);</span><br><span class="line"><span class="keyword">if</span> (an1 == <span class="string">'T'</span>)</span><br><span class="line">ans[i] = ch1-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (an2 == <span class="string">'T'</span>)</span><br><span class="line">ans[i] = ch2-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (an3 == <span class="string">'T'</span>)</span><br><span class="line">ans[i] = ch3-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (an4 == <span class="string">'T'</span>)</span><br><span class="line">ans[i] = ch4-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d"</span>,ans[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1077、互评成绩计算"><a href="#1077、互评成绩计算" class="headerlink" title="1077、互评成绩计算"></a>1077、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262303477760" target="_blank" rel="noopener">互评成绩计算</a></h4><p>在浙大的计算机专业课中，经常有互评分组报告这个环节。一个组上台介绍自己的工作，其他组在台下为其表现评分。最后这个组的互评成绩是这样计算的：所有其他组的评分中，去掉一个最高分和一个最低分，剩下的分数取平均分记为 G1；老师给这个组的评分记为 G2。该组得分为 (G1+G2)/2，最后结果四舍五入后保留整数分。本题就要求你写个程序帮助老师计算每个组的互评成绩。 </p><p><strong>输入描述</strong></p><p>输入第一行给出两个正整数 N（&gt; 3）和 M，分别是分组数和满分，均不超过 100。随后 N 行，每行给出该组得到的 N 个分数（均保证为整型范围内的整数），其中第 1 个是老师给出的评分，后面 N−1 个是其他组给的评分。合法的输入应该是 [0,M] 区间内的整数，若不在合法区间内，则该分数须被忽略。题目保证老师的评分都是合法的，并且每个组至少会有 3 个来自同学的合法评分。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span> <span class="number">50</span></span><br><span class="line">&gt; <span class="number">42</span> <span class="number">49</span> <span class="number">49</span> <span class="number">35</span> <span class="number">38</span> <span class="number">41</span></span><br><span class="line">&gt; <span class="number">36</span> <span class="number">51</span> <span class="number">50</span> <span class="number">28</span> <span class="number">-1</span> <span class="number">30</span></span><br><span class="line">&gt; <span class="number">40</span> <span class="number">36</span> <span class="number">41</span> <span class="number">33</span> <span class="number">47</span> <span class="number">49</span></span><br><span class="line">&gt; <span class="number">30</span> <span class="number">250</span> <span class="number">-25</span> <span class="number">27</span> <span class="number">45</span> <span class="number">31</span></span><br><span class="line">&gt; <span class="number">48</span> <span class="number">0</span> <span class="number">0</span> <span class="number">50</span> <span class="number">50</span> <span class="number">1234</span></span><br><span class="line">&gt; <span class="number">43</span> <span class="number">41</span> <span class="number">36</span> <span class="number">29</span> <span class="number">42</span> <span class="number">29</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>为每个组输出其最终得分。每个得分占一行。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 42</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 33</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 41</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 31</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 37</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 39</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">double</span> grade_lao;</span><br><span class="line"><span class="keyword">double</span> max = <span class="number">0</span>,min = m+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf"</span>,&amp;grade_lao);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n<span class="number">-1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">double</span> temp;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%lf"</span>,&amp;temp);</span><br><span class="line"><span class="keyword">if</span> (temp &gt;= <span class="number">0</span> &amp;&amp; temp &lt;= m) &#123;</span><br><span class="line">count++;</span><br><span class="line">sum += temp;</span><br><span class="line"><span class="keyword">if</span> (max &lt; temp)</span><br><span class="line">max = temp;</span><br><span class="line"><span class="keyword">if</span> (min &gt; temp)</span><br><span class="line">min = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ans = (grade_lao + (<span class="keyword">double</span>)(sum - max - min)/ (count - <span class="number">2</span>)) / <span class="number">2</span>;</span><br><span class="line">ans = (<span class="keyword">int</span>)(ans + <span class="number">0.5</span>) &gt; (<span class="keyword">int</span>)ans ? (<span class="keyword">int</span>) ans + <span class="number">1</span> : (<span class="keyword">int</span> ) ans;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%d\n"</span>,(<span class="keyword">int</span>)ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1078、字符串压缩与解压"><a href="#1078、字符串压缩与解压" class="headerlink" title="1078、字符串压缩与解压"></a>1078、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262018265088" target="_blank" rel="noopener">字符串压缩与解压</a></h4><p>文本压缩有很多种方法，这里我们只考虑最简单的一种：把由相同字符组成的一个连续的片段用这个字符和片段中含有这个字符的个数来表示。例如 <code>ccccc</code> 就用 <code>5c</code> 来表示。如果字符没有重复，就原样输出。例如 <code>aba</code> 压缩后仍然是 <code>aba</code>。</p><p>解压方法就是反过来，把形如 <code>5c</code> 这样的表示恢复为 <code>ccccc</code>。</p><p>本题需要你根据压缩或解压的要求，对给定字符串进行处理。这里我们简单地假设原始字符串是完全由英文字母和空格组成的非空字符串。</p><p><strong>输入描述</strong></p><p>输入第一行给出一个字符，如果是 <code>C</code> 就表示下面的字符串需要被压缩；如果是 <code>D</code> 就表示下面的字符串需要被解压。第二行给出需要被压缩或解压的不超过 1000 个字符的字符串，以回车结尾。题目保证字符重复个数在整型范围内，且输出文件不超过 1MB。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> C</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> TTTTThhiiiis isssss a   tesssst CAaaa as</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>根据要求压缩或解压字符串，并在一行中输出结果。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 5T2h4is i5s a3 te4st CA3a as</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span> ; </span><br><span class="line"><span class="built_in">string</span> all ; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">D</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; all.length() ; i++ ) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span> ; </span><br><span class="line">        <span class="keyword">while</span> ( all[i] &gt;= <span class="string">'0'</span> &amp;&amp; all[i] &lt;= <span class="string">'9'</span> ) </span><br><span class="line">            sum = sum*<span class="number">10</span> + all[i++]-<span class="string">'0'</span> ; </span><br><span class="line">        <span class="keyword">for</span> ( <span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; sum ; j++ ) </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; all[i] ; </span><br><span class="line">        <span class="keyword">if</span> ( sum == <span class="number">0</span> ) </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; all[i] ; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">C</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span> ; j &lt; all.length() ; ) &#123;</span><br><span class="line">        <span class="keyword">while</span> ( all[i] == all[j] ) </span><br><span class="line">            j++ ; </span><br><span class="line">        <span class="keyword">if</span> ( j - i &gt; <span class="number">1</span> ) <span class="built_in">cout</span> &lt;&lt; j - i ; </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; all[i] ; </span><br><span class="line">        i = j ; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> f ; </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; f ; </span><br><span class="line">    getchar() ; </span><br><span class="line">    getline(<span class="built_in">cin</span>,all) ; </span><br><span class="line">    <span class="keyword">if</span> ( f == <span class="string">'D'</span> ) </span><br><span class="line">        D() ; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        C() ; </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> ; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1079、延迟的回文数"><a href="#1079、延迟的回文数" class="headerlink" title="1079、延迟的回文数"></a>1079、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936" target="_blank" rel="noopener">延迟的回文数</a></h4><p>给定一个 k+1 位的正整数 N，写成 ak⋯a1a0 的形式，其中对所有 i 有 0≤ai<10 且 ak>0。N 被称为一个<strong>回文数</strong>，当且仅当对所有 i 有 ai=ak−i。零也被定义为一个回文数。</10></p><p>非回文数也可以通过一系列操作变出回文数。首先将该数字逆转，再将逆转数与该数相加，如果和还不是一个回文数，就重复这个逆转再相加的操作，直到一个回文数出现。如果一个非回文数可以变出回文数，就称这个数为<strong>延迟的回文数</strong>。（定义翻译自 <a href="https://en.wikipedia.org/wiki/Palindromic_number" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Palindromic_number</a> ）</p><p>给定任意一个正整数，本题要求你找到其变出的那个回文数。</p><p><strong>输入描述</strong></p><p>输入在一行中给出一个不超过1000位的正整数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 97152</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对给定的整数，一行一行输出其变出回文数的过程。每行格式如下</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A + <span class="keyword">B </span>= C</span><br></pre></td></tr></table></figure><p>其中 <code>A</code> 是原始的数字，<code>B</code> 是 <code>A</code> 的逆转数，<code>C</code> 是它们的和。<code>A</code> 从输入的整数开始。重复操作直到 <code>C</code> 在 10 步以内变成回文数，这时在一行中输出 <code>C is a palindromic number.</code>；或者如果 10 步都没能得到回文数，最后就在一行中输出 <code>Not found in 10 iterations.</code>。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">97152</span> + <span class="number">25179</span> = <span class="number">122331</span></span><br><span class="line">&gt; <span class="number">122331</span> + <span class="number">133221</span> = <span class="number">255552</span></span><br><span class="line">&gt; <span class="number">255552</span> is a palindromic number.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span> ;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> a ; </span><br><span class="line">    <span class="keyword">int</span> i, j ; </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a ; </span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i++ ) &#123;</span><br><span class="line">        <span class="keyword">int</span> last = <span class="number">0</span>, len = a.length(), flag = <span class="number">0</span> ; </span><br><span class="line">        <span class="built_in">string</span> b = <span class="string">""</span> ; </span><br><span class="line">        <span class="keyword">for</span> ( j = <span class="number">0</span> ; j &lt; len ; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ( a[j] != a[len<span class="number">-1</span>-j] ) </span><br><span class="line">                flag = <span class="number">1</span> ; </span><br><span class="line">            <span class="keyword">int</span> tmp = a[j] + a[len<span class="number">-1</span>-j] - <span class="number">2</span>*<span class="string">'0'</span> ; </span><br><span class="line">            b += ((tmp + last )% <span class="number">10</span> + <span class="string">'0'</span>) ;  </span><br><span class="line">            last = (tmp + last ) / <span class="number">10</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( flag == <span class="number">0</span> ) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">" is a palindromic number."</span> &lt;&lt; <span class="built_in">endl</span> ; </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( last != <span class="number">0</span> )  </span><br><span class="line">            b += (last + <span class="string">'0'</span>) ; </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">" + "</span> ; </span><br><span class="line">        reverse(a.begin(),a.end()) ; </span><br><span class="line">        reverse(b.begin(),b.end()) ; </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">" = "</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span> ; </span><br><span class="line">        a = b ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Not found in 10 iterations."</span> &lt;&lt; <span class="built_in">endl</span> ; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1080、MOOC期终成绩"><a href="#1080、MOOC期终成绩" class="headerlink" title="1080、MOOC期终成绩"></a>1080、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088" target="_blank" rel="noopener">MOOC期终成绩</a></h4><p>对于在中国大学MOOC（<a href="http://www.icourse163.org/" target="_blank" rel="noopener">http://www.icourse163.org/</a> ）学习“数据结构”课程的学生，想要获得一张合格证书，必须首先获得不少于200分的在线编程作业分，然后总评获得不少于60分（满分100）。总评成绩的计算公式为 G=(Gmid−term×40%+Gfinal×60%)，如果 Gmid−term&gt;Gfinal；否则总评 G 就是 Gfinal。这里 Gmid−term 和 Gfinal 分别为学生的期中和期末成绩。</p><p>现在的问题是，每次考试都产生一张独立的成绩单。本题就请你编写程序，把不同的成绩单合为一张。</p><p><strong>输入描述</strong></p><p>输入在第一行给出3个整数，分别是 P（做了在线编程作业的学生数）、M（参加了期中考试的学生数）、N（参加了期末考试的学生数）。每个数都不超过10000。</p><p>接下来有三块输入。第一块包含 P 个在线编程成绩 Gp；第二块包含 M 个期中考试成绩 Gmid−term；第三块包含 N 个期末考试成绩 Gfinal。每个成绩占一行，格式为：<code>学生学号 分数</code>。其中<code>学生学号</code>为不超过20个字符的英文字母和数字；<code>分数</code>是非负整数（编程总分最高为900分，期中和期末的最高分为100分）。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span> <span class="number">6</span> <span class="number">7</span></span><br><span class="line">&gt; <span class="number">01234</span> <span class="number">880</span></span><br><span class="line">&gt; a1903 <span class="number">199</span></span><br><span class="line">&gt; ydjh2 <span class="number">200</span></span><br><span class="line">&gt; wehu8 <span class="number">300</span></span><br><span class="line">&gt; dx86w <span class="number">220</span></span><br><span class="line">&gt; missing <span class="number">400</span></span><br><span class="line">&gt; ydhfu77 <span class="number">99</span></span><br><span class="line">&gt; wehu8 <span class="number">55</span></span><br><span class="line">&gt; ydjh2 <span class="number">98</span></span><br><span class="line">&gt; dx86w <span class="number">88</span></span><br><span class="line">&gt; a1903 <span class="number">86</span></span><br><span class="line">&gt; <span class="number">01234</span> <span class="number">39</span></span><br><span class="line">&gt; ydhfu77 <span class="number">88</span></span><br><span class="line">&gt; a1903 <span class="number">66</span></span><br><span class="line">&gt; <span class="number">01234</span> <span class="number">58</span></span><br><span class="line">&gt; wehu8 <span class="number">84</span></span><br><span class="line">&gt; ydjh2 <span class="number">82</span></span><br><span class="line">&gt; missing <span class="number">99</span></span><br><span class="line">&gt; dx86w <span class="number">81</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>打印出获得合格证书的学生名单。每个学生占一行，格式为：</p><p><code>学生学号</code> Gp Gmid−term Gfinal G</p><p>如果有的成绩不存在（例如某人没参加期中考试），则在相应的位置输出“−1”。输出顺序为按照总评分数（四舍五入精确到整数）递减。若有并列，则按学号递增。题目保证学号没有重复，且至少存在1个合格的学生。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; missing <span class="number">400</span> <span class="number">-1</span> <span class="number">99</span> <span class="number">99</span></span><br><span class="line">&gt; ydjh2 <span class="number">200</span> <span class="number">98</span> <span class="number">82</span> <span class="number">88</span></span><br><span class="line">&gt; dx86w <span class="number">220</span> <span class="number">88</span> <span class="number">81</span> <span class="number">84</span></span><br><span class="line">&gt; wehu8 <span class="number">300</span> <span class="number">55</span> <span class="number">84</span> <span class="number">84</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span> ; </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">st</span> &#123;</span></span><br><span class="line">    <span class="built_in">string</span> name ;</span><br><span class="line">    <span class="keyword">int</span> gb, gz, gm, g ; </span><br><span class="line">&#125; ; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(st a, st b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( a.g != b.g ) </span><br><span class="line">        <span class="keyword">return</span> a.g &gt; b.g ; </span><br><span class="line">    <span class="keyword">return</span> a.name &lt; b.name ; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b, z, m, i ,j, tmp ; </span><br><span class="line">    <span class="built_in">string</span> n ; </span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; help ; </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; b &gt;&gt; z &gt;&gt; m ; </span><br><span class="line">    <span class="built_in">vector</span>&lt;st&gt; sts ; </span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; i &lt; b ; i++ ) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; tmp ; </span><br><span class="line">        <span class="keyword">if</span> ( tmp &lt; <span class="number">200</span> || tmp &gt; <span class="number">900</span> ) </span><br><span class="line">            <span class="keyword">continue</span> ; </span><br><span class="line">        st one ; </span><br><span class="line">        one.name = n ; </span><br><span class="line">        one.gb = tmp ; </span><br><span class="line">        one.gz = one.gm = <span class="number">-1</span> ; </span><br><span class="line">        sts.push_back(one) ; </span><br><span class="line">        help[n] = sts.size()<span class="number">-1</span> ; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; i &lt; z ; i++ ) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; tmp ; </span><br><span class="line">        <span class="keyword">if</span> ( help.count(n) == <span class="number">0</span> ) </span><br><span class="line">            <span class="keyword">continue</span> ; </span><br><span class="line">        <span class="keyword">int</span> index = help[n] ; </span><br><span class="line">        sts[index].gz = tmp ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; i &lt; m ; i++ ) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; tmp ; </span><br><span class="line">        <span class="keyword">if</span> ( help.count(n) == <span class="number">0</span> ) </span><br><span class="line">            <span class="keyword">continue</span> ; </span><br><span class="line">        <span class="keyword">int</span> index = help[n] ; </span><br><span class="line">        sts[index].gm = tmp ; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">int</span> len = sts.size() ; </span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; i &lt; len ; i++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( sts[i].gm &gt;= sts[i].gz ) </span><br><span class="line">            sts[i].g = sts[i].gm ; </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">float</span> k = sts[i].gz * <span class="number">0.4</span> + sts[i].gm * <span class="number">0.6</span> + <span class="number">0.5</span> ; </span><br><span class="line">            sts[i].g = (<span class="keyword">int</span>)k ; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    sort(sts.begin(),sts.end(),cmp) ; </span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span> ; sts[i].g &gt;= <span class="number">60</span> ; i++ ) </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sts[i].name &lt;&lt; <span class="string">" "</span> &lt;&lt; sts[i].gb &lt;&lt; <span class="string">" "</span> &lt;&lt; sts[i].gz &lt;&lt; <span class="string">" "</span> &lt;&lt; sts[i].gm &lt;&lt; <span class="string">" "</span> &lt;&lt; sts[i].g &lt;&lt; <span class="built_in">endl</span> ; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1081、检查密码"><a href="#1081、检查密码" class="headerlink" title="1081、检查密码"></a>1081、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261217153024" target="_blank" rel="noopener">检查密码</a></h4><p>本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。该网站要求用户设置的密码必须由不少于6个字符组成，并且只能有英文字母、数字和小数点 <code>.</code>，还必须既有字母也有数字。 </p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（≤ 100），随后 N 行，每行给出一个用户设置的密码，为不超过 80 个字符的非空字符串，以回车结束。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 5</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 123s</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> zheshi.wodepw</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 1234.5678</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> WanMei23333</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> pass*word.6</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>对每个用户的密码，在一行中输出系统反馈信息，分以下5种：</p><ul><li>如果密码合法，输出<code>Your password is wan mei.</code>；</li><li>如果密码太短，不论合法与否，都输出<code>Your password is tai duan le.</code>；</li><li>如果密码长度合法，但存在不合法字符，则输出<code>Your password is tai luan le.</code>；</li><li>如果密码长度合法，但只有字母没有数字，则输出<code>Your password needs shu zi.</code>；</li><li>如果密码长度合法，但只有数字没有字母，则输出<code>Your password needs zi mu.</code>。</li></ul><blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; Your password is tai duan le.</span><br><span class="line">&gt; Your password needs shu zi.</span><br><span class="line">&gt; Your password needs zi mu.</span><br><span class="line">&gt; Your password is<span class="built_in"> wan </span>mei.</span><br><span class="line">&gt; Your password is tai luan le.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d\n"</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">80</span>];</span><br><span class="line"><span class="keyword">int</span> xx = <span class="number">0</span>;</span><br><span class="line">gets(str);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(str) &lt; <span class="number">6</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"Your password is tai duan le.\n"</span>);</span><br><span class="line">xx = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag_zimu = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag_shuzi = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] &gt;= <span class="string">'0'</span> &amp;&amp; str[i] &lt;= <span class="string">'9'</span>) flag_shuzi = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((str[i] &gt;= <span class="string">'a'</span> &amp;&amp; str[i] &lt;= <span class="string">'z'</span>) || (str[i] &gt;= <span class="string">'A'</span> &amp;&amp; str[i] &lt;= <span class="string">'Z'</span>)) flag_zimu = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">'.'</span>);</span><br><span class="line"><span class="keyword">else</span> flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) <span class="built_in">printf</span> (<span class="string">"Your password is tai luan le.\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!flag_zimu) <span class="built_in">printf</span> (<span class="string">"Your password needs zi mu.\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!flag_shuzi) <span class="built_in">printf</span> (<span class="string">"Your password needs shu zi.\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Your password is wan mei.\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//if (!xx&amp;&amp;!flag&amp;&amp;flag_zimu&amp;&amp;flag_shuzi) printf("Your password is wan mei.\n");</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1082、射击比赛"><a href="#1082、射击比赛" class="headerlink" title="1082、射击比赛"></a>1082、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260990660608" target="_blank" rel="noopener">射击比赛</a></h4><p>本题目给出的射击比赛的规则非常简单，谁打的弹洞距离靶心最近，谁就是冠军；谁差得最远，谁就是菜鸟。本题给出一系列弹洞的平面坐标(x,y)，请你编写程序找出冠军和菜鸟。我们假设靶心在原点(0,0)。 </p><p><strong>输入描述</strong></p><p>输入在第一行中给出一个正整数 N（≤ 10 000）。随后 N 行，每行按下列格式给出：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ID x y</span></span><br></pre></td></tr></table></figure><p>其中 <code>ID</code> 是运动员的编号（由 4 位数字组成）；<code>x</code> 和 <code>y</code> 是其打出的弹洞的平面坐标(<code>x</code>,<code>y</code>)，均为整数，且 0 ≤ |<code>x</code>|, |<code>y</code>| ≤ 100。题目保证每个运动员的编号不重复，且每人只打 1 枪。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">3</span></span><br><span class="line">&gt; <span class="number">0001</span> <span class="number">5</span> <span class="number">7</span></span><br><span class="line">&gt; <span class="number">1020</span> <span class="number">-1</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">0233</span> <span class="number">0</span> <span class="number">-1</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>输出冠军和菜鸟的编号，中间空 1 格。题目保证他们是唯一的。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">0233</span> <span class="number">0001</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> id,x,y;</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> max_id;</span><br><span class="line"><span class="keyword">int</span> min = <span class="number">999999</span>;</span><br><span class="line"><span class="keyword">int</span> min_id;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span>(n--) &#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>,&amp;id,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">int</span> temp = x * x + y * y;</span><br><span class="line"><span class="keyword">if</span> (temp &gt; max) &#123;max_id = id;max = temp;&#125;;</span><br><span class="line"><span class="keyword">if</span> (temp &lt; min) &#123;min_id = id;min = temp;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">"%04d %04d"</span>,min_id,max_id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1083、是否存在相等的差"><a href="#1083、是否存在相等的差" class="headerlink" title="1083、是否存在相等的差"></a>1083、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260780945408" target="_blank" rel="noopener">是否存在相等的差</a></h4><p>给定 N 张卡片，正面分别写上 1、2、……、N，然后全部翻面，洗牌，在背面分别写上 1、2、……、N。将每张牌的正反两面数字相减（大减小），得到 N 个非负差值，其中是否存在相等的差？ </p><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（2 ≤ N ≤ 10 000），随后一行给出 1 到 N 的一个洗牌后的排列，第 i 个数表示正面写了 i 的那张卡片背面的数字。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">8</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">6</span> <span class="number">2</span> <span class="number">1</span> <span class="number">4</span> <span class="number">7</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>按照“差值 重复次数”的格式从大到小输出重复的差值及其重复的次数，每行输出一个结果。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">2</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> maxn = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">10000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">temp = (num &gt; i ? num-i:i-num);</span><br><span class="line">maxn = (temp &gt; maxn ? temp : maxn);</span><br><span class="line">ans[temp]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = maxn; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (ans[i] &gt;= <span class="number">2</span>) <span class="built_in">printf</span> (<span class="string">"%d %d\n"</span>,i,ans[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1084、外观数列"><a href="#1084、外观数列" class="headerlink" title="1084、外观数列"></a>1084、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120" target="_blank" rel="noopener">外观数列</a></h4><p>外观数列是指具有以下特点的整数序列：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">d</span></span>, d1, d111, d113, d11231, d112213111, ...</span><br></pre></td></tr></table></figure><p>它从不等于 1 的数字 <code>d</code> 开始，序列的第 n+1 项是对第 n 项的描述。比如第 2 项表示第 1 项有 1 个 <code>d</code>，所以就是 <code>d1</code>；第 2 项是 1 个 <code>d</code>（对应 <code>d1</code>）和 1 个 1（对应 11），所以第 3 项就是 <code>d111</code>。又比如第 4 项是 <code>d113</code>，其描述就是 1 个 <code>d</code>，2 个 1，1 个 3，所以下一项就是 <code>d11231</code>。当然这个定义对 <code>d</code> = 1 也成立。本题要求你推算任意给定数字 <code>d</code> 的外观数列的第 N 项。</p><p><strong>输入描述</strong></p><p>输入第一行给出 [0,9] 范围内的一个整数 <code>d</code>、以及一个正整数 N（≤ 40），用空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1</span> <span class="number">8</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中给出数字 <code>d</code> 的外观数列的第 N 项。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 1123123111</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; n;  </span><br><span class="line">    <span class="keyword">while</span>(--n)&#123;  </span><br><span class="line">        <span class="built_in">string</span> ans;  </span><br><span class="line">        <span class="keyword">char</span> c = a[<span class="number">0</span>];  </span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; a.length();i++)&#123;  </span><br><span class="line">            <span class="keyword">if</span>(a[i] == c)   cnt++;  </span><br><span class="line">            <span class="keyword">else</span>&#123;  </span><br><span class="line">                ans+=c;  </span><br><span class="line">                ans+=cnt+<span class="string">'0'</span>;  </span><br><span class="line">                c = a[i];  </span><br><span class="line">                cnt = <span class="number">1</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span>(cnt &gt; <span class="number">0</span>)&#123;  </span><br><span class="line">            ans+=c;  </span><br><span class="line">            ans+=cnt+<span class="string">'0'</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        a = ans;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a &lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1085、PAT单位排行"><a href="#1085、PAT单位排行" class="headerlink" title="1085、PAT单位排行"></a>1085、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400" target="_blank" rel="noopener">PAT单位排行</a></h4><p><strong>输入描述</strong></p><p>输入第一行给出一个正整数 N（≤105），即考生人数。随后 N 行，每行按下列格式给出一个考生的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">准考证号 得分 学校</span><br></pre></td></tr></table></figure><p>其中<code>准考证号</code>是由 6 个字符组成的字符串，其首字母表示考试的级别：<code>B</code>代表乙级，<code>A</code>代表甲级，<code>T</code>代表顶级；<code>得分</code>是 [0, 100] 区间内的整数；<code>学校</code>是由不超过 6 个英文字母组成的单位码（大小写无关）。注意：题目保证每个考生的准考证号是不同的。</p><blockquote><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span></span><br><span class="line">&gt; <span class="keyword">A</span><span class="number">57908 85</span> Au</span><br><span class="line">&gt; B<span class="number">57908 54</span> LanX</span><br><span class="line">&gt; <span class="keyword">A</span><span class="number">37487 60</span> au</span><br><span class="line">&gt; T<span class="number">28374 67</span> CMU</span><br><span class="line">&gt; T<span class="number">32486 24</span> hypu</span><br><span class="line">&gt; <span class="keyword">A</span><span class="number">66734 92</span> cmu</span><br><span class="line">&gt; B<span class="number">76378 71</span> AU</span><br><span class="line">&gt; <span class="keyword">A</span><span class="number">47780 45</span> lanx</span><br><span class="line">&gt; <span class="keyword">A</span><span class="number">72809 100</span> pku</span><br><span class="line">&gt; <span class="keyword">A</span><span class="number">03274 45</span> hypu</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>首先在一行中输出单位个数。随后按以下格式非降序输出单位的排行榜：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">排名 学校 加权总分 考生人数</span><br></pre></td></tr></table></figure><p>其中<code>排名</code>是该单位的排名（从 1 开始）；<code>学校</code>是全部按小写字母输出的单位码；<code>加权总分</code>定义为<code>乙级总分/1.5 + 甲级总分 + 顶级总分*1.5</code>的<strong>整数部分</strong>；<code>考生人数</code>是该属于单位的考生的总人数。</p><p>学校首先按加权总分排行。如有并列，则应对应相同的排名，并按考生人数升序输出。如果仍然并列，则按单位码的字典序输出。</p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span></span><br><span class="line">&gt; <span class="number">1</span> cmu <span class="number">192</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">1</span> au <span class="number">192</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">3</span> pku <span class="number">100</span> <span class="number">1</span></span><br><span class="line">&gt; <span class="number">4</span> hypu <span class="number">81</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">4</span> lanx <span class="number">81</span> <span class="number">2</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;  </span></span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> n)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a,<span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a,<span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">    <span class="keyword">char</span> school[<span class="number">10</span>];  </span><br><span class="line">    <span class="keyword">double</span> score;  </span><br><span class="line">    <span class="keyword">int</span> stu;  </span><br><span class="line">&#125;student[<span class="number">100000</span>];  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n,a;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%*c"</span>,&amp;n);  </span><br><span class="line">    input(n);  </span><br><span class="line">    qsort(&amp;student[<span class="number">0</span>],n,<span class="keyword">sizeof</span>(struct student),cmp);  </span><br><span class="line">    a=add(n);  </span><br><span class="line">    qsort(&amp;student[<span class="number">0</span>],n,<span class="keyword">sizeof</span>(struct student),cmp1);  </span><br><span class="line">    output(a);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i,j,score;  </span><br><span class="line">    <span class="keyword">char</span> c;  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;n;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c%*c%*c%*c%*c%*c%*c%d%*c"</span>,&amp;c,&amp;score);  </span><br><span class="line">        <span class="keyword">if</span> (c==<span class="string">'B'</span>) student[i].score=score/<span class="number">1.5</span>;  </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c==<span class="string">'T'</span>) student[i].score=score*<span class="number">1.5</span>;  </span><br><span class="line">        <span class="keyword">else</span> student[i].score=score*<span class="number">1.0</span>;  </span><br><span class="line">        j=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">do</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;student[i].school[j]);  </span><br><span class="line">            <span class="keyword">if</span> (student[i].school[j]&gt;=<span class="string">'A'</span> &amp;&amp; student[i].school[j]&lt;=<span class="string">'Z'</span>) student[i].school[j]=student[i].school[j]-<span class="string">'A'</span>+<span class="string">'a'</span>;  </span><br><span class="line">        &#125;<span class="keyword">while</span>(student[i].school[j++]!=<span class="string">'\n'</span>);  </span><br><span class="line">        student[i].school[--j]=<span class="string">'\0'</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i,j,a;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;n;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        j=i;a=(<span class="keyword">int</span>)student[i].score;  </span><br><span class="line">        <span class="keyword">while</span>(j&lt;n &amp;&amp; (<span class="keyword">int</span>)student[j].score==a)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %s %d %d\n"</span>,i+<span class="number">1</span>,student[j].school,(<span class="keyword">int</span>)student[j].score,student[j].stu);  </span><br><span class="line">            j++;  </span><br><span class="line">        &#125;  </span><br><span class="line">        i=j<span class="number">-1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> n)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i,j,s=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;n;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        j=i+<span class="number">1</span>;student[i].stu=<span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">strcmp</span>(student[i].school,student[j].school)==<span class="number">0</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            student[i].score+=student[j].score;  </span><br><span class="line">            student[j].score=<span class="number">-1</span>;s++;                <span class="comment">//防止出现某人分数比别的整个学校总分还高的情况  </span></span><br><span class="line">            student[i].stu++;j++;  </span><br><span class="line">        &#125;  </span><br><span class="line">        student[i].score=(<span class="keyword">int</span>)student[i].score;  </span><br><span class="line">        i=j<span class="number">-1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> n-s;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a,<span class="keyword">const</span> <span class="keyword">void</span> *b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">aa</span>=(<span class="title">struct</span> <span class="title">student</span> *)<span class="title">a</span>;</span>  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">bb</span>=(<span class="title">struct</span> <span class="title">student</span> *)<span class="title">b</span>;</span>  </span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">strcmp</span>(aa-&gt;school,bb-&gt;school));  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a,<span class="keyword">const</span> <span class="keyword">void</span> *b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">aa</span>=(<span class="title">struct</span> <span class="title">student</span> *)<span class="title">a</span>;</span>  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">bb</span>=(<span class="title">struct</span> <span class="title">student</span> *)<span class="title">b</span>;</span>  </span><br><span class="line">    <span class="keyword">if</span> (aa-&gt;score != bb-&gt;score)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">return</span> (aa-&gt;score &lt; bb-&gt;score ? <span class="number">1</span>:<span class="number">-1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (aa-&gt;stu != bb-&gt;stu )  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> (aa-&gt;stu &gt; bb-&gt;stu ? <span class="number">1</span>:<span class="number">-1</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">strcmp</span>(aa-&gt;school,bb-&gt;school));  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1086、就不告诉你"><a href="#1086、就不告诉你" class="headerlink" title="1086、就不告诉你"></a>1086、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429065476579328" target="_blank" rel="noopener">就不告诉你</a></h4><p>做作业的时候，邻座的小盆友问你：“五乘以七等于多少？”你应该不失礼貌地围笑着告诉他：“五十三。”本题就要求你，对任何一对给定的正整数，倒着输出它们的乘积。 </p><p><strong>输入描述</strong></p><p>输入在第一行给出两个不超过 1000 的正整数 A 和 B，其间以空格分隔。 </p><blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">5</span> <span class="number">7</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中倒着输出 A 和 B 的乘积。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 53</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> b;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ans = a*b;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (ans != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (ans % <span class="number">10</span> != <span class="number">0</span> || flag )&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans % <span class="number">10</span>;</span><br><span class="line">flag++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ans = (<span class="keyword">int</span>)ans / <span class="number">10</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1087、有多少不同的值"><a href="#1087、有多少不同的值" class="headerlink" title="1087、有多少不同的值"></a>1087、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429191091781632" target="_blank" rel="noopener">有多少不同的值</a></h4><p>当自然数 n 依次取 1、2、3、……、N 时，算式 ⌊n/2⌋+⌊n/3⌋+⌊n/5⌋ 有多少个不同的值？（注：⌊x⌋ 为取整函数，表示不超过 x 的最大自然数，即 x 的整数部分。） </p><p><strong>输入描述</strong></p><p>输入给出一个正整数 N（2≤N≤10^4^）。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 2017</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>输出描述</strong></p><p>在一行中输出题面中算式取到的不同值的个数。 </p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 1480</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">10005</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">5</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; arr[n];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">6</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> ((i%<span class="number">2</span> == <span class="number">0</span>)||(i%<span class="number">3</span> == <span class="number">0</span>)|| (i%<span class="number">5</span> == <span class="number">0</span>))</span><br><span class="line">arr[i] = arr[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">arr[i] = arr[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; arr[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1088、三人行"><a href="#1088、三人行" class="headerlink" title="1088、三人行"></a>1088、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429286185074688" target="_blank" rel="noopener">三人行</a></h4><p>子曰：“三人行，必有我师焉。择其善者而从之，其不善者而改之。”</p><p>本题给定甲、乙、丙三个人的能力值关系为：甲的能力值确定是 2 位正整数；把甲的能力值的 2 个数字调换位置就是乙的能力值；甲乙两人能力差是丙的能力值的 X 倍；乙的能力值是丙的 Y 倍。请你指出谁比你强应“从之”，谁比你弱应“改之”。</p><p><strong>输入描述</strong></p><p>输入在一行中给出三个数，依次为：M（你自己的能力值）、X 和 Y。三个数字均为不超过 1000 的正整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">48 3 7</span><br></pre></td></tr></table></figure><p><strong>输出描述</strong></p><p>在一行中首先输出甲的能力值，随后依次输出甲、乙、丙三人与你的关系：如果其比你强，输出 <code>Cong</code>；平等则输出 <code>Ping</code>；比你弱则输出 <code>Gai</code>。其间以 1 个空格分隔，行首尾不得有多余空格。</p><p>注意：如果解不唯一，则以甲的最大解为准进行判断；如果解不存在，则输出 <code>No Solution</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">48 Ping Cong Gai</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">com</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (a &gt; b) <span class="keyword">return</span> <span class="string">"Cong"</span>;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; b) <span class="keyword">return</span> <span class="string">"Gai"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="string">"Ping"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">solution</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span> || y == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"No Solution"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">99</span>; i &gt;= <span class="number">10</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = (i%<span class="number">10</span>)*<span class="number">10</span> + i/<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">double</span> k = (<span class="keyword">double</span>)Math.abs(i - j) / x;</span><br><span class="line">            <span class="keyword">if</span> ( k == j * <span class="number">1.0</span>/ y) &#123;</span><br><span class="line">                <span class="keyword">return</span> i + <span class="string">" "</span> + com(i,m) + <span class="string">" "</span> + com(j,m) + <span class="string">" "</span> + com(k,m);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Solution"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> m = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span> x = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span> y = input.nextInt();</span><br><span class="line">        System.out.println(Main.solution(m,x,y));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1089、狼人杀-简单版"><a href="#1089、狼人杀-简单版" class="headerlink" title="1089、狼人杀-简单版"></a>1089、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632" target="_blank" rel="noopener">狼人杀-简单版</a></h4><p>以下文字摘自《灵机一动·好玩的数学》：“狼人杀”游戏分为狼人、好人两大阵营。在一局“狼人杀”游戏中，1 号玩家说：“2 号是狼人”，2 号玩家说：“3 号是好人”，3 号玩家说：“4 号是狼人”，4 号玩家说：“5 号是好人”，5 号玩家说：“4 号是好人”。已知这 5 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。扮演狼人角色的是哪两号玩家？</p><p>本题是这个问题的升级版：已知 <em>N</em> 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。要求你找出扮演狼人角色的是哪几号玩家？</p><p><strong>输入描述</strong></p><p>输入在第一行中给出一个正整数 <em>N</em>（5≤<em>N</em>≤100）。随后 <em>N</em> 行，第 <em>i</em> 行给出第 <em>i</em> 号玩家说的话（1≤<em>i</em>≤<em>N</em>），即一个玩家编号，用正号表示好人，负号表示狼人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">-2</span><br><span class="line">+3</span><br><span class="line">-4</span><br><span class="line">+5</span><br><span class="line">+4</span><br></pre></td></tr></table></figure><p><strong>输出描述</strong></p><p>如果有解，在一行中按递增顺序输出 2 个狼人的编号，其间以空格分隔，行首尾不得有多余空格。如果解不唯一，则输出最小序列解 —— 即对于两个序列 <em>A</em>=<em>a</em>[1],…,<em>a</em>[<em>M</em>] 和 <em>B</em>=<em>b</em>[1],…,<em>b</em>[<em>M</em>]，若存在 0≤<em>k</em>&lt;<em>M</em> 使得 <em>a</em>[<em>i</em>]=<em>b</em>[<em>i</em>] （<em>i</em>≤<em>k</em>），且 <em>a</em>[<em>k</em>+1]&lt;<em>b</em>[<em>k</em>+1]，则称序列 <em>A</em> 小于序列 <em>B</em>。若无解则输出 <code>No Solution</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 4</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">solution</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] talk = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            talk[i] = input.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">                ArrayList&lt;Integer&gt; lie = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">                Arrays.fill(arr,<span class="number">1</span>);</span><br><span class="line">                arr[i] = arr[j] = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (talk[k] * arr[Math.abs(talk[k])] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        lie.add(k);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (lie.size() == <span class="number">2</span> &amp;&amp; ((arr[lie.get(<span class="number">0</span>)] + arr[lie.get(<span class="number">1</span>)]) == <span class="number">0</span>)) &#123;</span><br><span class="line">                    System.out.println(i + <span class="string">" "</span> + j);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"No Solution"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Main.solution();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1090、危险品装箱"><a href="#1090、危险品装箱" class="headerlink" title="1090、危险品装箱"></a>1090、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488" target="_blank" rel="noopener">危险品装箱</a></h4><p>集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。</p><p>本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。</p><p><strong>输入描述</strong></p><p>输入第一行给出两个正整数：<em>N</em> (≤104) 是成对的不相容物品的对数；<em>M</em> (≤100) 是集装箱货品清单的单数。</p><p>随后数据分两大块给出。第一块有 <em>N</em> 行，每行给出一对不相容的物品。第二块有 <em>M</em> 行，每行给出一箱货物的清单，格式如下：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">K G<span class="string">[1]</span> G<span class="string">[2]</span> ... G<span class="string">[K]</span></span><br></pre></td></tr></table></figure><p>其中 <code>K</code> (≤1000) 是物品件数，<code>G[i]</code> 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">6 3</span><br><span class="line">20001 20002</span><br><span class="line">20003 20004</span><br><span class="line">20005 20006</span><br><span class="line">20003 20001</span><br><span class="line">20005 20004</span><br><span class="line">20004 20006</span><br><span class="line">4 00001 20004 00002 20003</span><br><span class="line">5 98823 20002 20003 20006 10010</span><br><span class="line">3 12345 67890 23333</span><br></pre></td></tr></table></figure><p><strong>输出描述</strong></p><p>对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 <code>Yes</code>，否则输出 <code>No</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure><p>这题目前用java写的一般都超时了，好像只适合用c++来写，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k, t1, t2;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;t1, &amp;t2);</span><br><span class="line">        m[t1].push_back(t2);</span><br><span class="line">        m[t2].push_back(t1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (k--) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt, flag = <span class="number">0</span>, a[<span class="number">100000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cnt);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v(cnt);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i]);</span><br><span class="line">            a[v[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.size(); i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m[v[i]].size(); j++)</span><br><span class="line">                <span class="keyword">if</span> (a[m[v[i]][j]] == <span class="number">1</span>) flag = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,flag ? <span class="string">"No"</span> :<span class="string">"Yes"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1091、N-自守数"><a href="#1091、N-自守数" class="headerlink" title="1091、N-自守数"></a>1091、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785664454127616" target="_blank" rel="noopener">N-自守数</a></h4><p>如果某个数 <em>K</em> 的平方乘以 <em>N</em> 以后，结果的末尾几位数等于 <em>K</em>，那么就称这个数为“<em>N</em>-自守数”。例如 3×92^2^=25392，而 25392 的末尾两位正好是 92，所以 92 是一个 3-自守数。</p><p>本题就请你编写程序判断一个给定的数字是否关于某个 <em>N</em> 是 <em>N</em>-自守数。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行中给出正整数 <em>M</em>（≤20），随后一行给出 <em>M</em> 个待检测的、不超过 1000 的正整数。</p><p><strong>输出格式</strong>：</p><p>对每个需要检测的数字，如果它是 <em>N</em>-自守数就在一行中输出最小的 <em>N</em> 和 <em>N**K</em>2 的值，以一个空格隔开；否则输出 <code>No</code>。注意题目保证 <em>N</em>&lt;10。</p><p><strong>输入样例</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">92 5 233</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 25392</span><br><span class="line">1 25</span><br><span class="line">No</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"cstdio"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"algorithm"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">weishu</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> temp)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> n / temp != <span class="number">0</span> ? temp*<span class="number">10</span> : weishu(n, (<span class="keyword">int</span>)temp/<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">while</span> (m--) &#123;</span><br><span class="line"><span class="keyword">int</span> num,i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ans = num*num;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; ans*i &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span>((ans*i)%weishu(num,<span class="number">100</span>) == num) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %lld\n"</span>,i,ans*i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">10</span>) <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1092、最好吃的月饼"><a href="#1092、最好吃的月饼" class="headerlink" title="1092、最好吃的月饼"></a>1092、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785779399028736" target="_blank" rel="noopener">最好吃的月饼</a></h4><p>月饼是久负盛名的中国传统糕点之一，自唐朝以来，已经发展出几百品种。若想评比出一种“最好吃”的月饼，那势必在吃货界引发一场腥风血雨…… 在这里我们用数字说话，给出全国各地各种月饼的销量，要求你从中找出销量冠军，认定为最好吃的月饼。</p><p><strong>输入格式</strong></p><p>输入首先给出两个正整数 <em>N</em>（≤1000）和 <em>M</em>（≤100），分别为月饼的种类数（于是默认月饼种类从 1 到 <em>N</em> 编号）和参与统计的城市数量。</p><p>接下来 <em>M</em> 行，每行给出 <em>N</em> 个非负整数（均不超过 1 百万），其中第 <em>i</em> 个整数为第 <em>i</em> 种月饼的销量（块）。数字间以空格分隔。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1001 992 0 233 6</span><br><span class="line">8 0 2018 0 2008</span><br><span class="line">36 18 0 1024 4</span><br></pre></td></tr></table></figure><p><strong>输出格式</strong></p><p>在第一行中输出最大销量，第二行输出销量最大的月饼的种类编号。如果冠军不唯一，则按编号递增顺序输出并列冠军。数字间以 1 个空格分隔，行首尾不得有多余空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2018</span><br><span class="line">3 5</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstdio"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> arr[<span class="number">10000</span>] =  &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> maxnum = <span class="number">-999999</span>;</span><br><span class="line"><span class="keyword">while</span>(m--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;temp);</span><br><span class="line">arr[i] += temp;</span><br><span class="line">maxnum = maxnum &gt; arr[i] ? maxnum : arr[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,maxnum);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (maxnum == arr[i]) &#123;</span><br><span class="line">!flag++ ? <span class="built_in">printf</span>(<span class="string">""</span>) : <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1093、字符串A-B"><a href="#1093、字符串A-B" class="headerlink" title="1093、字符串A+B"></a>1093、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785884776722432" target="_blank" rel="noopener">字符串A+B</a></h4><p>给定两个字符串 <em>A</em> 和 <em>B</em>，本题要求你输出 <em>A</em>+<em>B</em>，即两个字符串的并集。要求先输出 <em>A</em>，再输出 <em>B</em>，但<strong>重复的字符必须被剔除</strong>。</p><p><strong>输入格式</strong></p><p>输入在两行中分别给出 <em>A</em> 和 <em>B</em>，均为长度不超过 106的、由可见 ASCII 字符 (即码值为32~126)和空格组成的、由回车标识结束的非空字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">This is a sample test</span><br><span class="line">to show you_How it works</span><br></pre></td></tr></table></figure><p><strong>输出格式</strong></p><p>在一行中输出题面要求的 <em>A</em> 和 <em>B</em> 的和。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This ampletowyu_Hrk</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">127</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> chr;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="keyword">while</span>(( chr = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span>(arr[chr]++ == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;chr;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="1094、谷歌的招聘"><a href="#1094、谷歌的招聘" class="headerlink" title="1094、谷歌的招聘"></a>1094、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785997033074688" target="_blank" rel="noopener">谷歌的招聘</a></h4><p>2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步。自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642<strong>7427466391</strong>932003059921… 其中粗体标出的 10 位数就是答案。</p><p>本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。</p><p><strong>输入格式</strong></p><p>输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">20 5</span><br><span class="line">23654987725541023819</span><br></pre></td></tr></table></figure><p><strong>输出格式</strong></p><p>在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 <code>404</code>。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">49877</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprimer</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="built_in">string</span> s,s2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=a-b;i++)&#123;</span><br><span class="line">s2=s.substr(i,b);</span><br><span class="line">n=stoi(s2);</span><br><span class="line"><span class="keyword">if</span>(isprimer(n))&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"404"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1095、解码PAT准考证"><a href="#1095、解码PAT准考证" class="headerlink" title="1095、解码PAT准考证"></a>1095、<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071786104348536832" target="_blank" rel="noopener">解码PAT准考证</a></h4><p>PAT 准考证号由 4 部分组成：</p><ul><li>第 1 位是级别，即 <code>T</code> 代表顶级；<code>A</code> 代表甲级；<code>B</code> 代表乙级；</li><li>第 2~4 位是考场编号，范围从 101 到 999；</li><li>第 5~10 位是考试日期，格式为年、月、日顺次各占 2 位；</li><li>最后 11~13 位是考生编号，范围从 000 到 999。</li></ul><p>现给定一系列考生的准考证号和他们的成绩，请你按照要求输出各种统计信息。</p><p><strong>输入格式</strong></p><p>输入首先在一行中给出两个正整数 <em>N</em>（≤104）和 <em>M</em>（≤100），分别为考生人数和统计要求的个数。</p><p>接下来 <em>N</em> 行，每行给出一个考生的准考证号和其分数（在区间 [0,100] 内的整数），其间以空格分隔。</p><p>考生信息之后，再给出 <em>M</em> 行，每行给出一个统计要求，格式为：<code>类型 指令</code>，其中</p><ul><li><code>类型</code> 为 1 表示要求按分数非升序输出某个指定级别的考生的成绩，对应的 <code>指令</code> 则给出代表指定级别的字母；</li><li><code>类型</code> 为 2 表示要求将某指定考场的考生人数和总分统计输出，对应的 <code>指令</code> 则给出指定考场的编号；</li><li><code>类型</code> 为 3 表示要求将某指定日期的考生人数分考场统计输出，对应的 <code>指令</code> 则给出指定日期，格式与准考证上日期相同。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">8 4</span><br><span class="line">B123180908127 99</span><br><span class="line">B102180908003 86</span><br><span class="line">A112180318002 98</span><br><span class="line">T107150310127 62</span><br><span class="line">A107180908108 100</span><br><span class="line">T123180908010 78</span><br><span class="line">B112160918035 88</span><br><span class="line">A107180908021 98</span><br><span class="line">1 A</span><br><span class="line">2 107</span><br><span class="line">3 180908</span><br><span class="line">2 999</span><br></pre></td></tr></table></figure><p><strong>输出格式</strong></p><p>对每项统计要求，首先在一行中输出 <code>Case #: 要求</code>，其中 <code>#</code> 是该项要求的编号，从 1 开始；<code>要求</code> 即复制输入给出的要求。随后输出相应的统计结果：</p><ul><li><code>类型</code> 为 1 的指令，输出格式与输入的考生信息格式相同，即 <code>准考证号 成绩</code>。对于分数并列的考生，按其准考证号的字典序递增输出（题目保证无重复准考证号）；</li><li><code>类型</code> 为 2 的指令，按 <code>人数 总分</code> 的格式输出；</li><li><code>类型</code> 为 3 的指令，输出按人数非递增顺序，格式为 <code>考场编号 总人数</code>。若人数并列则按考场编号递增顺序输出。</li></ul><p>如果查询结果为空，则输出 <code>NA</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Case 1: 1 A</span><br><span class="line">A107180908108 100</span><br><span class="line">A107180908021 98</span><br><span class="line">A112180318002 98</span><br><span class="line">Case 2: 2 107</span><br><span class="line">3 260</span><br><span class="line">Case 3: 3 180908</span><br><span class="line">107 2</span><br><span class="line">123 2</span><br><span class="line">102 1</span><br><span class="line">Case 4: 2 999</span><br><span class="line">NA</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="built_in">string</span> t;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node &amp;a, <span class="keyword">const</span> node &amp;b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.value != b.value ? a.value &gt; b.value : a.t &lt; b.t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k, num;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="built_in">vector</span>&lt;node&gt; v(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v[i].t &gt;&gt; v[i].value;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num &gt;&gt; s;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d %s\n"</span>, i, num, s.c_str());</span><br><span class="line">        <span class="built_in">vector</span>&lt;node&gt; ans;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">                <span class="keyword">if</span> (v[j].t[<span class="number">0</span>] == s[<span class="number">0</span>]) ans.push_back(v[j]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (v[j].t.substr(<span class="number">1</span>, <span class="number">3</span>) == s) &#123;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    sum += v[j].value;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (cnt != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, cnt, sum);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">                <span class="keyword">if</span> (v[j].t.substr(<span class="number">4</span>, <span class="number">6</span>) == s) m[v[j].t.substr(<span class="number">1</span>, <span class="number">3</span>)]++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> it : m) ans.push_back(&#123;it.first, it.second&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(ans.begin(), ans.end(),cmp);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ans.size(); j++) <span class="built_in">printf</span>(<span class="string">"%s %d\n"</span>, ans[j].t.c_str(), ans[j].value);</span><br><span class="line">        <span class="keyword">if</span> (((num == <span class="number">1</span> || num == <span class="number">3</span>) &amp;&amp; ans.size() == <span class="number">0</span>) || (num == <span class="number">2</span> &amp;&amp; cnt == <span class="number">0</span>)) <span class="built_in">printf</span>(<span class="string">"NA\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1001、害死人不偿命的-3n-1-猜想&quot;&gt;&lt;a href=&quot;#1001、害死人不偿命的-3n-1-猜想&quot; class=&quot;headerlink&quot; title=&quot;1001、害死人不偿命的(3n+1)猜想&quot;&gt;&lt;/a&gt;1001、&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;害死人不偿命的(3n+1)猜想&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;卡拉兹(Callatz)猜想：&lt;/p&gt;
&lt;p&gt;对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……&lt;/p&gt;
&lt;p&gt;我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？&lt;/p&gt;
    
    </summary>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>和为S的两个数字</title>
    <link href="http://yoursite.com/2020/12/07/%E5%92%8C%E4%B8%BAS%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2020/12/07/和为S的两个数字/</id>
    <published>2020-12-07T12:20:27.224Z</published>
    <updated>2020-12-07T12:43:36.067Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。</p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><p>一个递增排序的数组和一个数字S</p><blockquote><p>[1,2,4,7,11,15],15</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>数字和等于S 的两个数，输出两个数，小的先输出。</p><blockquote><p>[4,11]</p></blockquote><a id="more"></a><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p><strong>方法一：双指针</strong></p><p>因为数组是有序的，所以可以用双指针，指向数组的首尾，具体步骤如下：</p><p>1，初始化：指针low指向数组首，指针high指向数组尾部。</p><p>2，如果arr[low] + arr[high] == sum，说明可能是解，判断是否乘积最小。</p><p>3，如果arr[low] + arr[high] &lt; sum，说明和太小，所以应该low++。</p><p>4，如果arr[low] + arr[high]  &gt; sum，说明和太大，所以应该high–。</p><p><strong>时间复杂度：</strong>O(n)</p><p><strong>空间复杂度：</strong>O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Solution;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">FindNumbersWithSum</span><span class="params">(<span class="keyword">int</span> [] array,<span class="keyword">int</span> sum)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> maxFlag = <span class="number">9999999</span>;</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> high = array.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[low] + array[high] == sum) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[low] * array[high] &lt; maxFlag) &#123;</span><br><span class="line">                    arrayList.clear();</span><br><span class="line">                    arrayList.add(array[low]);</span><br><span class="line">                    arrayList.add(array[high]);</span><br><span class="line">                    maxFlag = array[low] * array[high];</span><br><span class="line">                &#125;</span><br><span class="line">                low++;</span><br><span class="line">                high--;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (array[low] + array[high] &lt; sum) &#123;</span><br><span class="line">                low++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                high--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arrayList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arg[])</span> </span>&#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n,k;</span><br><span class="line">        n = input.nextInt();</span><br><span class="line">        k = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span> [] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; ++i) &#123;</span><br><span class="line">            arr[i] = input.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line"></span><br><span class="line">        System.out.print(solution.FindNumbersWithSum(arr,k));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。&lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;p&gt;一个递增排序的数组和一个数字S&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[1,2,4,7,11,15],15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;p&gt;数字和等于S 的两个数，输出两个数，小的先输出。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[4,11]&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数字在升序数组中出现的次数</title>
    <link href="http://yoursite.com/2020/12/05/%E6%95%B0%E5%AD%97%E5%9C%A8%E5%8D%87%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/"/>
    <id>http://yoursite.com/2020/12/05/数字在升序数组中出现的次数/</id>
    <published>2020-12-05T07:44:22.898Z</published>
    <updated>2020-12-05T08:05:51.213Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>统计一个数字在升序数组中出现的次数。</p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><p>一个升序数组，和一个待统计的数字</p><blockquote><p>[1,2,3,3,3,3,4,5] , 3</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>数字的统计次数</p><blockquote><p>4</p></blockquote><a id="more"></a><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p><strong>方法一：暴力求解</strong></p><p>直接定义两个index，一个从数组的头往后遍历，寻找第一个K值的下标，即寻找k值的上界，一个从数组的最后往前遍历，寻找k值的下界，下界减上界即是k值的个数。</p><p><strong>时间复杂度：</strong>O(n)</p><p><strong>空间复杂度：</strong>O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetNumberOfK</span><span class="params">(<span class="keyword">int</span> [] array , <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = array.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> ( i &lt;= j ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[i] == array[j] &amp;&amp; array[i] == k) <span class="keyword">return</span> j-i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (array[i] != k ) i++;</span><br><span class="line">            <span class="keyword">if</span> (array[j] != k ) j--;</span><br><span class="line"><span class="comment">//            System.out.print(i + " " + j + "\n");</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二：二分</strong></p><p>考虑到有序数组，可以通过二分查找的方式找出k的上界和下界。</p><p>下界定义为：如果存在目标值，则指向第一个目标数，如果不存在，则指向大于目标值的第一个值。</p><p>上界定义为：不管目标是否存在，都指向大于目标值的第一个值。</p><p><div align="center"><img src="/2020/12/05/数字在升序数组中出现的次数/1.png" alt></div></p><p><div align="center"><img src="/2020/12/05/数字在升序数组中出现的次数/2.png" alt></div></p><p>最后的答案就是<code>right - left</code></p><p><strong>时间复杂度：</strong>O(logN)</p><p><strong>空间复杂度：</strong>O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetNumberOfK</span><span class="params">(<span class="keyword">int</span> [] array , <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> right = array.length;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (left + right - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (array[mid] &gt;= k) right = mid;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> lbound = right;</span><br><span class="line">        left = <span class="number">0</span>;</span><br><span class="line">        right = array.length;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (left + right - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (array[mid] &lt;= k) left = mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                right = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ubound = left;</span><br><span class="line">        <span class="keyword">return</span> ubound-lbound;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;统计一个数字在升序数组中出现的次数。&lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;p&gt;一个升序数组，和一个待统计的数字&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[1,2,3,3,3,3,4,5] , 3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;p&gt;数字的统计次数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>第一个只出现一次的字符</title>
    <link href="http://yoursite.com/2020/12/03/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6/"/>
    <id>http://yoursite.com/2020/12/03/第一个只出现一次的字符/</id>
    <published>2020-12-03T08:36:48.758Z</published>
    <updated>2020-12-03T08:47:07.537Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>在一个字符串(0&lt;=字符串长度&lt;=10000，全部由字母组成)中找到第一个只出现一次的字符,并返回它的位置, 如果没有则返回 -1（需要区分大小写）.（从0开始计数） </p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><p>一个字符串(0&lt;=字符串长度&lt;=10000，全部由字母组成)，区分大小写。</p><blockquote><p>wohenhaowWOHENHAO</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>第一个只出现一次的字符的位置，如果没有输出-1，从0开始计数</p><blockquote><p>3</p></blockquote><a id="more"></a><h5 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h5><p><strong>哈希法</strong></p><p>先遍历一遍字符串统计每个字符出现的次数，然后在遍历一遍字符串，输出只出现一次的的字符的位置。</p><p><strong>时间复杂度</strong>：O(2n)，需要遍历两遍字符串</p><p><strong>空间复杂度</strong>：O(1)，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FirstNotRepeatingChar</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="string">'z'</span> - <span class="string">'A'</span> + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            arr[str.charAt(i)-<span class="string">'A'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[str.charAt(i)-<span class="string">'A'</span>] == <span class="number">1</span>) <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arg[])</span> </span>&#123;</span><br><span class="line">        String str;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        str = input.next();</span><br><span class="line"></span><br><span class="line">        System.out.print(str + <span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line"></span><br><span class="line">        System.out.print(solution.FirstNotRepeatingChar(str));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;在一个字符串(0&amp;lt;=字符串长度&amp;lt;=10000，全部由字母组成)中找到第一个只出现一次的字符,并返回它的位置, 如果没有则返回 -1（需要区分大小写）.（从0开始计数） &lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;p&gt;一个字符串(0&amp;lt;=字符串长度&amp;lt;=10000，全部由字母组成)，区分大小写。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wohenhaowWOHENHAO&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;p&gt;第一个只出现一次的字符的位置，如果没有输出-1，从0开始计数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>把数组排成最小的数</title>
    <link href="http://yoursite.com/2020/11/26/%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0/"/>
    <id>http://yoursite.com/2020/11/26/把数组排成最小的数/</id>
    <published>2020-11-26T07:59:16.617Z</published>
    <updated>2020-11-26T08:13:41.001Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输入一个正整数数组，把数组里面所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3,32,321}，则打印出这三个数字能排成的最小数字为321323.</p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><blockquote><p>{3,32,321}</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><blockquote><p>321323</p></blockquote><a id="more"></a><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>将数组中的数字连接起来，排成一个最小的数字。将”大数“往后放，”小数“往前放</p><p>如何定义“大数”与“小数”，<strong>排序！！！</strong></p><p>例如当前两个数a和b</p><p>判断当前字符串a+b与字符串b+a对应的数字大小，如果ab&gt;ba。则a是大数，b是小数。</p><p>所以这道题变成了一个排序问题，将能把组合出来的数字变大的数字往后排，</p><p>这里我们只需要定义一个比较大小的判断。用冒泡排序如下：（其他排序类似）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">PrintMinNumber</span><span class="params">(<span class="keyword">int</span> [] numbers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; numbers.length; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (Integer.parseInt(numbers[i]+<span class="string">""</span>+numbers[j]) &gt; Integer.parseInt((numbers[j]+<span class="string">""</span>+numbers[i]))) &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp;</span><br><span class="line">                    temp = numbers[i];</span><br><span class="line">                    numbers[i] = numbers[j];</span><br><span class="line">                    numbers[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        String str=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length; ++i) &#123;</span><br><span class="line">            str = str + numbers[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arg[])</span> </span>&#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        n = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            arr[i] = input.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line">        System.out.print(solution.PrintMinNumber(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;输入一个正整数数组，把数组里面所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3,32,321}，则打印出这三个数字能排成的最小数字为321323.&lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;{3,32,321}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;321323&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>连续子数组的最大和</title>
    <link href="http://yoursite.com/2020/11/12/%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C/"/>
    <id>http://yoursite.com/2020/11/12/连续子数组的最大和/</id>
    <published>2020-11-12T11:35:45.250Z</published>
    <updated>2020-11-12T11:58:41.169Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>HZ偶尔会拿些专业问题来忽悠那些非计算机专业的同学。今天测试组开完会后,他又发话了:在古老的一维模式识别中,常常需要计算连续子向量的最大和,当向量全为正数的时候,问题很好解决。但是,如果向量中包含负数,是否应该包含某个负数,并期望旁边的正数会弥补它呢？例如:{6,-3,-2,7,-15,1,2,2},连续子向量的最大和为8(从第0个开始,到第3个为止)。给一个数组，返回它的最大连续子序列的和，你会不会被他忽悠住？(子向量的长度至少是1) </p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><p>[1,-2,3,10,-4,7,2,-5]</p><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>18</p><a id="more"></a> <h5 id="方法一-动态规划"><a href="#方法一-动态规划" class="headerlink" title="方法一 动态规划"></a>方法一 动态规划</h5><p>状态定义：dp[i]表示以i结尾的连续子数组的最大和。所以最终要求dp[n-1] </p><p>状态转移方程：dp[i] = max(array[i], dp[i-1]+array[i]) </p><p>解释：如果当前元素为整数，并且dp[i-1]为负数，那么当然结果就是只选当前元素 </p><p>技巧：这里为了统一代码的书写，定义dp[i]表示前i个元素的连续子数组的最大和，结尾元素为array[i-1] </p><p>时间复杂度：O(n)</p><p>空间复杂度：O(n)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sz = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; dp(sz+<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>; <span class="comment">// 表示没有元素</span></span><br><span class="line">        <span class="keyword">int</span> ret = <span class="built_in">array</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=sz; ++i) &#123;</span><br><span class="line">            dp[i] = max(<span class="built_in">array</span>[i<span class="number">-1</span>], dp[i<span class="number">-1</span>]+<span class="built_in">array</span>[i<span class="number">-1</span>]);</span><br><span class="line">            ret = max(ret, dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maxNum = -<span class="number">999999</span>;</span><br><span class="line">        <span class="keyword">int</span> res = -<span class="number">999999</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; ++i) &#123;</span><br><span class="line">            maxNum = array[i] &gt; array[i] + maxNum ? array[i] : array[i] + maxNum;</span><br><span class="line">            res = res &gt; maxNum ? res : maxNum;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>思想很简单，就是对下标为i的元素array[i]，先试探的加上array[i], 如果和为负数，显然，以i结尾的元素对整个结果不作贡献。<br>具体过程：</p><ol><li>初始化：维护一个变量tmp = 0</li><li>如果tmp+array[i] &lt; 0, 说明以i结尾的不作贡献，重新赋值tmp = 0</li><li>否则更新tmp = tmp + array[i]<br>最后判断tmp是否等于0， 如果等于0， 说明数组都是负数，选取一个最大值为答案。</li></ol><p>时间复杂度：O(n)</p><p>空间复杂度：O(1)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ret = <span class="built_in">array</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> k : <span class="built_in">array</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tmp + k &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                tmp = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                tmp += k;</span><br><span class="line">            &#125;</span><br><span class="line">            ret = max(ret, tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tmp != <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        <span class="keyword">return</span> *max_element(<span class="built_in">array</span>.begin(), <span class="built_in">array</span>.end());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;HZ偶尔会拿些专业问题来忽悠那些非计算机专业的同学。今天测试组开完会后,他又发话了:在古老的一维模式识别中,常常需要计算连续子向量的最大和,当向量全为正数的时候,问题很好解决。但是,如果向量中包含负数,是否应该包含某个负数,并期望旁边的正数会弥补它呢？例如:{6,-3,-2,7,-15,1,2,2},连续子向量的最大和为8(从第0个开始,到第3个为止)。给一个数组，返回它的最大连续子序列的和，你会不会被他忽悠住？(子向量的长度至少是1) &lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;p&gt;[1,-2,3,10,-4,7,2,-5]&lt;/p&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;p&gt;18&lt;/p&gt;
    
    </summary>
    
    
      <category term="dp" scheme="http://yoursite.com/tags/dp/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数组中出现次数超过一半的数字</title>
    <link href="http://yoursite.com/2020/11/09/%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2020/11/09/数组中出现次数超过一半的数字/</id>
    <published>2020-11-09T08:44:24.319Z</published>
    <updated>2020-11-09T09:14:08.439Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字，例如输入一个长度为9的数组[1,2,3,2,2,2,5,4,2]，由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2，如果不存在则输出0；</p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><p>[1,2,3,2,2,2,5,4,2]</p><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>2</p><a id="more"></a><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>现将数组排序，如果有超过数组长度一半的元素则该值一定会出现在数组的中间，然后将数组中间的该元素的个数判断一下是否有超过数组长度的一半。</p><p>时间复杂度：O(nlogn)</p><p>空间复杂度：O(1)</p><h5 id="方法二-候选法-最优解"><a href="#方法二-候选法-最优解" class="headerlink" title="方法二(候选法)最优解"></a>方法二(候选法)最优解</h5><p>首先先找出数组中的众数，然后判断该众数的个数是否超过了数组长度的一半。</p><p>具体做法：</p><ol><li>初始化当前众数值preValue = -1，以及目前出现该preValue的次数count = 0；</li><li>遍历数组：判断count是否 = 0，若为0，说明当前不存在众数值preValue，则把当前值存为preValue，次数为记为1，若不为0，说明当前存在众数值preValue且次数为count，则判断当前值是否与preValue相等，若相等则次数count+1，若不想等则次数count -1。</li><li>遍历完之后preValue中保存的则为数组中的众数，在判断此preValue的count是否超过数组长度的一半。若存在相等的情况，则preValue保存的为最后一次的众数值，但此情况下一定不存在次数超过数组长度一半的数字。</li></ol><p>时间复杂度：O(n)</p><p>空间复杂度：O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">MoreThanHalfNum_Solution</span><span class="params">(<span class="keyword">int</span> [] array)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> preValued = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">                preValued = array[i];</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                count = preValued == array[i] ? count + <span class="number">1</span> : count - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[i] == preValued) count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count &gt; array.length/<span class="number">2</span> ? preValued : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arg[])</span> </span>&#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        n = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            arr[i] = input.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line">        System.out.print(solution.MoreThanHalfNum_Solution(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字，例如输入一个长度为9的数组[1,2,3,2,2,2,5,4,2]，由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2，如果不存在则输出0；&lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;p&gt;[1,2,3,2,2,2,5,4,2]&lt;/p&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;p&gt;2&lt;/p&gt;
    
    </summary>
    
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>字符串的排列</title>
    <link href="http://yoursite.com/2020/11/03/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97/"/>
    <id>http://yoursite.com/2020/11/03/字符串的排列/</id>
    <published>2020-11-03T10:16:37.512Z</published>
    <updated>2020-11-03T10:34:14.140Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输入一个字符串，按字典序列打印出该字符串中字符的所有排列，例如输入字符串abc，则按照字典序打印出由字符a、b、c所能排列出来的所有的字符串为</p><p>abc,acb,bac,bca,cab,cba。</p><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><blockquote><p>输入一个字符串，长度不超过9，(可能有字符重复)，字符只包括大小写字母。</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><blockquote><p>该字符串按照字典序的全排列</p></blockquote><a id="more"></a><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p>这种从固定的数组/String中取出元素进行排列组合，是经典的permutation问题，只是本题的要求是需要返回所有不重复的排列组合，而不是返回多少种情况，所以需要新建一个String的ArrayList来储存所有排列出的不重复的字符串。</p><p>基本思想是采用递归从字符串中不断选取某个字符来进行匹配。</p><p>定义一个方法：用于递归的循环的向下寻找所有可能的排列组合，其中有三个参数。</p><p>第一个str为当前剩下的可以取的String，第二个是cur，为当前所组合的字符串，第三个是res，为符合条件的字符串的合集。</p><p>递归结束条件为：当前剩下的String长度为0时表示所有字符已经取完，此时的cur为排列出的一种情况，若res中没有则加入res。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Perm</span><span class="params">(String str, String cur, ArrayList&lt;String&gt; res)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (str.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!res.contains(cur)) &#123;</span><br><span class="line">                res.add(cur);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); ++i) &#123;</span><br><span class="line">            Perm(str.substring(<span class="number">0</span>,i)+str.substring(i+<span class="number">1</span>),cur+str.charAt(i),res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;String&gt; <span class="title">Permutation</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer(str);</span><br><span class="line">        ArrayList&lt;String&gt; res = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stringBuffer.length();) &#123;</span><br><span class="line">            <span class="keyword">if</span> ( !(stringBuffer.charAt(i) &lt;= <span class="string">'z'</span> &amp;&amp; stringBuffer.charAt(i) &gt;= <span class="string">'A'</span>)) &#123;</span><br><span class="line">                stringBuffer.deleteCharAt(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ++i;</span><br><span class="line">        &#125;</span><br><span class="line">        str = stringBuffer.toString();</span><br><span class="line">        <span class="keyword">if</span> (str.length() == <span class="number">0</span>) <span class="keyword">return</span> res;</span><br><span class="line">        Perm(str,<span class="string">""</span>,res);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arg[])</span> </span>&#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String str = input.next();</span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line">        System.out.print(solution.Permutation(str));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;输入一个字符串，按字典序列打印出该字符串中字符的所有排列，例如输入字符串abc，则按照字典序打印出由字符a、b、c所能排列出来的所有的字符串为&lt;/p&gt;
&lt;p&gt;abc,acb,bac,bca,cab,cba。&lt;/p&gt;
&lt;h4 id=&quot;输入描述&quot;&gt;&lt;a href=&quot;#输入描述&quot; class=&quot;headerlink&quot; title=&quot;输入描述&quot;&gt;&lt;/a&gt;输入描述&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;输入一个字符串，长度不超过9，(可能有字符重复)，字符只包括大小写字母。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出描述&quot;&gt;&lt;a href=&quot;#输出描述&quot; class=&quot;headerlink&quot; title=&quot;输出描述&quot;&gt;&lt;/a&gt;输出描述&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;该字符串按照字典序的全排列&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>顺时针打印矩阵</title>
    <link href="http://yoursite.com/2020/11/01/%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5/"/>
    <id>http://yoursite.com/2020/11/01/顺时针打印矩阵/</id>
    <published>2020-11-01T09:21:49.638Z</published>
    <updated>2020-11-01T13:54:23.449Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输一个矩阵，按照从外向里一顺时针的顺序依次打印出每一个数字，例如，如果输入如下4×4的矩阵：</p><p>1 2 3 4</p><p>5 6 7 8</p><p>9 10 11 12</p><p>13 14 15 16</p><p>则依次打印出的数字为：</p><p>1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10.</p><a id="more"></a><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><blockquote><p>[[1,2],[3,4]]</p></blockquote><p>输出</p><blockquote><p>[1,2,4,3]</p></blockquote><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><blockquote><p><div align="center"> <img src="/2020/11/01/顺时针打印矩阵/1.png" alt></div></p></blockquote><p>定义四个变量分别代表范围大小：up、down、left、right</p><p>第一步：向右走存入整行的值，以left、right作为行的左右边界，当存入之后，将上边界+1，表示第一行已经存入了，同时判断是否超过了下边界。</p><p>第二步：右侧向下遍历整列的值，以up、down作为列的上下边界，当存入之后，将右边界-1，表示最右侧的边界已经存入，同时判断是否超过了左边界。</p><p>第三步：下边界向左遍历整行的值，以rigth、left作为右左边界，当存入之后，将下边界-1，表示最下侧的边界已经存入，同时判断是否超过了上边界。</p><p>第四步：左边界向上遍历整列的值，以down、up作为下上边界，当存入之后，将左边界+1，表示最左侧的边界已经存入，同时判断是否超过了右边界。</p><p><strong>复杂度</strong></p><p>时间复杂度：O(n)</p><p>空间复杂度：O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">//键盘扫描类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printMatrix</span><span class="params">(<span class="keyword">int</span> [][] matrix)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">if</span> (matrix == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">int</span> up = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> down = matrix.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> right = matrix[<span class="number">0</span>].length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = left;i &lt;= right; ++i) &#123;</span><br><span class="line">                arrayList.add(matrix[up][i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((++up) &gt; down) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = up; i &lt;= down; ++i) &#123;</span><br><span class="line">                arrayList.add(matrix[i][right]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((--right) &lt; left) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = right; i &gt;= left; --i) &#123;</span><br><span class="line">                arrayList.add(matrix[down][i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((--down) &lt; up) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = down; i &gt;= up; --i) &#123;</span><br><span class="line">                arrayList.add(matrix[i][left]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((++left) &gt; right) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arrayList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arg[])</span> </span>&#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> row = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span> col = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span> [][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[row][col];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; row; ++i) &#123;</span><br><span class="line"><span class="comment">//            String str = input.next();</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; col; ++j) &#123;</span><br><span class="line">                arr[i][j] = input.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr[<span class="number">0</span>].length; ++j) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        arrayList = solution.printMatrix(arr);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrayList.size(); ++i) &#123;</span><br><span class="line">            System.out.print(arrayList.get(i) + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一种简单的方法(python)</p><ol><li>将矩阵的第一行截取出来。</li><li>判断截取之后是否还存在行数，若不存在，结束循环。</li><li>将矩阵向左转置，即向左旋转90度。</li><li>重复1步骤</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _*_ coding:utf-8 _*_</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printMatrix</span><span class="params">(self, matrix)</span>:</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            res.extend(matrix[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">if</span> len(matrix) &gt; <span class="number">1</span>:</span><br><span class="line">                matrix = matrix[<span class="number">1</span>::]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            matrix = [ [row[i] <span class="keyword">for</span> row <span class="keyword">in</span> matrix] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(matrix[<span class="number">0</span>])<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>)]  <span class="comment"># 矩阵装置，向左转90度</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    info = list(map(int, input().split(<span class="string">" "</span>)))</span><br><span class="line">    arr = [[<span class="number">0</span>] * info[<span class="number">1</span>]] * info[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(info[<span class="number">0</span>]):</span><br><span class="line">        arr[i] = list(map(int, input().split(<span class="string">" "</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># arr = [[row[i] for row in arr] for i in range(len(arr[0]) - 1, -1, -1)]</span></span><br><span class="line">    <span class="comment"># print(arr)</span></span><br><span class="line">    print(Solution().printMatrix(arr))</span><br></pre></td></tr></table></figure><h4 id="Integer-类和-int-的区别"><a href="#Integer-类和-int-的区别" class="headerlink" title="Integer 类和 int 的区别"></a>Integer 类和 int 的区别</h4><ol><li>Integer 是 int 包装类，int 是八大基本数据类型之一(byte,char,short,int,long,float,double,boolean)</li><li>Integer 是类，默认值是null，int是基本数据类型，默认值是0；</li><li>Integer 表示的是对象，用一个引用指向这个对象，而int是基本数据类型，直接储存数据。</li></ol><p><strong>Integer的自动拆箱和装箱</strong></p><ol><li><p><strong>自动装箱</strong></p><p>一般创建一个类的时候是通过关键字new，比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br></pre></td></tr></table></figure><p>但是对于Integer类，可以这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer a = <span class="number">128</span>;</span><br></pre></td></tr></table></figure><p>这是因为：通过反编译工具可以看到，生成的class文件是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer a = Integer.valueOf(<span class="number">128</span>);</span><br></pre></td></tr></table></figure><p>这就是基本数据类型的自动装箱，128是基本数据类型，然后被解析成Integer类。</p></li><li><p><strong>自动拆箱</strong></p><p>将Integer类表示的数据赋值给基本数据类型int，就执行了自动拆箱。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer a = <span class="keyword">new</span> Integer(<span class="number">128</span>);</span><br><span class="line"><span class="keyword">int</span> m = a;</span><br></pre></td></tr></table></figure><p>反编译生成的class文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer a = <span class="keyword">new</span> Integer(<span class="number">128</span>);</span><br><span class="line"><span class="keyword">int</span> m = a.intValue();</span><br></pre></td></tr></table></figure><p>简单的说：自动装箱就是<code>Integer.valueOf(int i)</code>；自动拆箱就是<code>i.intValue()</code>；</p></li></ol><p><strong>Arrays，list，Arraylist 的区别</strong></p><p>List是接口，ArrayList是用一个数组实现的List类。</p><p>ArrayList是自动扩容的Arrays，有add(),remove()方法。</p><p>ArrayList相比于Arrays少了[]操作，而是利用get(i)配合索引值来取值。</p><p>ArrayList<integer>不能写成ArrayList<int></int></integer></p><p>Array(数组)是基于索引(index)的数据结构，使用索引在数组中搜索和读取数据是很快的。</p><p>获取数据的时间复杂度是O(1)，但是要删除数据开销很大，要重排数组中的所有数据。</p><p>List是一个有序的集合，可以包含重复的元素，提供了按索引访问的方式。</p><p>List是一个接口，不能写成：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> List&lt;Integer&gt;(); <span class="comment">// 错误</span></span><br></pre></td></tr></table></figure><p>ArrayList可以看成是能够自动增长容量的数组。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;输一个矩阵，按照从外向里一顺时针的顺序依次打印出每一个数字，例如，如果输入如下4×4的矩阵：&lt;/p&gt;
&lt;p&gt;1 2 3 4&lt;/p&gt;
&lt;p&gt;5 6 7 8&lt;/p&gt;
&lt;p&gt;9 10 11 12&lt;/p&gt;
&lt;p&gt;13 14 15 16&lt;/p&gt;
&lt;p&gt;则依次打印出的数字为：&lt;/p&gt;
&lt;p&gt;1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10.&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>回文数（java）</title>
    <link href="http://yoursite.com/2020/10/10/%E5%9B%9E%E6%96%87%E6%95%B0%EF%BC%88java%EF%BC%89/"/>
    <id>http://yoursite.com/2020/10/10/回文数（java）/</id>
    <published>2020-10-10T03:04:41.737Z</published>
    <updated>2020-10-10T04:35:25.043Z</updated>
    
    <content type="html"><![CDATA[<p>牛客练习赛71，题一：</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p><img src="/2020/10/10/回文数（java）/one.png" alt="题目描述"></p><a id="more"></a><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><blockquote><p>一行10个自然数，分别表示数码0~9的出现次数</p></blockquote><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><blockquote><p>如果无解，只输出”-1”（不含引号）</p><p>否则，输出一个数表示最小的解</p></blockquote><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><blockquote><p>输入</p><p>0 2 4 2 0 2 0 0 0 0</p><p>输出</p><p>1223553221</p></blockquote><blockquote><p>1 1 4 5 1 4 0 0 0 0</p><p>-1</p></blockquote><blockquote><p>4 0 2 3 0 0 0 2 0 0</p><p>20037373002</p></blockquote><blockquote><p>2 0 0 0 0 0 0 0 0 1</p><p>-1</p></blockquote><blockquote><p>1 0 0 0 0 0 0 0 0 0</p><p>0</p></blockquote><p>备注： 保证输入的所有数都不超过10，且至少一个数大于0；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; ++i) &#123;</span><br><span class="line">            arr[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        Main.solution(arr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        for(int n : arr) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.print(n + (n == arr[arr.length-1] ? "\n": " "));</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println(arr.toString());</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">solution</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> odd_count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n : arr) &#123;</span><br><span class="line">            sum += n;</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) odd_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (odd_count&gt;<span class="number">1</span>) System.out.print(<span class="string">"-1"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((sum-arr[<span class="number">1</span>])==<span class="number">1</span> &amp;&amp; arr[<span class="number">1</span>] != <span class="number">0</span>) System.out.print(<span class="string">"-1"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            String end = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; ++i) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[i] % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                    end = String.valueOf(i - <span class="number">1</span>);</span><br><span class="line">                    arr[i]--;</span><br><span class="line">                &#125;</span><br><span class="line">                arr[i] &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">10</span>; ++i) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                    sb.append(String.valueOf(i - <span class="number">1</span>));</span><br><span class="line">                    arr[i]--;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; ++i) &#123;</span><br><span class="line">                <span class="keyword">while</span> (arr[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                    sb.append(String.valueOf(i - <span class="number">1</span>));</span><br><span class="line">                    arr[i]--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(sb + end + sb.reverse());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;牛客练习赛71，题一：&lt;/p&gt;
&lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/2020/10/10/回文数（java）/one.png&quot; alt=&quot;题目描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>链表操作(java)</title>
    <link href="http://yoursite.com/2020/09/29/%E9%93%BE%E8%A1%A8%E6%93%8D%E4%BD%9C-java/"/>
    <id>http://yoursite.com/2020/09/29/链表操作-java/</id>
    <published>2020-09-29T11:19:39.125Z</published>
    <updated>2020-09-29T11:26:12.709Z</updated>
    
    <content type="html"><![CDATA[<h3 id="链表的各种操作"><a href="#链表的各种操作" class="headerlink" title="链表的各种操作"></a>链表的各种操作</h3><p>概念：一种重要的数据结构，储存带院是不连续的，每个结点由两部分组成：<br>储存的数值+前序结点和后序结点的指针，既有前序结点和指针又有后序结点的指针的链表称为双向链表，<br>只包含后序指针的链表为单链表。</p><a id="more"></a><h4 id="链表结点的实体类"><a href="#链表结点的实体类" class="headerlink" title="链表结点的实体类"></a>链表结点的实体类</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">    ListNode next = <span class="literal">null</span>;  <span class="comment">//下一个结点</span></span><br><span class="line">    int <span class="keyword">data</span>;  <span class="comment">//结点数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> ListNode(int <span class="keyword">data</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">data</span> = <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="链表操作"><a href="#链表操作" class="headerlink" title="链表操作"></a>链表操作</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ListNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.deploy.util.LinkMouseListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> ListNodeOperation &#123;</span><br><span class="line">    ListNode head = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链表添加结点</span></span><br><span class="line"><span class="comment">     * 找到链表的末尾结点，把新添加的数据作为末尾结点的后续结点</span></span><br><span class="line"><span class="comment">     * @param data</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> addListNode(<span class="keyword">int</span> data) &#123;</span><br><span class="line">        ListNode newNode = <span class="keyword">new</span> ListNode(data);</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            head = newNode;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode temp = head;</span><br><span class="line">        <span class="keyword">while</span> (temp.<span class="keyword">next</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">            temp = temp.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        temp.<span class="keyword">next</span> = newNode;</span><br><span class="line">        newNode.<span class="keyword">next</span> = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印链表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> printLink() &#123;</span><br><span class="line">        ListNode cur = head;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.<span class="keyword">print</span>(cur.data + (cur.<span class="keyword">next</span> == <span class="keyword">null</span> ? <span class="string">""</span> : <span class="string">" "</span>));</span><br><span class="line">            cur = cur.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.<span class="keyword">println</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链表删除结点；</span></span><br><span class="line"><span class="comment">     * 把待删除前的一个结点的next指向下一个结点。</span></span><br><span class="line"><span class="comment">     * @param val</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> deleteListNode(<span class="keyword">int</span> val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;  <span class="comment">// 判断链表为空</span></span><br><span class="line">        <span class="keyword">if</span> (head.data == val) &#123;  <span class="comment">// 若删除头指针</span></span><br><span class="line">            head = head.<span class="keyword">next</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode pre = head;</span><br><span class="line">        ListNode temp = head.<span class="keyword">next</span>;</span><br><span class="line">        <span class="keyword">while</span> (temp != <span class="keyword">null</span>) &#123;  <span class="comment">// 遍历链表</span></span><br><span class="line">            <span class="keyword">if</span> (temp.data == val) &#123;</span><br><span class="line">                pre.<span class="keyword">next</span> = temp.<span class="keyword">next</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pre = temp;</span><br><span class="line">            temp = temp.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回链表长度</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> length() &#123;</span><br><span class="line">        <span class="keyword">int</span> <span class="keyword">count</span> = <span class="number">0</span>;</span><br><span class="line">        ListNode cur = head;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">count</span>++;</span><br><span class="line">            cur = cur.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">count</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链表结点排序，并返回排序后的头结点；</span></span><br><span class="line"><span class="comment">     * 选择排序算法，即每次都选出未排序结点中最小的结点，与第一个未排序的结点交换</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ListNode LinkSort() &#123;</span><br><span class="line">        ListNode cur = head;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ListNode nextNode = cur.<span class="keyword">next</span>;</span><br><span class="line">            <span class="keyword">while</span> (nextNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (cur.data &gt;= nextNode.data) &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = cur.data;</span><br><span class="line">                    cur.data = nextNode.data;</span><br><span class="line">                    nextNode.data = temp;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                nextNode = nextNode.<span class="keyword">next</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cur = cur.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除重复元素；</span></span><br><span class="line"><span class="comment">     * 需要额外的储存空间hashtable,调用hashtable.containsKey()来判断重复结点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> distinctLink() &#123;</span><br><span class="line">        ListNode temp = head;</span><br><span class="line">        ListNode pre = <span class="keyword">null</span>;</span><br><span class="line">        Hashtable&lt;Integer, Integer&gt; hb = <span class="keyword">new</span> Hashtable&lt;Integer, Integer&gt;();</span><br><span class="line">        <span class="keyword">while</span> (temp != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (hb.containsKey(temp.data)) &#123;  <span class="comment">// 如果hashtable中已存在该结点，则跳过该结点</span></span><br><span class="line">                pre.<span class="keyword">next</span> = temp.<span class="keyword">next</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果hashtable中不存在该结点，将结点存到hashtable中</span></span><br><span class="line">                hb.put(temp.data, <span class="number">1</span>);</span><br><span class="line">                pre = temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            temp = temp.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> deleteDuplecate() &#123;</span><br><span class="line">        ListNode cur = head;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ListNode temp = cur.<span class="keyword">next</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (temp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (temp.data == cur.data) &#123;</span><br><span class="line">                    temp.<span class="keyword">next</span> = temp.<span class="keyword">next</span>.<span class="keyword">next</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    temp = temp.<span class="keyword">next</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cur = cur.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回倒数第k个结点；</span></span><br><span class="line"><span class="comment">     * 两个指针，第一个指针向前移动k-1次，之后两个指针共同前进；</span></span><br><span class="line"><span class="comment">     * 当前面的指针到达末尾时，后面的指针所在的位置就是倒数第k个位置</span></span><br><span class="line"><span class="comment">     * @param k</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ListNode findReverNode(<span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &lt; <span class="number">1</span> || k &gt; length()) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        ListNode first = head;</span><br><span class="line">        ListNode second = head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k-<span class="number">1</span>; ++i) first = first.<span class="keyword">next</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (first.<span class="keyword">next</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">            first = first.<span class="keyword">next</span>;</span><br><span class="line">            second = second.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> second;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找正数第k个元素</span></span><br><span class="line"><span class="comment">     * @param k</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ListNode findNode (<span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( k &lt; <span class="number">1</span> || k &gt; length()) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        ListNode temp = head;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k-<span class="number">1</span>; ++i) &#123;</span><br><span class="line">            temp = temp.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 反转链表，在反转指针前必须保存下个结点的指针</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> reserveLink() &#123;</span><br><span class="line">        ListNode curNode = head;</span><br><span class="line">        ListNode preNode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (curNode != <span class="keyword">null</span>)&#123;</span><br><span class="line">            ListNode nextNode = curNode.<span class="keyword">next</span>;</span><br><span class="line">            curNode.<span class="keyword">next</span> = preNode;</span><br><span class="line">            preNode = curNode;</span><br><span class="line">            curNode = nextNode;</span><br><span class="line">        &#125;</span><br><span class="line">        head = preNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 反向输出链表，三种方式：</span></span><br><span class="line"><span class="comment">     * 方法一：先反转链表，再输出链表，需要链表遍历两次。</span></span><br><span class="line"><span class="comment">     * 方法二：把链表中的数字放入栈中再输出，需要维护额外的栈空间</span></span><br><span class="line"><span class="comment">     * 方法三：依据方法二中栈的思想，通过递归来实现，递归起始就是将先执行的数据压入栈中，再一次出栈。</span></span><br><span class="line"><span class="comment">     * @param node</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> reservePrt(ListNode node) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( node != <span class="keyword">null</span>) &#123;</span><br><span class="line">            reservePrt(node.<span class="keyword">next</span>);</span><br><span class="line">            System.out.<span class="keyword">print</span>(node.data + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 寻找单链表的中间结点：</span></span><br><span class="line"><span class="comment">     * 方法一：先求出链表的长度，再遍历1/2链表长度，寻找出链表的中间结点</span></span><br><span class="line"><span class="comment">     * 方法二：用两个指针遍历链表，一个快指针，一个慢指针，</span></span><br><span class="line"><span class="comment">     * 快指针每次向前移动2个结点，慢指针一次向前移动一个结点；</span></span><br><span class="line"><span class="comment">     * 当快指针移动到链表的末尾，慢指针所在的位置即为中间结点所在的位置。</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ListNode findMiddleNode() &#123;</span><br><span class="line">        ListNode slowPoint = head;</span><br><span class="line">        ListNode quickPoint = head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// quickPoint.next == null 是链表结点个数为奇数时，快指针已经走到最后</span></span><br><span class="line">        <span class="comment">// quickPoint.next.next == null 是链表结点数为偶数时，快指针已经走到倒数第二个结点</span></span><br><span class="line">        <span class="comment">// 链表结点个数为奇数时，返回的是中间结点；链表结点个数为偶数时，返回的是中间两个结点中的前一个</span></span><br><span class="line">        <span class="keyword">while</span> (quickPoint.<span class="keyword">next</span> != <span class="keyword">null</span> &amp;&amp; quickPoint.<span class="keyword">next</span>.<span class="keyword">next</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">            slowPoint = slowPoint.<span class="keyword">next</span>;</span><br><span class="line">            quickPoint = quickPoint.<span class="keyword">next</span>.<span class="keyword">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slowPoint;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断链表是否有环；</span></span><br><span class="line"><span class="comment">     * 设置快指针和慢指针，慢指针每次走一步，快指针每次走两步</span></span><br><span class="line"><span class="comment">     * 当快指针与慢指针相等时，就说明该链表有环</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> isRinged() &#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        ListNode slowNode = head;</span><br><span class="line">        ListNode quickNode = head;</span><br><span class="line">        <span class="keyword">while</span> (quickNode.<span class="keyword">next</span> != <span class="keyword">null</span> &amp;&amp; quickNode.<span class="keyword">next</span>.<span class="keyword">next</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">            slowNode = slowNode.<span class="keyword">next</span>;</span><br><span class="line">            quickNode = quickNode.<span class="keyword">next</span>.<span class="keyword">next</span>;</span><br><span class="line">            <span class="keyword">if</span> (quickNode == slowNode) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断两个链表是否相交；</span></span><br><span class="line"><span class="comment">     * 两个链表相交，则他们的尾结点一定相同，比较两个链表的尾结点是否相同即可</span></span><br><span class="line"><span class="comment">     * @param head1</span></span><br><span class="line"><span class="comment">     * @param head2</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> isCross(ListNode head1, ListNode head2) &#123;</span><br><span class="line">        ListNode temp1 = head1;</span><br><span class="line">        ListNode temp2 = head2;</span><br><span class="line">        <span class="keyword">while</span> (temp1.<span class="keyword">next</span> != <span class="keyword">null</span>) temp1 = temp1.<span class="keyword">next</span>;</span><br><span class="line">        <span class="keyword">while</span> (temp2.<span class="keyword">next</span> != <span class="keyword">null</span>) temp2 = temp2.<span class="keyword">next</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (temp1 == temp2) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果两个链表相交，求链表相交的起始点；</span></span><br><span class="line"><span class="comment">     * 首先判断链表是否相交，如果两个链表不相交，则求相交起点没有意义</span></span><br><span class="line"><span class="comment">     * 求出两个链表长度之差，length = len1 - len2</span></span><br><span class="line"><span class="comment">     * 让较长的链表先走len步</span></span><br><span class="line"><span class="comment">     * 然后两个链表同步向前移动，每移动一次就比较他们的结点是否相等，第一个相等的结点即为他们的第一个相交点</span></span><br><span class="line"><span class="comment">     * @param listNodeOperation1</span></span><br><span class="line"><span class="comment">     * @param listNodeOperation2</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ListNode findFirstCrossPoint(ListNodeOperation listNodeOperation1, ListNodeOperation listNodeOperation2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isCross(listNodeOperation1.head,listNodeOperation2.head)) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> len1 = listNodeOperation1.length();</span><br><span class="line">            <span class="keyword">int</span> len2 = listNodeOperation2.length();</span><br><span class="line">            ListNode cur1 = listNodeOperation1.head;</span><br><span class="line">            ListNode cur2 = listNodeOperation2.head;</span><br><span class="line">            <span class="keyword">int</span> length = len1 - len2;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; ++i) cur1 = cur1.<span class="keyword">next</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; ++i) cur2 = cur2.<span class="keyword">next</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (cur1 != cur2) &#123;</span><br><span class="line">                cur1 = cur1.<span class="keyword">next</span>;</span><br><span class="line">                cur2 = cur2.<span class="keyword">next</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> cur1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;链表的各种操作&quot;&gt;&lt;a href=&quot;#链表的各种操作&quot; class=&quot;headerlink&quot; title=&quot;链表的各种操作&quot;&gt;&lt;/a&gt;链表的各种操作&lt;/h3&gt;&lt;p&gt;概念：一种重要的数据结构，储存带院是不连续的，每个结点由两部分组成：&lt;br&gt;储存的数值+前序结点和后序结点的指针，既有前序结点和指针又有后序结点的指针的链表称为双向链表，&lt;br&gt;只包含后序指针的链表为单链表。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="链表" scheme="http://yoursite.com/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>旋转数组的最小数字</title>
    <link href="http://yoursite.com/2020/09/24/%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2020/09/24/旋转数组的最小数字/</id>
    <published>2020-09-24T06:59:56.751Z</published>
    <updated>2020-11-09T08:47:16.628Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。 例如数组[3,4,5,1,2]为[1,2,3,4,5]的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。 </p><a id="more"></a><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入一个非递减排序的数组的一个旋转，所有元素都大于0</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出改旋转数组的最小元素，若数组大小为0，返回0。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>二分查找</strong></p><p>二分查找不仅仅只适用于在有序数组上，如果能够明确二分之后，答案存在于二分的某一侧，就可以使用二分。</p><p>这种二分查找的难点就难在，<code>arr[mid]</code>跟谁进行比较。</p><p>我们的目的是：当进行一次比较的时候，一定能够确定答案就在mid的某一侧，一次比较为<code>arr[mid]</code>跟谁比的问题。</p><p>一般的比较原则是：</p><ul><li>如果有目标值target，那么直接让<code>arr[mid]</code>和target比较即可。</li><li>如果没有目标值，一般可以考虑<strong>端点</strong></li></ul><p>这里我们把target看作是右端点，来进行分析，那就要分析以下三种情况，看是否可以达到上述目标。</p><ol><li><p>情况1，<code>arr[mid] &gt; target: 4 5 6 1 2 3</code></p><ul><li><code>arr[mid] = 6</code>，右端点为3，<code>arr[mid] &gt; target</code>，说明<code>[first ... mid]</code>都是 &gt;= <code>target</code>的，因为原始数组是非递减的，所以可以确定答案为<code>[mid+1 .. last]</code>之间，所以<code>first = mid + 1</code></li></ul></li><li><p>情况2，<code>arr[mid] &lt; target: 5 6 1 2 3 4</code></p><ul><li><code>arr[mid] = 1</code>，<code>target</code>为右端点4，<code>arr[mid] &lt; target</code>，说明答案肯定不在<code>[mid+1 ... last]</code>，但是<code>arr[mid]</code>有可能是答案，所以答案在<code>[first,mid]</code>区间，所以<code>last = mid</code>；</li></ul></li><li><p>情况3，<code>arr[mid] == target</code>:</p><ul><li><p>如果是1 0 1 1 1，<code>arr[mid] = target = 1</code>，答案在左边</p></li><li><p>如果是1 1 1 0 1，<code>arr[mid] = target = 1</code>，答案在右边</p><p>所以这种情况，不能确定答案在左边还是右边，那么就让<code>last = last - 1</code>，慢慢的缩小区间，同时也不会错过答案。</p></li></ul></li></ol><hr><p>举个栗子：</p><p><div align="center"><img src="/2020/09/24/旋转数组的最小数字/one.png" alt></div></p><p><div align="center"><img src="/2020/09/24/旋转数组的最小数字/two.png" alt></div></p><p><div align="center"><img src="/2020/09/24/旋转数组的最小数字/three.png" alt></div></p><hr><p>python3(3.5.2)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minNumberInRotateArray</span><span class="params">(self, rotateArray)</span>:</span></span><br><span class="line">        lenArray = len(rotateArray)</span><br><span class="line">        <span class="keyword">if</span> lenArray == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            first = <span class="number">0</span></span><br><span class="line">            last = lenArray<span class="number">-1</span></span><br><span class="line">            <span class="keyword">while</span> first &lt; last:</span><br><span class="line">                mid = int((first + last) / <span class="number">2</span> <span class="keyword">if</span> (first + last) % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> (first + last - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">                <span class="keyword">if</span> (rotateArray[mid] &gt; rotateArray[last]):</span><br><span class="line">                    first = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> (rotateArray[mid] &lt; rotateArray[last]):</span><br><span class="line">                    last = mid</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    last -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> rotateArray[first]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。 例如数组[3,4,5,1,2]为[1,2,3,4,5]的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="剑指offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>xxx.github.io 拒绝访问</title>
    <link href="http://yoursite.com/2020/09/24/xxx-github-io-%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE/"/>
    <id>http://yoursite.com/2020/09/24/xxx-github-io-拒绝访问/</id>
    <published>2020-09-24T02:14:01.185Z</published>
    <updated>2020-09-24T04:03:29.692Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>hexo 搭建个人博客中<code>hexo s -g</code>能在本地<code>localhost:4000</code>看到生成的博客页面，但是<code>hexo d -g</code>之后出现</p><p><code>xxxx.github.io</code>拒绝了我们的请求，无法访问此网站</p><a id="more"></a><p><div align="center"><img src="/2020/09/24/xxx-github-io-拒绝访问/one.png" alt="拒绝访问"></div></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>在本地dos先<code>ping</code>一下个人博客地址，</p><p>若<code>loss = 0%</code>时，很可能就是出现了访问被服务端拦截，也就是被墙了。</p><p><div align="center"><img src="/2020/09/24/xxx-github-io-拒绝访问/two.png" alt="ping xxx.github.io"></div></p><p>此时只需要<a href="https://jingyan.baidu.com/article/b87fe19e4e1faf5218356839.html" target="_blank" rel="noopener">修改一下本地DNS</a>就为<code>114.114.114.114</code>就可以了。</p><p><div align="center"><img src="/2020/09/24/xxx-github-io-拒绝访问/three.png" alt="修改本地DNS"></div></p><p>若<code>loss = 100%</code>就是博客部署有问题，检查与github仓库是否连接，查看ssh密钥。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;hexo 搭建个人博客中&lt;code&gt;hexo s -g&lt;/code&gt;能在本地&lt;code&gt;localhost:4000&lt;/code&gt;看到生成的博客页面，但是&lt;code&gt;hexo d -g&lt;/code&gt;之后出现&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xxxx.github.io&lt;/code&gt;拒绝了我们的请求，无法访问此网站&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>考研这一路上</title>
    <link href="http://yoursite.com/2019/12/24/%E8%80%83%E7%A0%94%E8%BF%99%E4%B8%80%E8%B7%AF%E4%B8%8A/"/>
    <id>http://yoursite.com/2019/12/24/考研这一路上/</id>
    <published>2019-12-24T02:23:18.656Z</published>
    <updated>2020-09-24T03:20:31.640Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="enter password to read." />    <label for="pass">enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      enter password to read.
    
    </summary>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>阈值分割</title>
    <link href="http://yoursite.com/2019/08/23/%E9%98%88%E5%80%BC%E5%88%86%E5%89%B2/"/>
    <id>http://yoursite.com/2019/08/23/阈值分割/</id>
    <published>2019-08-23T05:20:32.378Z</published>
    <updated>2019-03-09T08:02:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="otsu阈值分割算法及其改进"><a href="#otsu阈值分割算法及其改进" class="headerlink" title="otsu阈值分割算法及其改进"></a>otsu阈值分割算法及其改进</h2><h3 id="一、阈值分割简介"><a href="#一、阈值分割简介" class="headerlink" title="一、阈值分割简介"></a>一、阈值分割简介</h3><p>阈值分隔是一种区域分割技术，它适用于物体与背景有较强对比的景物分割。它计算简单，而且总能用封闭而且连通的边界定义不交叠的区域。当使用阈值规则进行图像分割时，所有灰度值大于或等于某阈值的像素都被判属于物体。 一维Otsu算法有计算简洁、稳定、自适应强等优点，被广泛用于图像分割中。但一维Otsu算法没有考虑图像像素点之间的关系，当图像中有噪声时，会导致分割的效果不理想。因此，刘健庄等人在1993年提出了二维的Otsu算法，提升了算法的抗噪声能力。</p><a id="more"></a><h3 id="二、算法思想及其过程："><a href="#二、算法思想及其过程：" class="headerlink" title="二、算法思想及其过程："></a>二、算法思想及其过程：</h3><blockquote><p>1、统计灰度级中每个像素在整幅图像中的个数。<br>2、计算每个像素在整幅图像的概率分布。<br>3、对灰度级进行遍历搜索，计算当前灰度值下前景背景类间概率。<br>4、通过目标函数计算出类内与类间方差下对应的阈值。</p></blockquote><p>由上述Ostu的基本原理得知，经典的OTSU算法能够很好的分割图像中直方图波峰和波谷不明显的图像，但计算量比较大，即遍历整个图像X的灰度值，并计算每个灰度值的类间方差，然后找出其中最大值，才最终得到最佳阈值，当图像X的尺寸增加时，该算法的计算量急剧增加，效率不高。下面来介绍一种改进的Ostu算法，即二维的Ostu算法。</p><h3 id="三、二维Otsu算法"><a href="#三、二维Otsu算法" class="headerlink" title="三、二维Otsu算法"></a>三、二维Otsu算法</h3><p>同时考虑像素的灰度值分布和它们邻域像素的平均灰度值分布，因此形成的阈值是一个二维矢量，最佳的阈值在一个二维的测度准则下确定最大值时得到。</p><p>（1）设图像I(x,y),的灰度级为L级，那么图像的邻域平均灰度也分为L级。<br>（2）设f(x,y)为像素点(x,y)的灰度值，g(x,y)为像素点(x,y)为中心的K*K的像素点集合的灰度平均值。令f(x,y)=i,g(x,y)=j，然后就形成了一个二元组(i,j)。<br>（3）设二元组（i,j）出现的次数为fij，然后求出二元组对应的概率密度Pij，Pij=fij/N, i,j=1,2，…，L，其中N为图像像素点总数。<br>（4）任意选取一个阈值向量(s,t)选取的阈值向量将图像的二维直方图划分为4个区域，B、C区域代表图像的前景和背景，A、D区域代表噪声点。<br>（5）设C、B两个区域对应的概率分别为w1，w2，对应的均值矢量为u1，u2。整个图片所对应的均值矢量为uT。</p><p><div align="center"><img src="/2019/08/23/阈值分割/one.png" alt title="二维Otsu算法"></div></p><h3 id="四、基于模拟退火的Otsu阈值分割算法"><a href="#四、基于模拟退火的Otsu阈值分割算法" class="headerlink" title="四、基于模拟退火的Otsu阈值分割算法"></a>四、基于模拟退火的Otsu阈值分割算法</h3><h4 id="4-1、模拟退火算法的原理"><a href="#4-1、模拟退火算法的原理" class="headerlink" title="4.1、模拟退火算法的原理"></a>4.1、模拟退火算法的原理</h4><p>模拟退火算法本质上也是一种贪心算法，在每一次迭代时总体上都选择一个当前最优解，但在它搜索的过程中引入了适当的随机因素，能够以一定的概率接受一个恶化解，因而能跳出局部最优的陷阱，求的全局最优解。<br>假设f(x)为优化函数，g(x)为状态产生函数，R为可行解空间，模拟退火的基本描述如下，<br>1、任选一初始状态，计算其目标函数值f(x)，并选择初始控制温度，T0和markov链的长度；<br>2、在R中产生一个随机扰动，令x1=g(x)，计算其目标函数值f(x1)；<br>3、根据状态接受函数判断是否接受，如果f(x1) &lt; f(x0)，则接受新状态x1为当前状态否则按Metropolis准则判决是否接受x1，若接受，则令当前状态等于x1，若不接受，则令当前状态等于x0；<br>4、根据某个收敛准则，判断抽样过程是否终止，是则转5，否则转2；<br>5、按照某个温度冷却方案降低控制温度T；<br>6、根据某个收敛准则，判断模拟退火过程是否终止，是则转7，否则转2；<br>7、当前解作为最优解输出。</p><h4 id="4-2、模拟退火优化的图像和阈值分割算法"><a href="#4-2、模拟退火优化的图像和阈值分割算法" class="headerlink" title="4.2、模拟退火优化的图像和阈值分割算法"></a>4.2、模拟退火优化的图像和阈值分割算法</h4><p>算法的<strong>基本思想</strong>是：以模拟退火智能算法代替原OTSU算法的穷举运算，在解空间中跳跃的搜索图像分割的最佳阈值，减少传统算法的运算量，在获得较好的图像分割效果的基础上，提高算法的效率，Otsu-Sa算法首先绘制图像的直方图，并计算图像像素的灰度均值及累加概率，调用模拟退火算法计算最佳阈值。<br>Ostu-Sa算法的具体描述如下：<br>算法名称：Otsu-Sa<br>输入：原始图像<br>输出：二值化分割图像</p><h4 id="4-2-算法步骤"><a href="#4-2-算法步骤" class="headerlink" title="4.2 算法步骤"></a>4.2 算法步骤</h4><blockquote><p>一：绘制图像的直方图；<br>二：计算图像的灰度总均值；<br>三：计算前i个像素的灰度均值；<br>四：计算像素的累加概率；<br>五：选择优化函数，调用模拟退火算法Sa，计算最佳阈值；<br>六：以步骤五返回的最佳阈值对图像进行二值化分割；</p></blockquote><h3 id="五、处理结果"><a href="#五、处理结果" class="headerlink" title="五、处理结果"></a>五、处理结果</h3><h4 id="GUI导入图片后界面"><a href="#GUI导入图片后界面" class="headerlink" title=" GUI导入图片后界面 "></a><strong> GUI导入图片后界面 </strong></h4><blockquote><p><div align="center"><img src="/2019/08/23/阈值分割/jieguo1.png" alt title="导入图片"></div></p></blockquote><h4 id="Otsu算法结果"><a href="#Otsu算法结果" class="headerlink" title=" Otsu算法结果 "></a><strong> Otsu算法结果 </strong></h4><blockquote><p><div align="center"><img src="/2019/08/23/阈值分割/jieguo2.png" alt title="Otsu阈值分割"></div></p></blockquote><h4 id="二维Otsu算法结果"><a href="#二维Otsu算法结果" class="headerlink" title=" 二维Otsu算法结果 "></a><strong> 二维Otsu算法结果 </strong></h4><blockquote><p><div align="center"><img src="/2019/08/23/阈值分割/jieguo3.png" alt="二维Otsu算法灰度直方图" title="二维Otsu算法灰度直方图"></div></p></blockquote><blockquote><p><div align="center"><img src="/2019/08/23/阈值分割/jieguo4.png" alt="二维Otsu算法结果对比" title="二维Otsu算法结果对比"></div></p></blockquote><h3 id="六、所有代码及文件"><a href="#六、所有代码及文件" class="headerlink" title="六、所有代码及文件"></a>六、所有代码及文件</h3><p><a href="https://github.com/YiMoFan/Otsu" title="阈值分割" target="_blank" rel="noopener"><strong> 阈值分割 </strong></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;otsu阈值分割算法及其改进&quot;&gt;&lt;a href=&quot;#otsu阈值分割算法及其改进&quot; class=&quot;headerlink&quot; title=&quot;otsu阈值分割算法及其改进&quot;&gt;&lt;/a&gt;otsu阈值分割算法及其改进&lt;/h2&gt;&lt;h3 id=&quot;一、阈值分割简介&quot;&gt;&lt;a href=&quot;#一、阈值分割简介&quot; class=&quot;headerlink&quot; title=&quot;一、阈值分割简介&quot;&gt;&lt;/a&gt;一、阈值分割简介&lt;/h3&gt;&lt;p&gt;阈值分隔是一种区域分割技术，它适用于物体与背景有较强对比的景物分割。它计算简单，而且总能用封闭而且连通的边界定义不交叠的区域。当使用阈值规则进行图像分割时，所有灰度值大于或等于某阈值的像素都被判属于物体。 一维Otsu算法有计算简洁、稳定、自适应强等优点，被广泛用于图像分割中。但一维Otsu算法没有考虑图像像素点之间的关系，当图像中有噪声时，会导致分割的效果不理想。因此，刘健庄等人在1993年提出了二维的Otsu算法，提升了算法的抗噪声能力。&lt;/p&gt;
    
    </summary>
    
    
      <category term="图像处理" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>母牛的故事</title>
    <link href="http://yoursite.com/2019/08/23/%E6%AF%8D%E7%89%9B%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    <id>http://yoursite.com/2019/08/23/母牛的故事/</id>
    <published>2019-08-23T05:20:32.376Z</published>
    <updated>2020-09-24T07:05:42.226Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>有一头母牛，它每年年初生一头小母牛。每头小母牛从第四个年头开始，<br>每年年初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(0&lt;n&lt;55)，<br>n的含义如题目中描述。n=0表示输入数据的结束，不做处理。</p></blockquote><a id="more"></a><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>对于每个测试实例，输出在第n年的时候母牛的数量。<br>每个输出占一行。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>2<br>4<br>5<br>0</p></blockquote><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>2<br>4<br>6</p></blockquote><p>将每一年的牛数分为母牛数和小牛数，然后分别列举出前五年的母牛数和小牛数</p><table><thead><tr><th style="text-align:center">年份</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">母牛数</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">小牛数</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">3</td></tr></tbody></table><p>小牛每四年变为母牛，则第五年之后的每一年的母牛数就为前一年的母牛数加上第前三年的母牛数<br>（不是小牛数是因为这个时候的小牛数包括这一年的母牛数和前几年的母牛数，而这一年产生的小牛数就等于这一年的母牛数）,<br>a为母牛，b为小牛。则<code>a[i] = a[i-1]+a[i-3]</code><br>第五年之后的小牛数就为该年的母牛数前面算的为<code>a[i-1]+a[i-3]</code>加上前一年的小牛数<code>b[i-1]</code>在减去这一年从小牛变为母牛的数量<code>a[i-3]</code>。<br>所以<code>b[i] = a[i-1]+a[i-3]+b[i-1]-a[i-3] = a[i-1]+b[i-1]</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">10000</span>] = &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> b[<span class="number">10000</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)) &#123;</span><br><span class="line"><span class="keyword">if</span> (!n) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">3</span>) </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a[n<span class="number">-1</span>]+b[n<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>; i &lt; n; ++i) &#123;</span><br><span class="line">a[i] = a[i<span class="number">-1</span>] + a[i<span class="number">-3</span>];</span><br><span class="line">b[i] = b[i<span class="number">-1</span>] + a[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a[n<span class="number">-1</span>] + b[n<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;有一头母牛，它每年年初生一头小母牛。每头小母牛从第四个年头开始，&lt;br&gt;每年年初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(0&amp;lt;n&amp;lt;55)，&lt;br&gt;n的含义如题目中描述。n=0表示输入数据的结束，不做处理。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="递推" scheme="http://yoursite.com/tags/%E9%80%92%E6%8E%A8/"/>
    
  </entry>
  
  <entry>
    <title>数学建模国赛</title>
    <link href="http://yoursite.com/2019/08/23/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%BD%E8%B5%9B/"/>
    <id>http://yoursite.com/2019/08/23/数学建模国赛/</id>
    <published>2019-08-23T05:20:32.372Z</published>
    <updated>2019-08-30T09:12:19.306Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="enter password to read." />    <label for="pass">enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      enter password to read.
    
    </summary>
    
    
      <category term="数学建模" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>数字图像处理</title>
    <link href="http://yoursite.com/2019/08/23/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2019/08/23/数字图像处理/</id>
    <published>2019-08-23T05:20:32.369Z</published>
    <updated>2020-09-24T04:03:11.386Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数字图像处理基础"><a href="#数字图像处理基础" class="headerlink" title="数字图像处理基础"></a>数字图像处理基础</h2><p>首先是读取图片文件<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">clc;<span class="built_in">close</span>;</span><br><span class="line"><span class="built_in">clear</span> all;</span><br><span class="line"></span><br><span class="line">num_I = imread(<span class="string">'pathname'</span>);</span><br><span class="line">imfinfo =(<span class="string">'pathname'</span>)  % 输出图像的基本信息</span><br></pre></td></tr></table></figure></p><p>其中pathname为路径名，最好为绝对路径，如果为相对路径必须让matlab的工作路径与图片路径一致。</p><a id="more"></a><p>然后就会的得到图像的图像矩阵，格式为uint8<br>如果为rgb图像就会是一个三维的矩阵，灰度图就是一个一维的图像矩阵。<br>所以只需要对图像的数字矩阵处理。</p><p>比如简单的将图像分割为四个部分</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">clc;close;</span><br><span class="line">clear all;</span><br><span class="line">num = imread(<span class="string">'cameraman.tif'</span>);</span><br><span class="line">[row,col] = <span class="built_in">size</span>(num);  <span class="comment">% 提取矩阵的行和列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ii = <span class="number">1</span>:<span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> jj = <span class="number">1</span>:<span class="number">2</span></span><br><span class="line">        <span class="comment">% 将图片分割成四部分组成一个元胞数组</span></span><br><span class="line">        image&#123;ii,jj&#125;=num((ii<span class="number">-1</span>)*col/<span class="number">2</span>+<span class="number">1</span>:ii*col/<span class="number">2</span>,(jj<span class="number">-1</span>)*col/<span class="number">2</span>+<span class="number">1</span>:jj*col/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);imshow(image&#123;<span class="number">1</span>,<span class="number">1</span>&#125;);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);imshow(image&#123;<span class="number">1</span>,<span class="number">2</span>&#125;);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);imshow(image&#123;<span class="number">2</span>,<span class="number">1</span>&#125;);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);imshow(image&#123;<span class="number">2</span>,<span class="number">2</span>&#125;);</span><br></pre></td></tr></table></figure><p>基本的方法就是将原图像矩阵分割成相同大小的四个子矩阵。</p><p>还有图像的加减乘除运算：<br><figure class="highlight tp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Z</span>=imadd(<span class="keyword">X</span>,<span class="keyword">Y</span>);  %图像的加运算，<span class="keyword">X</span>,<span class="keyword">Y</span>是输入的两幅图像，其中一个可以是常数</span><br><span class="line"><span class="keyword">Z</span>=imsubtract(<span class="keyword">X</span>,<span class="keyword">Y</span>);  %图像的减运算，<span class="keyword">Y</span>可以是常数</span><br><span class="line"><span class="keyword">Z</span>=immiltiply(<span class="keyword">X</span>,y);  %图像的乘运算，<span class="keyword">Y</span>也可以是常数</span><br><span class="line"><span class="keyword">Z</span>=imdivide(<span class="keyword">X</span>,y);  %图像的除运算，<span class="keyword">Y</span>也可以是常数</span><br></pre></td></tr></table></figure></p><p>图像的输出为：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imshow(<span class="built_in">image</span>);  % <span class="built_in">image</span> 为图像矩阵</span><br></pre></td></tr></table></figure></p><p>然后就是图像类型格式转换的一些函数，主要的作用就是改变图像的格式，可以对图像矩阵进行处理。</p><p>常用的有：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I=rgb2gray(RGB)%将一副灰度图转换为真彩色图</span><br><span class="line">[X,map]=rgb2ind(RGB,n)%将RGB图转换为索引色图</span><br><span class="line">BW=im2bw(I,level)%将真彩色图或灰度图转换为二值图，level为阈值</span><br></pre></td></tr></table></figure></p><p>因为现阶段的图像处理一般都是对灰度图像的处理，所以一般都会用到<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image</span> = rgb2gray(I)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>然后统计图像的灰度值的分布称为直方图<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imhist<span class="comment">(img)</span>; <span class="meta">%</span> img 为矩阵图像的灰度值</span><br></pre></td></tr></table></figure></p><p>二值化图像就是图像矩阵中只有0和1两个元素，称为逻辑矩阵。<br>将一个图片转换为二值化图片的过程为图像二值化，确定阈值的方法为阈值分割。</p><p>介绍一种常用的方法为：<strong>otsu阈值分割算法</strong></p><blockquote><p>对图像I(x,y)，前景和背景的分割阈值记作T，<br>前景像素点数占整幅图像的比例为ω0，其平均灰度μ0；<br>背景像素点数占整幅图像的比例为ω1，其平均灰度μ1；<br>图像的总平均灰度记为μ=ω0∗μ0 +ω1∗μ1；<br>类间方差记为g。<br>假设：<br>背景较暗，且图像的大小为M×N，<br>图像中，<br>像素灰度值小于阈值T的像素个数记作N0，<br>像素灰度值大于阈值T的像素个数记作N1，<br>则有：</p></blockquote><p>　　　　　　ω0 = N0 / M×N ；      (1)</p><p>　　　　　　ω1 = N1 / M×N ；      (2)</p><p>　　　　　　N0 + N1 = M×N ；       (3)</p><p>　　　　　　ω0+ω1=1；           (4)</p><p>　　　　　　μ=ω0<em>μ0+ω1</em>μ1；  (5)</p><p>　　　　　　g =ω0(μ0-μ)^2+ω1(μ1-μ)^2；(6)</p><blockquote><p>将式(5)代入式(6),得到等价公式:</p></blockquote><p>　　　　　　g=ω0<em>ω1</em>(μ0-μ1)^2; 　(7)　这就是类间方差</p><blockquote><p>采用遍历的方法得到使类间方差g最大的阈值T,即为所求。</p></blockquote><p>在matlab中有一个函数可以直接运行：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I = imread('chepai.jpg')<span class="comment">;</span></span><br><span class="line">I = rgb2gray(<span class="name">I</span>)<span class="comment">;</span></span><br><span class="line">T2 = graythresh(<span class="name">I</span>)<span class="comment">;</span></span><br><span class="line">num2 = im2bw(<span class="name">I</span>,T2)<span class="comment">;</span></span><br><span class="line">imshow(<span class="name">num2</span>)</span><br></pre></td></tr></table></figure></p><h2 id="数学建模"><a href="#数学建模" class="headerlink" title="数学建模"></a>数学建模</h2><blockquote><p>1、数学建模的重要性，能参加的最好参加一下，涉及的知识面很广，提高眼界。<br>2、队友，不一定非要求理学院，计算机学院，经济学院<br>3、心态很重要。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数字图像处理基础&quot;&gt;&lt;a href=&quot;#数字图像处理基础&quot; class=&quot;headerlink&quot; title=&quot;数字图像处理基础&quot;&gt;&lt;/a&gt;数字图像处理基础&lt;/h2&gt;&lt;p&gt;首先是读取图片文件&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;clc;&lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt; all;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num_I = imread(&lt;span class=&quot;string&quot;&gt;&#39;pathname&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imfinfo =(&lt;span class=&quot;string&quot;&gt;&#39;pathname&#39;&lt;/span&gt;)  % 输出图像的基本信息&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中pathname为路径名，最好为绝对路径，如果为相对路径必须让matlab的工作路径与图片路径一致。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数字图像处理" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
</feed>
